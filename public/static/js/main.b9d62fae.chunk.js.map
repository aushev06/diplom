{"version":3,"sources":["redux/reducers/index.js","redux/reducers/appReducer.js","redux/reducers/userReducer.js","redux/reducers sync /^/.*$","components/Block/index.jsx","components/Button/index.jsx","utils/helpers/validateField.js","components/LetterOrAvatar/index.jsx","utils/helpers/getAvatarColor.js","core/config/axios.js","core/api/user.js","core/api/client.js","core/api/food.js","core/api/order.js","components/BottomNav/index.jsx","components/SearchAddress/index.jsx","pages/Auth/components/Login/components/LoginForm.jsx","utils/validate.js","pages/Auth/components/Login/containers/LoginFormContainer.jsx","pages/Auth/components/Signup/components/RegisterForm.jsx","pages/Auth/components/Signup/containers/RegisterFormContainer.jsx","pages/Auth/index.jsx","pages/Orders/index.jsx","pages/Statistics/index.jsx","pages/Clients/index.jsx","pages/Clients/Client.jsx","pages/Clients/component/ClientForm.jsx","pages/Foods/index.jsx","pages/Foods/Food.jsx","pages/Foods/component/FoodForm.jsx","pages/Orders/ShowOrder/index.jsx","pages/Orders/OrderForm/FormProvider.js","pages/Orders/OrderForm/_form.jsx","pages/Orders/OrderForm/index.jsx","pages/Orders/ShowOrder/Taxi.jsx","pages/Home/index.jsx","App.js","redux/store.js","serviceWorker.js","redux/actions/user.js","redux/actions/app.js","index.js","redux/actionTypes.js"],"names":["combineReducers","reduce","initial","name","require","default","initialState","isReady","state","type","payload","APP_SET_IS_READY","initialUser","user","SET_USER","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Block","children","className","classNames","Button","props","size","key","touched","errors","url","letter","src","bgColor","charCode","charCodeAt","background","color","avatarColor","style","backgroundColor","axios","defaults","baseURL","process","withCredentials","data","csrf","then","response","post","remember","get","r","window","location","reload","catch","error","console","log","cancel","CancelToken","apiClient","save","put","params","cancelToken","c","getList","show","a","delete","apiFood","formData","FormData","append","price","image","apiOrder","setStatus","status","getStatistic","to","pathname","PieChartOutlined","includes","UserOutlined","ShopOutlined","onClick","confirm","userApi","LoginOutlined","item","callback","React","useState","setData","myTimeout","setMyTimeout","value","setValue","useEffect","address","text","clearTimeout","temp","setTimeout","headers","items","responseItem","idx","push","finally","Item","validateStatus","length","help","hasFeedback","width","onChange","val","onSearch","options","onSelect","option","find","LoginForm","values","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","onSubmit","validateField","email","prefix","MailOutlined","placeholder","onBlur","password","LockOutlined","disabled","isAuth","rules","test","password_confirmation","phone","forEach","LoginFormContainer","withFormik","enableReinitialize","mapPropsToValues","validate","validateForm","setSubmitting","setErrors","undefined","replace","displayName","RegisterForm","fontSize","RegisterFormContainer","Auth","exact","path","component","statuses","0","1","2","mockData","Array","fill","loading","Orders","orders","setOrders","Date","toJSON","split","date","setDate","orderApi","date_from","margin","dateString","history","orderItem","avatar","title","active","Meta","description","imageStyle","height","TabPane","Tabs","setType","_","defaultActiveKey","tab","display","justifyContent","alignItems","count","total","Clients","clientApi","orientation","dataItem","actions","stopPropagation","Card","Modal","Client","client","setClient","setLoading","match","marginTop","EditOutlined","DeleteOutlined","icon","ExclamationCircleOutlined","content","okText","okType","cancelText","onOk","onCancel","ClientForm","formik","useFormik","initialValues","notification","message","setValues","hasOwnProperty","Fragment","PhoneOutlined","HomeOutlined","Foods","foodApi","img","Food","food","setFood","FoodForm","setImg","fileProps","beforeUpload","file","action","fileList","defaultFileList","showUploadList","BookOutlined","DollarOutlined","marginBottom","UploadOutlined","Title","Typography","Option","Select","ShowOrder","order","setOrder","changeStatus","setChangeStatus","err","label","total_sum","overflowCount","date_delivery","defaultValue","level","itemLayout","dataSource","foods","renderItem","pivot","comment","unit","shape","CarOutlined","FormContext","createContext","clientId","time_delivery","FormProvider","foodID","cart","setCart","sum","setSum","setFoods","clients","setClients","setIsReady","selectedClient","setSelectedClient","Promise","all","tempCart","cloneDeep","splice","filter","client_id","join","Provider","field","tempSum","cartItem","priceItem","parseInt","handleChangeFood","pushItem","context","useContext","refInput","useRef","ref","showSearch","optionFilterProp","filterOption","input","toLowerCase","indexOf","format","showIcon","target","Send","Success","useHistory","subTitle","extra","Container","_form","OrderForm","Taxi","from","setFrom","setTo","setPhone","coast","setCoast","setComment","useCallback","document","querySelector","addEventListener","mask","phoneFromStorage","localStorage","getItem","itemFromFromStorage","json","JSON","parse","orderCoast","lat","lon","toISOString","event","matrix","this","i","def","charAt","lastIndexOf","substr","pos","elem","focus","setSelectionRange","createTextRange","range","collapse","moveEnd","moveStart","select","setCursorPosition","checkAddress","itemAddress","prevAddress","openNotificationWithIcon","SearchAddress","stringify","setItem","href","preventDefault","TextArea","errorField","alert","Content","Layout","Footer","Sider","HomePage","collapsed","setCollaps","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","OrderedListOutlined","padding","Statistics","navigator","userAgent","textAlign","connect","userReducer","appReducer","GuestRoute","PrivateRoute","Home","rest","render","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","init","dispatch","userActions","setAppIsready","appActions","ReactDOM","getElementById","URL","origin","fetch","contentType","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b9d62fae.chunk.js","sourcesContent":["import {combineReducers} from \"redux\";\r\n\r\nconst reducers = [\"userReducer\", \"appReducer\"];\r\n\r\nexport default combineReducers(\r\n    reducers.reduce((initial, name) => {\r\n        initial[name] = require(`./${name}`).default;\r\n        return initial;\r\n    }, {})\r\n);","import {APP_SET_IS_READY} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    isReady: false\r\n};\r\n\r\nexport default function (state = initialState, {type, payload}) {\r\n    if (type === APP_SET_IS_READY) {\r\n        return {\r\n            ...state,\r\n            isReady: payload\r\n        };\r\n    }\r\n\r\n    return state;\r\n}","import {SET_USER} from \"../actionTypes\";\r\n\r\nconst initialUser = {\r\n    user: null\r\n}\r\n\r\nexport default (state = initialUser, {type, payload}) => {\r\n    switch (type) {\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","var map = {\n\t\"./\": 117,\n\t\"./appReducer\": 250,\n\t\"./appReducer.js\": 250,\n\t\"./index\": 117,\n\t\"./index.js\": 117,\n\t\"./userReducer\": 251,\n\t\"./userReducer.js\": 251\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 553;","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Block.scss\";\r\n\r\nconst Block = ({ children, className }) => (\r\n    <div className={classNames(\"block\", className)}>{children}</div>\r\n);\r\n\r\nexport default Block;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button as BaseButton } from \"antd\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Button.scss\";\r\n\r\nconst Button = props => (\r\n    <BaseButton\r\n        {...props}\r\n        className={classNames(\"button\", props.className, {\r\n            \"button--large\": props.size === \"large\"\r\n        })}\r\n    />\r\n);\r\n\r\nButton.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default Button;","export default (key, touched, errors) => {\r\n    if (touched[key]) {\r\n        if (errors[key]) {\r\n            return \"error\";\r\n        } else {\r\n            return \"success\";\r\n        }\r\n    } else {\r\n        return \"\";\r\n    }\r\n};","import React from 'react';\r\nimport {avatarColor} from 'utils/helpers'\r\nimport {Avatar} from \"antd\";\r\n\r\nimport './LetterOrAvatar.scss';\r\n\r\nexport default ({url, letter, name}) => {\r\n    if (url) {\r\n        return <Avatar className={\"avatar\"} src={url}/>\r\n    }\r\n\r\n    const bgColor = avatarColor(name || letter);\r\n\r\n    return (\r\n        <div className={\"avatar\"} style={{backgroundColor: `${bgColor.background}`}}>\r\n            <div className={\"avatar__letter\"} style={{color: bgColor.color}}>\r\n                {letter}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","export default letter => {\r\n    const charCode = letter.charCodeAt();\r\n\r\n    if (charCode >= 1048 && charCode <= 1055) {\r\n        return {\r\n            background: '#F5D6D9',\r\n            color: '#F38181',\r\n        };\r\n    }\r\n    if (charCode >= 1049 && charCode <= 1063) {\r\n        return {\r\n            background: '#F8ECD5',\r\n            color: '#F1A32F',\r\n        };\r\n    }\r\n    if (charCode >= 1064 && charCode <= 1071) {\r\n        return {\r\n            background: '#DAD5F8',\r\n            color: '#816CFF',\r\n        };\r\n    }\r\n    return {\r\n        background: '#E9F5FF',\r\n        color: '#2A86FF',\r\n    };\r\n};","import axios from 'axios';\r\n// axios.defaults.baseURL = 'http://diplom.gussi-gussi.com';\r\naxios.defaults.baseURL = process.env.REACT_APP_URL || 'http://192.168.31.183:8000';\r\naxios.defaults.withCredentials = true;\r\n\r\n\r\nexport default axios;","import axios from \"../config/axios\";\r\n\r\naxios.defaults.withCredentials = true;\r\nexport default {\r\n    register: (data) => {\r\n        return csrf().then(response => {\r\n            return axios.post('/register', {...data, remember: 'on'})\r\n        })\r\n    },\r\n\r\n    login: (data) => {\r\n        return csrf().then(response => {\r\n            return axios.post('/login', {...data, remember: 'on'})\r\n        })\r\n\r\n    },\r\n\r\n    me: () => {\r\n        return csrf().then(response => {\r\n            return axios.get('/api/user')\r\n        })\r\n    },\r\n\r\n    logout: () => {\r\n        csrf().then(r => {\r\n            axios.post('/logout')\r\n                .then(response => {\r\n                    window.location.reload();\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.response);\r\n                })\r\n        })\r\n    }\r\n\r\n}\r\n\r\nfunction csrf() {\r\n    axios.defaults.withCredentials = true;\r\n    return axios.get('/sanctum/csrf-cookie')\r\n}","import axios from '../config/axios';\r\n\r\nconst CancelToken = axios.CancelToken;\r\n\r\nlet cancel;\r\nconst apiClient = {\r\n    save: (data) => {\r\n        if (null !== data.id && \"\" !== data.id) {\r\n            return axios.put(`/api/clients/${data.id}`, data);\r\n        }\r\n\r\n\r\n        return axios.post('/api/clients', data);\r\n    },\r\n\r\n    get: (params = null) => {\r\n        return csrf().then(response => {\r\n            return axios.get('/api/clients', {\r\n                params,\r\n                cancelToken: new CancelToken(function executor(c) {\r\n                    // An executor function receives a cancel function as a parameter\r\n                    cancel = c;\r\n                })\r\n            })\r\n        })\r\n    },\r\n\r\n    getList: (params = null) => {\r\n        return axios.get('/api/clients/list', params)\r\n    },\r\n\r\n    show: async (id) => {\r\n        return await axios.get(`/api/clients/${id}`);\r\n    },\r\n\r\n    delete: id => axios.delete(`/api/clients/${id}`),\r\n\r\n    cancel: function () {\r\n        cancel();\r\n    }\r\n\r\n}\r\n\r\nfunction csrf() {\r\n    axios.defaults.withCredentials = true;\r\n    return axios.get('/sanctum/csrf-cookie')\r\n}\r\n\r\nexport default apiClient;","import axios from '../config/axios';\r\n\r\nconst CancelToken = axios.CancelToken;\r\n\r\nlet cancel;\r\n\r\nconst apiFood = {\r\n    save: (data) => {\r\n        const formData = new FormData();\r\n        formData.append(\"name\", data.name);\r\n        formData.append(\"price\", data.price);\r\n\r\n        if (data.image !== null) {\r\n            formData.append(\"img\", data.image);\r\n        }\r\n\r\n\r\n        if (data.id) {\r\n            formData.append('_method', 'PATCH')\r\n            return axios.post(`/api/foods/${data.id}`, formData);\r\n        }\r\n\r\n\r\n        return axios.post('/api/foods', formData);\r\n    },\r\n\r\n    cancel: function () {\r\n        cancel();\r\n    },\r\n    get: (params = null) => {\r\n        return axios.get('/api/foods', {\r\n            params,\r\n            cancelToken: new CancelToken(function executor(c) {\r\n                // An executor function receives a cancel function as a parameter\r\n                cancel = c;\r\n            })\r\n        })\r\n\r\n    },\r\n\r\n    getList: (params = null) => {\r\n        return axios.get('/api/foods/list', params);\r\n    },\r\n\r\n    show: (id) => {\r\n        return axios.get(`/api/foods/${id}`);\r\n    },\r\n\r\n    delete: id => axios.delete(`/api/foods/${id}`)\r\n}\r\n\r\nexport default apiFood;","import axios from '../config/axios';\r\n\r\nconst apiOrder = {\r\n    save: data => {\r\n        return csrf().then(r => {\r\n            return axios.post('/api/orders', data)\r\n        });\r\n    },\r\n\r\n    get: (params = {}) => {\r\n        return csrf().then(r => {\r\n            return axios.get('/api/orders', {params});\r\n        })\r\n    },\r\n\r\n    show: (id) => {\r\n       return csrf().then(r => {\r\n           return axios.get(`/api/orders/${id}`);\r\n       })\r\n    },\r\n\r\n    setStatus: (id, status) => {\r\n        return csrf().then(r => {\r\n            return axios.put(`/api/orders/${id}`, {status: status})\r\n        })\r\n    },\r\n\r\n    delete: id => {\r\n        return csrf().then(r => {\r\n            return axios.delete(`/api/orders/${id}`);\r\n        })\r\n    },\r\n\r\n    getStatistic: (params, type) => {\r\n        return csrf().then(r => {\r\n            return axios.get('/api/stats', {params: {...params, type}})\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction csrf() {\r\n    axios.defaults.withCredentials = true;\r\n    return axios.get('/sanctum/csrf-cookie')\r\n}\r\n\r\nexport default apiOrder;","import React from \"react\";\r\nimport {\r\n    PieChartOutlined,\r\n    UserOutlined,\r\n    ShopOutlined,\r\n    LoginOutlined\r\n} from '@ant-design/icons'\r\n\r\nimport './BottomNav.scss';\r\nimport {Link} from \"react-router-dom\";\r\nimport {userApi} from \"../../core/api\";\r\n\r\nexport default () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <Link to=\"/\" className={window.location.pathname === '/' ? 'active' : ''}>\r\n                <PieChartOutlined/>\r\n                <span> Заказы</span>\r\n            </Link>\r\n            <Link to=\"/clients\" className={window.location.pathname.includes('clients') ? 'active' : ''}>\r\n                <UserOutlined/>\r\n                <span> Клиенты</span>\r\n            </Link>\r\n\r\n            <Link to=\"/foods\" className={window.location.pathname.includes('foods') ? 'active' : ''}>\r\n                <ShopOutlined/>\r\n                <span> Ассортимент</span>\r\n            </Link>\r\n\r\n            <Link to=\"/#\" onClick={e => {\r\n                if (window.confirm('Вы действительно хотите покинуть сайт ?')) {\r\n                    userApi.logout();\r\n                }\r\n            }}>\r\n                <LoginOutlined/>\r\n                <span> Выйти</span>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport {AutoComplete, Form} from 'antd';\r\n\r\nexport default ({item, callback}) => {\r\n    const [data, setData] = React.useState([]);\r\n    const [myTimeout, setMyTimeout] = React.useState(null)\r\n    const [value, setValue] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        if (item) {\r\n            setValue(item.address)\r\n            get(item.address);\r\n        }\r\n    }, [item]);\r\n\r\n    const handleSearchFrom = (text) => {\r\n        setValue(text)\r\n        if (\"\" !== text) {\r\n            get(text);\r\n        }\r\n    }\r\n\r\n\r\n    const handleSelect = option => {\r\n        const item = data.find(item => item.value === option)\r\n        callback(item);\r\n    }\r\n\r\n    const get = text => {\r\n        if (myTimeout) {\r\n            clearTimeout(myTimeout);\r\n        }\r\n        const temp = setTimeout(() => {\r\n            setData([]);\r\n            const config = {\r\n                \"headers\": {\r\n                    \"Sec-Fetch-Dest\": \"empty\",\r\n                    \"Sec-Fetch-Mod\": \"cors\",\r\n                    \"Sec-Fetch-Site\": \"same-origin\",\r\n                    \"X-Site-VtmId\": \"134\",\r\n                    \"X-Site-VtmGroupId\": \"56\",\r\n                    \"Accept\": \"*/*\"\r\n                },\r\n            }\r\n            axios.defaults.withCredentials = false;\r\n            axios.get('https://websites.platform.taximaster.ru/v2/find_address?needle=' + text, {headers: config.headers})\r\n                .then(response => {\r\n                    const items = []\r\n\r\n                    response.data.map((responseItem, idx) => {\r\n                        if (idx <= 9) {\r\n                            items.push(responseItem)\r\n                        }\r\n\r\n                    })\r\n\r\n                    setData(items);\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.response)\r\n                })\r\n                .finally(() => {\r\n                })\r\n        }, 500)\r\n\r\n        setMyTimeout(temp)\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <Form.Item validateStatus={data.length !== 0 ? 'success' : 'error'} help={data.length !== 0 ? '' : 'Не удалось найти такой адрес'}\r\n                      hasFeedback>\r\n               <AutoComplete  value={value} style={{width: '100%'}} onChange={val => setValue(val)}\r\n                             onSearch={handleSearchFrom} options={data} onSelect={handleSelect}/>\r\n           </Form.Item>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Form, Input} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {MailOutlined, LockOutlined} from '@ant-design/icons';\r\n\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\n\r\nconst LoginForm = props => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isValid,\r\n        isSubmitting\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"auth__top\">\r\n                <h2>Войти в аккаунт</h2>\r\n                <p>Пожалуйста, войдите в свой аккаунт</p>\r\n            </div>\r\n            <Block>\r\n                <Form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"email\", touched, errors)}\r\n                        help={!touched.email ? \"\" : errors.email}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"email\"\r\n                            prefix={<MailOutlined type=\"mail\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            placeholder=\"E-Mail\"\r\n                            value={values.email}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"password\", touched, errors)}\r\n                        help={!touched.password ? \"\" : errors.password}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"password\"\r\n                            prefix={<LockOutlined type=\"lock\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Пароль\"\r\n                            value={values.password}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={isSubmitting}\r\n                            onClick={handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"large\"\r\n                        >\r\n                            Войти в аккаунт\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <Link className=\"auth__register-link\" to=\"/signup\">\r\n                        Зарегистрироваться\r\n                    </Link>\r\n                </Form>\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","export default ({ isAuth, values, errors }) => {\r\n\r\n\r\n    const rules = {\r\n        email: value => {\r\n            if (!value) {\r\n                errors.email = \"Введите E-Mail\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n                errors.email = \"Неверный E-Mail\";\r\n            }\r\n        },\r\n        password: value => {\r\n            if (!value) {\r\n                errors.password = \"Введите пароль\";\r\n            } else if (\r\n                !isAuth &&\r\n                !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(value)\r\n            ) {\r\n                errors.password = \"Слишком лёгкий пароль\";\r\n            }\r\n        },\r\n        password_confirmation: value => {\r\n\r\n            if (!value) {\r\n                errors.password_confirmation = \"Введите пароль повторно\";\r\n            }\r\n\r\n            if (!isAuth || value !== values.password) {\r\n                errors.password_confirmation = \"Пароли не совпадают\";\r\n            }\r\n        },\r\n        name: value => {\r\n            if (!isAuth || !value) {\r\n                errors.name = \"Укажите имя и фамилию\";\r\n            }\r\n        },\r\n\r\n        phone: value => {\r\n            if (!isAuth || !value) {\r\n                errors.phone = \"Укажите номер телефона\";\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n};","import {withFormik} from 'formik';\r\n\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nimport validateForm from 'utils/validate';\r\nimport {userApi} from \"core/api\";\r\n\r\nconst LoginFormContainer = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: '',\r\n    }),\r\n    validate: values => {\r\n        let errors = {};\r\n\r\n        validateForm({isAuth: true, values, errors});\r\n\r\n        return errors;\r\n    },\r\n    handleSubmit: async (values, {setSubmitting, setErrors, props}) => {\r\n        await userApi.login(values).catch(errors => {\r\n            if (errors.response !== undefined) {\r\n                let error = {};\r\n                Object.keys(errors.response.data.errors).forEach(key => {\r\n                    error[key] = errors.response.data.errors[key][0];\r\n                });\r\n                setErrors(error)\r\n            }\r\n        }).then(response => {\r\n            userApi.me().then(r => {\r\n                window.location.replace('/')\r\n            });\r\n            setSubmitting(false);\r\n        });\r\n    },\r\n    displayName: 'LoginForm',\r\n})(LoginForm);\r\n\r\nexport default LoginFormContainer;","import React from \"react\";\r\nimport {Form, Input} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {MailOutlined, LockOutlined, UserOutlined} from '@ant-design/icons';\r\n\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\n\r\nconst RegisterForm = props => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isValid,\r\n        isSubmitting\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"auth__top\">\r\n                <h2>Зарегистрироваться</h2>\r\n                <p style={{fontSize: 14}}>Пожалуйста, пройдите регистрацию</p>\r\n            </div>\r\n            <Block>\r\n                <Form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"email\", touched, errors)}\r\n                        help={!touched.email ? \"\" : errors.email}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"email\"\r\n                            prefix={<MailOutlined type=\"mail\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            placeholder=\"E-Mail\"\r\n                            value={values.email}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"name\", touched, errors)}\r\n                        help={!touched.name ? \"\" : errors.name}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"name\"\r\n                            prefix={<UserOutlined type=\"user\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            placeholder=\"Имя\"\r\n                            value={values.name}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"password\", touched, errors)}\r\n                        help={!touched.password ? \"\" : errors.password}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"password\"\r\n                            prefix={<LockOutlined type=\"lock\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Пароль\"\r\n                            value={values.password}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"password_confirmation\", touched, errors)}\r\n                        help={!touched.password_confirmation ? \"\" : errors.password_confirmation}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"password_confirmation\"\r\n                            prefix={<LockOutlined type=\"lock\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Повторите пароль\"\r\n                            value={values.password_confirmation}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={isSubmitting}\r\n                            onClick={handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"large\"\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <Link className=\"auth__register-link\" to=\"/login\">\r\n                        У меня уже есть аккаунт\r\n                    </Link>\r\n                </Form>\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;","import {withFormik} from 'formik';\r\n\r\nimport RegisterForm from '../components/RegisterForm';\r\n\r\nimport validateForm from 'utils/validate';\r\nimport {userApi} from \"core/api\";\r\n\r\nconst RegisterFormContainer = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: '',\r\n        name: '',\r\n        password_confirmation: ''\r\n    }),\r\n    validate: values => {\r\n        let errors = {};\r\n\r\n        validateForm({isAuth: true, values, errors});\r\n\r\n\r\n        return errors;\r\n    },\r\n    handleSubmit: (values, {setSubmitting, setErrors, props}) => {\r\n        userApi.register(values)\r\n            .then(r => {\r\n                userApi.me().then(r => {\r\n                    window.location.replace('/');\r\n                });\r\n            })\r\n            .catch(errors => {\r\n                if (errors.response !== undefined) {\r\n                    let error = {};\r\n                    Object.keys(errors.response.data.errors).forEach(key => {\r\n                        error[key] = errors.response.data.errors[key][0];\r\n                    })\r\n                    setErrors(error)\r\n                }\r\n\r\n                setSubmitting(false);\r\n            });\r\n    },\r\n    displayName: 'RegisterForm',\r\n})(RegisterForm);\r\n\r\nexport default RegisterFormContainer;","import React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\n\r\nimport LoginFormContainer from \"./components/Login/containers/LoginFormContainer\";\r\nimport RegisterFormContainer from \"./components/Signup/containers/RegisterFormContainer\";\r\n\r\nimport \"./Auth.scss\";\r\n\r\n\r\nconst Auth = () => (\r\n    <section className=\"auth\">\r\n        <div className=\"auth__content\">\r\n            <Route exact path=\"/login\" component={LoginFormContainer}/>\r\n            <Route exact path=\"/signup\" component={RegisterFormContainer}/>\r\n        </div>\r\n    </section>\r\n);\r\n\r\nexport default Auth;","import React from 'react';\r\nimport {List, Skeleton, Breadcrumb, Divider, DatePicker, Button, Badge, Empty} from 'antd';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {orderApi} from \"../../core/api\";\r\n\r\nimport './Orders.scss'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst statuses = {\r\n    0: {\r\n        text: 'Не выполнено',\r\n        color: 'red'\r\n    },\r\n    1: {\r\n        text: 'Выполнено',\r\n        color: 'green'\r\n    },\r\n\r\n    2: {\r\n        text: 'Выполнено',\r\n        color: 'green'\r\n    }\r\n}\r\n\r\nconst mockData = Array(5)\r\n    .fill(0)\r\n    .map((item, key) => ({\r\n        name: '',\r\n        letter: '',\r\n        id: key,\r\n        loading: true,\r\n        status: 0,\r\n    }))\r\n\r\n//\r\nconst Orders = (props) => {\r\n\r\n    const [orders, setOrders] = React.useState([{\r\n        key: '',\r\n        data: mockData\r\n    }]);\r\n    const [date, setDate] = React.useState(new Date().toJSON().split(\"T\")[0]);\r\n    React.useEffect(() => {\r\n        orderApi.get({date_from: date})\r\n            .then(response => {\r\n                setOrders(response.data);\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n    }, [date])\r\n\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>Заказы</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n\r\n                <div className={\"orders\"}>\r\n                    <DatePicker placeholder={\"Заказы от\"} onChange={(date, dateString) => setDate(dateString)}/>\r\n\r\n                    <Button onClick={() => props.history.push('/orders/create')}>\r\n                        Добавить\r\n                    </Button>\r\n\r\n                </div>\r\n\r\n\r\n                {orders.map((item, key) => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <Divider>{item.key}</Divider>\r\n                            {item.data.map(orderItem => {\r\n                                return (\r\n                                    <List.Item\r\n                                        className={'cursor-pointer'}\r\n                                        onClick={() => props.history.push('/orders/' + orderItem.id)}\r\n                                        key={orderItem.id}\r\n                                    >\r\n                                        <Skeleton avatar title={false} loading={orderItem.loading} active>\r\n                                            <List.Item.Meta\r\n                                                avatar={\r\n                                                    <LetterOrAvatar letter={orderItem.letter} name={orderItem.name}/>\r\n                                                }\r\n                                                title={<Link to={`/orders/${orderItem.id}`}>{orderItem.name}</Link>}\r\n                                                description={<Badge color={statuses[orderItem.status].color}\r\n                                                                    text={statuses[orderItem.status].text}/>}\r\n                                            />\r\n\r\n                                        </Skeleton>\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                {orders.length === 0 && <Empty\r\n                    image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n                    imageStyle={{\r\n                        height: 60,\r\n                    }}\r\n                    description={\r\n                        <span>\r\n                            Нет данных\r\n                        </span>\r\n                    }\r\n                >\r\n                    <Button onClick={() => props.history.push('/orders/create')} type=\"primary\">Добавить</Button>\r\n                </Empty>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders;","import React from \"react\";\r\nimport {Badge, Breadcrumb, List, Skeleton, Tabs} from 'antd';\r\nimport {UserOutlined, ShopOutlined} from '@ant-design/icons';\r\nimport {Link} from \"react-router-dom\";\r\nimport {orderApi} from \"../../core/api\";\r\nimport {LetterOrAvatar} from \"../../components\";\r\n\r\nconst {TabPane} = Tabs;\r\n\r\n\r\nexport default props => {\r\n    const [data, setData] = React.useState([])\r\n    const [type, setType] = React.useState('foods');\r\n    React.useEffect(_ => {\r\n        orderApi.getStatistic({}, type)\r\n            .then(r => {\r\n                setData(r.data)\r\n            })\r\n    }, [type])\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/\"}>\r\n                        Заказы\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>Статистика</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <div className={\"site-layout-content\"}>\r\n                <Tabs defaultActiveKey=\"1\">\r\n                    <TabPane\r\n                        tab={\r\n                            <span onClick={() => setType('foods')}>\r\n                             <ShopOutlined/>\r\n                              Ассортимент\r\n                            </span>\r\n                        }\r\n                        key=\"1\"\r\n                    >\r\n                        {data.map((item, key) => {\r\n                            return (\r\n                                <List.Item\r\n                                    className={'cursor-pointer'}\r\n                                    key={key}\r\n                                >\r\n                                    <Skeleton avatar title={false} loading={item.loading} active>\r\n                                        <List.Item.Meta\r\n                                            avatar={\r\n                                                <LetterOrAvatar letter={item.letter} name={item.name}/>\r\n                                            }\r\n                                            title={<div style={{display: \"flex\", justifyContent: 'space-between', alignItems: \"center\"}}>\r\n                                                <Link to={`/orders/${item.id}`}>{item.name}</Link>\r\n                                            </div>}\r\n                                            description={\"Продано: \" + item.count}\r\n                                        />\r\n\r\n                                    </Skeleton>\r\n                                </List.Item>\r\n                            )\r\n                        })}\r\n                    </TabPane>\r\n                    <TabPane\r\n                        tab={\r\n                            <span onClick={() => setType('clients')}>\r\n                               <UserOutlined/>\r\n                              Клиенты\r\n                            </span>\r\n                        }\r\n                        key=\"2\"\r\n                    >\r\n                        {data.map((item, key) => {\r\n                            return (\r\n                                <List.Item\r\n                                    key={key}\r\n                                >\r\n                                    <Skeleton avatar title={false} loading={item.loading} active>\r\n                                        <List.Item.Meta\r\n                                            avatar={\r\n                                                <LetterOrAvatar letter={item.letter} name={item.name}/>\r\n                                            }\r\n                                            title={<div style={{display: \"flex\", justifyContent: 'space-between', alignItems: \"center\"}}>\r\n                                                <Link to={`/orders/${item.id}`}>{item.name}</Link>\r\n                                                <Badge color={\"#83e246\"}\r\n                                                       text={item.total + \"Р\"}/>\r\n                                            </div>}\r\n                                            description={\"Заказов: \" + item.count}\r\n                                        />\r\n\r\n                                    </Skeleton>\r\n                                </List.Item>\r\n                            )\r\n                        })}\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {List, Skeleton, Breadcrumb, Divider, Button, Empty} from 'antd';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {clientApi} from \"../../core/api\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport './Clients.scss';\r\n\r\nconst mockData = Array(5)\r\n    .fill(0)\r\n    .map((item, key) => ({\r\n        name: '',\r\n        letter: '',\r\n        id: key,\r\n        loading: true,\r\n    }))\r\n\r\nconst Clients = (props) => {\r\n\r\n    const [data, setData] = React.useState([{\r\n        key: '',\r\n        data: mockData\r\n    }]);\r\n    React.useEffect(() => {\r\n        clientApi.get()\r\n            .then(response => {\r\n                setData(response.data.data);\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n        return () => {\r\n            clientApi.cancel();\r\n        }\r\n    }, [])\r\n\r\n    const getOrders = () => {\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>Клиенты</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n                <div className={\"clients\"}>\r\n                    <div>\r\n                        <Button onClick={() => props.history.push('/clients/create')}>\r\n                            Добавить\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                {data.map((item, key) => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <Divider orientation={\"left\"}>{item.key}</Divider>\r\n                            {item.data.map(dataItem => {\r\n                                return (\r\n                                    <List.Item\r\n                                        className={'cursor-pointer'}\r\n                                        key={dataItem.id}\r\n                                        onClick={() => props.history.push(`/clients/${dataItem.id}`)}\r\n                                        actions={[<Link onClick={(e) => e.stopPropagation()}\r\n                                                        to={`/clients/${dataItem.id}/edit`}\r\n                                                        key=\"list-loadmore-edit\">Изменить</Link>]}\r\n                                    >\r\n                                        <Skeleton avatar title={false} loading={dataItem.loading} active>\r\n                                            <List.Item.Meta\r\n                                                avatar={\r\n                                                    <LetterOrAvatar letter={dataItem.letter} name={dataItem.name}/>\r\n                                                }\r\n                                                title={<Link to={`/clients/${dataItem.id}`}>{dataItem.name}</Link>}\r\n                                                description=\"\"\r\n                                            />\r\n\r\n                                        </Skeleton>\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                {data.length === 0 && <Empty\r\n                    image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n                    imageStyle={{\r\n                        height: 60,\r\n                    }}\r\n                    description={\r\n                        <span>\r\n                         Нет данных\r\n                         </span>\r\n                    }\r\n                >\r\n                    <Button onClick={() => props.history.push('/clients/create')} type=\"primary\">Добавить</Button>\r\n                </Empty>}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clients;","import React from \"react\";\r\nimport {clientApi} from \"../../core/api\";\r\nimport {Skeleton, Card, Breadcrumb, Modal} from 'antd';\r\nimport {EditOutlined, DeleteOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Meta} = Card;\r\n\r\n\r\nconst {confirm} = Modal;\r\n\r\n\r\nconst Client = (props) => {\r\n    const [client, setClient] = React.useState({\r\n        name: ''\r\n    });\r\n\r\n    const showDeleteConfirm = id => {\r\n        confirm({\r\n            title: 'Удаление',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            content: 'Вы действительно хотите удалить клиента?',\r\n            okText: 'Да',\r\n            okType: 'danger',\r\n            cancelText: 'Отменить',\r\n            onOk() {\r\n                clientApi.delete(id).then(response => {\r\n                    props.history.replace('/clients');\r\n                })\r\n            },\r\n            onCancel() {\r\n\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true)\r\n        clientApi.show(props.match.params.id)\r\n            .then(response => {\r\n\r\n                if (null === response.data.client) {\r\n                    props.history.push('/404')\r\n                }\r\n\r\n                setClient(response.data.client);\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                props.history.push('/404')\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n\r\n    }, [props.match.params.id])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/clients\"}>Клиенты</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>{client.name}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n\r\n            <Card\r\n                style={{width: '100%', marginTop: 16}}\r\n                actions={[\r\n                    <EditOutlined key=\"edit\"\r\n                                  onClick={() => props.history.push(`/clients/${props.match.params.id}/edit`, {\r\n                                      client: client\r\n                                  })}/>,\r\n                    <DeleteOutlined onClick={() => showDeleteConfirm(props.match.params.id)} key=\"delete\"/>,\r\n                ]}\r\n            >\r\n                <Skeleton loading={loading} avatar active>\r\n                    <Meta\r\n                        avatar={\r\n                            <LetterOrAvatar letter={client?.letter || ''} name={client.name || ''}/>\r\n                        }\r\n                        title={client.name}\r\n                    />\r\n                </Skeleton>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Client;","import React from \"react\";\r\nimport {Breadcrumb, Form, Input, notification } from \"antd\";\r\nimport {PhoneOutlined, UserOutlined, HomeOutlined} from '@ant-design/icons';\r\n\r\nimport {useFormik} from \"formik\";\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\nimport {clientApi} from \"../../../core/api\";\r\nimport apiClient from \"../../../core/api/client\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n\r\n    const rules = {\r\n        name: value => {\r\n            if (!value) {\r\n                errors.name = \"Укажите имя и фамилию\";\r\n            }\r\n        },\r\n\r\n        phone: value => {\r\n            if (!value) {\r\n                errors.phone = \"Укажите номер телефона\";\r\n            }\r\n        }\r\n    }\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n\r\n    return errors;\r\n};\r\n\r\n\r\nconst openNotificationWithIcon = type => {\r\n    notification[type]({\r\n        message: 'Клиент',\r\n        description:\r\n            'Изменения успешно сохранены',\r\n    });\r\n};\r\n\r\nconst ClientForm = props => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            phone: '',\r\n            address: '',\r\n            id: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            apiClient.save(values).then(response => {\r\n                openNotificationWithIcon('success')\r\n                props.history.push(`/clients/${response.data.client.id}`)\r\n            })\r\n        },\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (undefined !== props.location.state) {\r\n            formik.setValues(props.location.state.client)\r\n        } else if (props.match.params.hasOwnProperty('id')) {\r\n            clientApi.show(props.match.params.id)\r\n                .then(response => {\r\n                    formik.setValues(response.data.client)\r\n                })\r\n        }\r\n\r\n    }, [props.location.state, props.match.params])\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/clients\"}>\r\n                        Клиенты\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                {\r\n                    formik.values.id !== ''\r\n                        ?\r\n                        <React.Fragment>\r\n                            <Breadcrumb.Item>\r\n                                <Link to={\"/clients/\" + formik.values.id}>\r\n                                    {formik.values.name}\r\n                                </Link>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>Редактировать</Breadcrumb.Item>\r\n                        </React.Fragment>\r\n                        :\r\n                        <Breadcrumb.Item>Создать</Breadcrumb.Item>\r\n\r\n                }\r\n\r\n            </Breadcrumb>\r\n\r\n            <Block>\r\n                {formik.values &&\r\n                <Form onSubmit={formik.handleSubmit} className=\"client-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"name\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.name ? \"\" : formik.errors.name}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"name\"\r\n                            prefix={<UserOutlined type=\"user\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Имя\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"phone\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.phone ? \"\" : formik.errors.phone}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"phone\"\r\n                            prefix={<PhoneOutlined type=\"phone\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"+7(999)999-99-99\"\r\n                            value={formik.values.phone}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"address\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.address ? \"\" : formik.errors.address}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"address\"\r\n                            prefix={<HomeOutlined type=\"home\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Адрес доставки\"\r\n                            value={formik.values.address}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item>\r\n                        {formik.isSubmitting && !formik.isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={formik.isSubmitting}\r\n                            onClick={formik.handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"medium\"\r\n                        >\r\n                            Сохранить\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>}\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClientForm;","import React from 'react';\r\nimport {List, Skeleton, Breadcrumb, Divider, Button, Empty} from 'antd';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {foodApi} from \"../../core/api\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport './Foods.scss';\r\n\r\nconst mockData = Array(5)\r\n    .fill(0)\r\n    .map((item, key) => ({\r\n        name: '',\r\n        letter: '',\r\n        id: key,\r\n        loading: true,\r\n    }))\r\n\r\nconst Foods = (props) => {\r\n\r\n    const [data, setData] = React.useState([{\r\n        key: '',\r\n        data: mockData\r\n    }]);\r\n    React.useEffect(() => {\r\n        foodApi.get()\r\n            .then(response => {\r\n                setData(response.data.data);\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n\r\n        return () => {\r\n            foodApi.cancel();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>Ассортимент</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n                <div className={\"foods\"}>\r\n                    <div>\r\n                        <Button onClick={() => props.history.push('/foods/create')}>\r\n                            Добавить\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                {data.map((item, key) => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <Divider orientation={\"left\"}>{item.key}</Divider>\r\n                            {item.data.map(dataItem => {\r\n                                return (\r\n                                    <List.Item\r\n                                        className={'cursor-pointer'}\r\n                                        key={dataItem.id}\r\n                                        onClick={() => props.history.push(`/foods/${dataItem.id}`)}\r\n                                        actions={[<Link onClick={(e) => e.stopPropagation()}\r\n                                                        to={`/foods/${dataItem.id}/edit`}\r\n                                                        key=\"list-loadmore-edit\">Изменить</Link>]}\r\n                                    >\r\n                                        <Skeleton avatar title={false} loading={dataItem.loading} active>\r\n                                            <List.Item.Meta\r\n                                                avatar={\r\n                                                    <LetterOrAvatar url={dataItem.img} letter={dataItem.letter}\r\n                                                                    name={dataItem.name}/>\r\n                                                }\r\n                                                title={<Link to={`/foods/${dataItem.id}`}>{dataItem.name}</Link>}\r\n                                                description=\"\"\r\n                                            />\r\n\r\n                                        </Skeleton>\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                {data.length === 0 && <Empty\r\n                    image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n                    imageStyle={{\r\n                        height: 60,\r\n                    }}\r\n                    description={\r\n                        <span>\r\n                         Нет данных\r\n                         </span>\r\n                    }\r\n                >\r\n                    <Button onClick={() => props.history.push('/foods/create')} type=\"primary\">Добавить</Button>\r\n                </Empty>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Foods;","import React from \"react\";\r\nimport {foodApi} from \"../../core/api\";\r\nimport {Skeleton, Card, Breadcrumb, Modal} from 'antd';\r\nimport {EditOutlined, DeleteOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Meta} = Card;\r\n\r\n\r\nconst {confirm} = Modal;\r\n\r\n\r\nconst Food = (props) => {\r\n    const [food, setFood] = React.useState({\r\n        name: ''\r\n    });\r\n\r\n    const showDeleteConfirm = id => {\r\n        confirm({\r\n            title: 'Удаление',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            content: 'Вы действительно хотите удалить клиента?',\r\n            okText: 'Да',\r\n            okType: 'danger',\r\n            cancelText: 'Отменить',\r\n            onOk() {\r\n                foodApi.delete(id).then(response => {\r\n                    props.history.replace('/foods');\r\n                })\r\n            },\r\n            onCancel() {\r\n\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true)\r\n        foodApi.show(props.match.params.id)\r\n            .then(response => {\r\n                if (null === response.data.food) {\r\n                    props.history.push('/404')\r\n                }\r\n\r\n                setFood(response.data.food);\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                props.history.push('/404')\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n\r\n    }, [props.match.params.id])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/foods\"}>Ассортимент</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>{food.name}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n\r\n            <Card\r\n                style={{width: '100%', marginTop: 16}}\r\n                actions={[\r\n                    <EditOutlined key=\"edit\"\r\n                                  onClick={() => props.history.push(`/foods/${props.match.params.id}/edit`, {\r\n                                      food: food\r\n                                  })}/>,\r\n                    <DeleteOutlined onClick={() => showDeleteConfirm(props.match.params.id)} key=\"delete\"/>,\r\n                ]}\r\n            >\r\n                <Skeleton loading={loading} avatar active>\r\n                    <Meta\r\n                        avatar={\r\n                            <LetterOrAvatar url={food.image} letter={food?.letter || ''} name={food.name || ''}/>\r\n                        }\r\n                        title={food.name}\r\n                    />\r\n                </Skeleton>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Food;","import React from \"react\";\r\nimport {Breadcrumb, Form, Input, notification, Upload} from \"antd\";\r\nimport {BookOutlined, DollarOutlined, UploadOutlined} from '@ant-design/icons';\r\n\r\nimport {useFormik} from \"formik\";\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\nimport {foodApi} from \"../../../core/api\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n\r\n    const rules = {\r\n        name: value => {\r\n            if (!value) {\r\n                errors.name = \"Укажите название\";\r\n            }\r\n        },\r\n\r\n        price: value => {\r\n            if (!value) {\r\n                errors.price = \"Укажите цену\";\r\n            }\r\n        }\r\n    }\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n\r\n    return errors;\r\n};\r\n\r\n\r\nconst openNotificationWithIcon = type => {\r\n    notification[type]({\r\n        message: 'Клиент',\r\n        description:\r\n            'Изменения успешно сохранены',\r\n    });\r\n};\r\n\r\nconst FoodForm = props => {\r\n    const [img, setImg] = React.useState(null);\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            price: '',\r\n            id: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            foodApi.save({\r\n                ...values,\r\n                image: img\r\n            }).then(response => {\r\n                openNotificationWithIcon('success')\r\n                props.history.push(`/foods/${response.data.food.id}`)\r\n            })\r\n        },\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (undefined !== props.location.state) {\r\n            formik.setValues(props.location.state.food)\r\n        } else if (props.match.params.hasOwnProperty('id')) {\r\n            foodApi.show(props.match.params.id)\r\n                .then(response => {\r\n                    formik.setValues(response.data.food)\r\n                })\r\n        }\r\n    }, [props.location.state, props.match.params])\r\n\r\n\r\n    const fileProps = {\r\n        beforeUpload: function (file) {\r\n            setImg(file)\r\n\r\n\r\n            // Prevent upload\r\n            return false;\r\n        },\r\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n        onChange({file, fileList}) {\r\n\r\n        },\r\n        defaultFileList: [],\r\n        showUploadList: {\r\n            // showDownloadIcon: true,\r\n            // downloadIcon: 'download ',\r\n            // showRemoveIcon: true,\r\n            // removeIcon: <StarOutlined onClick={e => console.log(e, 'custom removeIcon event')} />,\r\n        },\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/foods\"}>\r\n                        Ассортимент\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                {\r\n                    formik.values.id !== ''\r\n                        ?\r\n                        <React.Fragment>\r\n                            <Breadcrumb.Item>\r\n                                <Link to={\"/foods/\" + formik.values.id}>\r\n                                    {formik.values.name}\r\n                                </Link>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>Редактировать</Breadcrumb.Item>\r\n                        </React.Fragment>\r\n                        :\r\n                        <Breadcrumb.Item>Создать</Breadcrumb.Item>\r\n\r\n                }\r\n\r\n            </Breadcrumb>\r\n\r\n            <Block>\r\n                {formik.values &&\r\n                <Form onSubmit={formik.handleSubmit} className=\"food-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"name\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.name ? \"\" : formik.errors.name}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"name\"\r\n                            prefix={<BookOutlined type=\"book\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Название\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"price\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.price ? \"\" : formik.errors.price}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"price\"\r\n                            type={\"number\"}\r\n                            prefix={<DollarOutlined type=\"price\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Цена\"\r\n                            value={formik.values.price}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Upload {...fileProps}>\r\n                        <Button style={{marginBottom: 10}}>\r\n                            <UploadOutlined/> Загрузить\r\n                        </Button>\r\n                    </Upload>\r\n\r\n\r\n                    <Form.Item>\r\n                        {formik.isSubmitting && !formik.isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={formik.isSubmitting}\r\n                            onClick={formik.handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"medium\"\r\n                        >\r\n                            Сохранить\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>}\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FoodForm;","import React from 'react'\r\nimport {orderApi} from \"../../../core/api\";\r\nimport {Breadcrumb, Descriptions, Badge, List, Typography, Divider, Button, Select} from 'antd';\r\nimport {LetterOrAvatar} from \"../../../components\";\r\nimport {EditOutlined, CarOutlined} from '@ant-design/icons';\r\n\r\nimport './OrderShow.scss'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Title} = Typography;\r\nconst {Option} = Select;\r\n\r\nconst statuses = {\r\n    0: {\r\n        text: 'Не выполнено',\r\n        color: 'red'\r\n    },\r\n    1: {\r\n        text: 'Выполнено',\r\n        color: 'green'\r\n    }\r\n}\r\n\r\n\r\nconst ShowOrder = props => {\r\n    const [order, setOrder] = React.useState(null);\r\n    const [changeStatus, setChangeStatus] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        orderApi.show(props.match.params.id)\r\n            .then(response => {\r\n                if (null === response.data.data) {\r\n                    props.history.push('/404')\r\n                }\r\n                setOrder(response.data.data);\r\n            })\r\n            .catch(err => {\r\n                props.history.push('/404')\r\n            })\r\n    }, [])\r\n\r\n\r\n    const setStatus = val => {\r\n        orderApi.setStatus(order.id, val)\r\n            .finally(_ => {\r\n                setOrder({\r\n                    ...order,\r\n                    status: val\r\n                })\r\n                setChangeStatus(false)\r\n            })\r\n    }\r\n\r\n    if (order === null) {\r\n        return <div>\r\n\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className={'site-content'}>\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/\"}>\r\n                        Заказы\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>{order?.name}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <div className={\"site-layout-content\"}>\r\n                <Descriptions title=\"Общая информация\">\r\n                    <Descriptions.Item label=\"Имя\">{order.name}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Номер телефона\">{order.phone}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Адрес\">{order.address || 'Не заполнено'}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Сумма заказа\">\r\n                        <Badge style={{backgroundColor: '#52c41a'}} count={order.total_sum + 'Р'}\r\n                               overflowCount={1000000}/>\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Дата доставки\">\r\n                        {order.date_delivery}\r\n                    </Descriptions.Item>\r\n\r\n                    <Descriptions.Item label=\"Статус\">\r\n\r\n                        {false === changeStatus &&\r\n                        <div className={\"cursor-pointer\"} onClick={() => setChangeStatus(true)}>\r\n                            <Badge color={statuses[order.status].color} text={statuses[order.status].text}/>\r\n                            <EditOutlined/>\r\n                        </div>\r\n                        }\r\n\r\n                        {true === changeStatus && <div>\r\n                            <Select defaultValue={order.status} style={{width: '100%'}} onChange={val => setStatus(val)}>\r\n                                <Option value=\"0\">Не выполнено</Option>\r\n                                <Option value=\"1\">Выполнено</Option>\r\n                            </Select>\r\n                        </div>}\r\n                    </Descriptions.Item>\r\n\r\n                </Descriptions>\r\n\r\n                <Divider/>\r\n\r\n                <div>\r\n\r\n                    <Title level={4}>Заказ</Title>\r\n\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={order.foods}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    avatar={<LetterOrAvatar url={item.image} letter={item.letter} name={item.name}/>}\r\n                                    title={item.name}\r\n                                    description={<div className={\"order\"}>\r\n                                        <span>{item.pivot.comment}</span>\r\n                                        <Badge style={{backgroundColor: '#52c41a'}}\r\n                                               count={item.pivot.count + ' ' + item.pivot.unit}\r\n                                               overflowCount={1000000}/>\r\n                                    </div>}\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <Divider/>\r\n                    <div>\r\n                        <Button onClick={() => props.history.push(`/orders/${order.id}/taxi`, {order})} type=\"primary\" shape=\"circle\" icon={<CarOutlined />} size={'large'} style={{backgroundColor: '#fee35d', color: '#fff'}} />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowOrder","import React from \"react\";\r\nimport _ from 'lodash';\r\nimport {clientApi, foodApi, orderApi} from \"../../../core/api\";\r\nimport {useFormik} from \"formik\";\r\n\r\nexport const FormContext = React.createContext({});\r\n\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n\r\n    const rules = {\r\n        clientId: value => {\r\n            if (!value) {\r\n                errors.clientId = \"Укажите клиента\";\r\n            }\r\n        },\r\n\r\n        date_delivery: value => {\r\n            if (!value) {\r\n                errors.date_delivery = \"Укажите дату доставки\";\r\n            }\r\n        },\r\n\r\n        time_delivery: value => {\r\n            if (!value) {\r\n                errors.time_delivery = \"Укажите время доставки\";\r\n            }\r\n        },\r\n    }\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n\r\n    return errors;\r\n};\r\n\r\n\r\nexport const FormProvider = ({children}) => {\r\n    const [cart, setCart] = React.useState([{\r\n        foodID: null,\r\n        count: \"1\",\r\n        unit: \"ШТ\",\r\n        comment: \"\",\r\n    }]);\r\n\r\n    const [sum, setSum] = React.useState(0);\r\n    const [order, setOrder] = React.useState(null);\r\n    const [foods, setFoods] = React.useState([]);\r\n    const [clients, setClients] = React.useState([]);\r\n\r\n    const [isReady, setIsReady] = React.useState(false);\r\n    const [selectedClient, setSelectedClient] = React.useState(null);\r\n    const [errors, setErrors] = React.useState([]);\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            clientId: '',\r\n            date_delivery: '',\r\n            time_delivery: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            handleSubmit();\r\n        },\r\n    })\r\n\r\n\r\n    const handleChange = (value, key, field) => {\r\n        let tempSum = 0;\r\n        const tempCart = _.cloneDeep(cart);\r\n        tempCart[key][field] = value || null;\r\n\r\n        setCart(tempCart);\r\n        tempCart.map(cartItem => {\r\n            const priceItem = _.find(foods, function (o) {\r\n                return o.id === cartItem.foodID\r\n            })\r\n\r\n            if (priceItem) {\r\n                tempSum += priceItem.price * parseInt(cartItem.count) || 0;\r\n            }\r\n\r\n        });\r\n\r\n        setSum(tempSum);\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n        Promise.all(\r\n            [\r\n                clientApi.getList()\r\n                    .then(response => {\r\n                        setClients(response.data);\r\n                    }),\r\n\r\n                foodApi.getList()\r\n                    .then(response => {\r\n                        setFoods(response.data);\r\n                    })\r\n            ]\r\n        )\r\n            .finally(_ => {\r\n                setIsReady(true);\r\n            })\r\n    }, [])\r\n\r\n\r\n    const handleChangeFood = (value, key, field) => {\r\n        let tempSum = 0;\r\n        const tempCart = _.cloneDeep(cart);\r\n        tempCart[key][field] = value || null;\r\n\r\n        setCart(tempCart);\r\n        tempCart.map(cartItem => {\r\n            const priceItem = _.find(foods, function (o) {\r\n                return o.id === cartItem.foodID\r\n            })\r\n\r\n            if (priceItem) {\r\n                tempSum += priceItem.price * parseInt(cartItem.count) || 0;\r\n            }\r\n\r\n        });\r\n\r\n        setSum(tempSum);\r\n    };\r\n\r\n    const pushItem = () => {\r\n        let tempCart = _.cloneDeep(cart);\r\n        tempCart.push({\r\n            foodID: null,\r\n            count: \"1\",\r\n            unit: \"ШТ\",\r\n            comment: \"\",\r\n        });\r\n\r\n        setCart(tempCart);\r\n\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        setErrors([]);\r\n\r\n        let tempCart = _.cloneDeep(cart);\r\n\r\n        if (tempCart.length !== 1) {\r\n            setCart(tempCart.splice(1, 1));\r\n        }\r\n\r\n\r\n        console.log(selectedClient);\r\n        console.log(cart);\r\n\r\n        const data = {\r\n            cart: tempCart.filter(item => item.foodID !== null),\r\n            client_id: formik.values.clientId,\r\n            date_delivery: [formik.values.date_delivery, formik.values.time_delivery].join(' '),\r\n            comment: '',\r\n            ...selectedClient,\r\n            total_sum: sum,\r\n\r\n        };\r\n\r\n        orderApi.save(data)\r\n            .then(response => {\r\n                setOrder(response.data);\r\n            })\r\n            .catch(error => {\r\n                if (error.response.data.errors.hasOwnProperty('cart')) {\r\n                    setErrors(Object.values(error.response.data.errors.cart));\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    return (\r\n        <FormContext.Provider\r\n            value={{\r\n                handleChange,\r\n                foods,\r\n                clients,\r\n                isReady,\r\n                selectedClient,\r\n                setSelectedClient,\r\n                handleChangeFood,\r\n                cart,\r\n                pushItem,\r\n                handleSubmit,\r\n                sum,\r\n                formik,\r\n                errors,\r\n                order\r\n            }}\r\n        >\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {FormContext} from \"./FormProvider\";\r\nimport {Select, DatePicker, TimePicker, Typography, Input, Divider, InputNumber, Button, Form, Alert} from 'antd';\r\nimport {validateField} from \"../../../utils/helpers/index\";\r\n\r\nconst {Option} = Select;\r\nconst {Title} = Typography;\r\n\r\n\r\nexport default () => {\r\n    const context = React.useContext(FormContext);\r\n    const refInput = React.useRef(null)\r\n\r\n    React.useEffect(_ => {\r\n        window.ref = refInput;\r\n    }, [context.isReady])\r\n\r\n    return (\r\n        <Form onSubmit={context.formik.handleSubmit} className={\"order-form\"}>\r\n            <Title level={4}>Общая информация</Title>\r\n\r\n            <div className={\"order-form__form\"}>\r\n                <Form.Item\r\n                    validateStatus={validateField(\"clientId\", context.formik.touched, context.formik.errors)}\r\n                    help={!context.formik.touched.clientId ? \"\" : context.formik.errors.clientId}\r\n                    hasFeedback\r\n                >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Выберите клиента\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(value) => {\r\n                            context.formik.setValues({\r\n                                ...context.formik.values,\r\n                                clientId: value\r\n                            })\r\n\r\n                            context.setSelectedClient(context.clients.find(item => item.id === value));\r\n\r\n                        }}\r\n                        filterOption={(input, option) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                    >\r\n                        {context.clients.map(client => <Option key={client.id}\r\n                                                               value={client.id}>{client.name}</Option>)}\r\n\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    validateStatus={validateField(\"date_delivery\", context.formik.touched, context.formik.errors)}\r\n                    help={!context.formik.touched.date_delivery ? \"\" : context.formik.errors.date_delivery}\r\n                    hasFeedback\r\n                >\r\n                    <DatePicker\r\n                        style={{width: '100%'}}\r\n                        ref={refInput}\r\n                        placeholder={\"Выберите дату доставки\"}\r\n                        onChange={(date, dateString) => context.formik.setValues({\r\n                            ...context.formik.values,\r\n                            date_delivery: dateString\r\n                        })}/>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item\r\n                    validateStatus={validateField(\"time_delivery\", context.formik.touched, context.formik.errors)}\r\n                    help={!context.formik.touched.time_delivery ? \"\" : context.formik.errors.time_delivery}\r\n                    hasFeedback\r\n                >\r\n                    <TimePicker\r\n                        style={{width: '100%'}}\r\n                        format={\"HH:mm\"}\r\n                        onChange={(date, dateString) => context.formik.setValues({\r\n                            ...context.formik.values,\r\n                            time_delivery: dateString\r\n                        })}\r\n                    />\r\n                </Form.Item>\r\n\r\n            </div>\r\n\r\n            {\r\n                context.selectedClient\r\n                &&\r\n                <div>\r\n                    <Divider/>\r\n\r\n                    <Title level={4}>Информация о клиенте</Title>\r\n\r\n                    <div className={\"order-form__form\"}>\r\n                        <Input placeholder={\"Имя\"} value={context.selectedClient.name}/>\r\n                        <Input placeholder={\"Номер\"} style={{marginTop: 5}} value={context.selectedClient.phone}/>\r\n                        <Input placeholder={\"Адрес \"} style={{marginTop: 5}} value={context.selectedClient.address}/>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            <div>\r\n                <Divider/>\r\n                <Title level={4}>Заказ</Title>\r\n\r\n                {context.errors.map(error => {\r\n                    return (\r\n                        <Alert message={error} type=\"error\" showIcon/>\r\n                    )\r\n                })}\r\n\r\n                {context.cart.map((cartItem, key) => {\r\n                    return (\r\n                        <React.Fragment key={key}>\r\n                            <Divider orientation={\"left\"}>{key + 1}</Divider>\r\n                            <div className={\"order-form__form\"}>\r\n                                <Select\r\n                                    showSearch\r\n                                    placeholder=\"Выберите блюдо\"\r\n                                    optionFilterProp=\"children\"\r\n                                    onChange={(value) => {\r\n                                        context.handleChangeFood(value, key, 'foodID')\r\n\r\n                                    }}\r\n                                    filterOption={(input, option) =>\r\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    {context.foods.map(food => <Option key={food.id}\r\n                                                                       value={food.id}>{food.name}</Option>)}\r\n\r\n                                </Select>\r\n\r\n                                <div style={{display: 'flex', marginTop: 5}}>\r\n                                    <InputNumber placeholder={\"Кол-во\"}\r\n                                                 value={cartItem.count}\r\n                                                 onChange={value => context.handleChangeFood(value, key, 'count')}\r\n                                                 style={{width: \"100%\"}}/>\r\n\r\n                                    <Select defaultValue={cartItem.unit} style={{width: \"100%\"}} onChange={value => {\r\n                                        context.handleChangeFood(value, key, 'unit')\r\n                                    }}>\r\n                                        <Option value=\"ШТ\">ШТ</Option>\r\n                                        <Option value=\"КГ\">КГ</Option>\r\n                                    </Select>\r\n                                </div>\r\n\r\n                                <Input style={{marginTop: 5}} placeholder={\"Комментарий\"} value={cartItem.comment}\r\n                                       onChange={e => context.handleChangeFood(e.target.value, key, 'comment')}/>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )\r\n                })}\r\n\r\n                <Button style={{marginTop: 5}} onClick={context.pushItem}>+</Button>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </Form>\r\n    )\r\n}","import React from \"react\";\r\nimport './CreateOrder.scss'\r\nimport {Breadcrumb, Button, Result} from \"antd\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport _form from './_form';\r\nimport {FormProvider, FormContext} from \"./FormProvider\";\r\n\r\nconst OrderForm = props => {\r\n    return (\r\n        <FormProvider>\r\n            <div className={\"site-content\"}>\r\n\r\n                <Breadcrumb style={{margin: '16px 0'}}>\r\n                    <Breadcrumb.Item>Заказы</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n\r\n                <div className={\"site-layout-content\"}>\r\n                    <Container/>\r\n                </div>\r\n\r\n            </div>\r\n        </FormProvider>\r\n    )\r\n}\r\n\r\n\r\nconst Send = () => {\r\n    const context = React.useContext(FormContext);\r\n\r\n    React.useEffect(_ => {\r\n    }, [])\r\n\r\n    return (\r\n        <Button onClick={context.formik.handleSubmit} type={\"primary\"} style={{marginTop: 5}}>Добавить\r\n            ({context.sum}Р)</Button>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst Success = ({order}) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Result\r\n            status=\"success\"\r\n            title=\"Заказ успешно добавлен\"\r\n            subTitle={`Заказ успешно добавлен под номером: ${order.id}`}\r\n            extra={[\r\n                <Button onClick={() => history.push(`/orders/${order.id}`)} type=\"primary\" key=\"console\">\r\n                    Перейти к заказу\r\n                </Button>,\r\n            ]}\r\n        />\r\n    )\r\n}\r\n\r\nconst Container = () => {\r\n    const {order} = React.useContext(FormContext);\r\n\r\n    React.useEffect(_ => {\r\n    }, [])\r\n\r\n    return (\r\n        null === order ? <React.Fragment>\r\n                <_form/>\r\n\r\n                <Send/>\r\n            </React.Fragment>\r\n            : <Success order={order}/>\r\n    )\r\n}\r\n\r\nexport default OrderForm","import React from \"react\";\r\nimport {SearchAddress} from \"../../../components\";\r\nimport axios from 'axios'\r\nimport {Form, Typography, Button, Input, Breadcrumb, notification} from 'antd'\r\nimport {Link} from \"react-router-dom\";\r\nimport {orderApi} from \"../../../core/api\";\r\nconst Taxi = (props) => {\r\n\r\n    const [from, setFrom] = React.useState({\r\n        address: '',\r\n    });\r\n    const [to, setTo] = React.useState({\r\n        address: props.location.state.order.address\r\n    });\r\n    const [phone, setPhone] = React.useState('+7(___)___-____')\r\n\r\n    const [coast, setCoast] = React.useState(null);\r\n    const [comment, setComment] = React.useState(`Номер телефона: ${props.location.state.order.phone}\r\nИмя: ${props.location.state.order.name}\r\n        `);\r\n\r\n    const callback = React.useCallback(() => {\r\n        var input = document.querySelector(\"#phone\");\r\n        input.addEventListener(\"input\", mask, false)\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        const phoneFromStorage = localStorage.getItem('phone');\r\n\r\n        if (phoneFromStorage) {\r\n            setPhone(phoneFromStorage)\r\n        }\r\n        const itemFromFromStorage = localStorage.getItem('from');\r\n\r\n        if (itemFromFromStorage) {\r\n            const json = JSON.parse(itemFromFromStorage);\r\n\r\n            if (from.address === '') {\r\n                setFrom(json);\r\n            }\r\n\r\n\r\n        }\r\n\r\n        orderCoast();\r\n        callback();\r\n    }, [from, to])\r\n\r\n    const orderCoast = () => {\r\n        if (true === (from === null || to === null)) {\r\n            return\r\n        }\r\n        const formData = new FormData;\r\n        formData.append('source_lat', from.lat)\r\n        formData.append('source_lon', from.lon)\r\n        formData.append('destination_lat', to.lat)\r\n        formData.append('destination_lon', to.lon)\r\n        formData.append('source_time_iso8601', new Date().toISOString())\r\n        axios.defaults.withCredentials = false;\r\n        axios.post(\"https://websites.platform.taximaster.ru/v2/calc_order_cost\", formData, {\r\n            \"headers\": {\r\n                \"Sec-Fetch-Dest\": \"empty\",\r\n                \"Sec-Fetch-Mod\": \"cors\",\r\n                \"Sec-Fetch-Site\": \"same-origin\",\r\n                \"X-Site-VtmId\": \"134\",\r\n                \"X-Site-VtmGroupId\": \"56\",\r\n                \"Accept\": \"*/*\"\r\n            },\r\n        })\r\n            .then(response => {\r\n\r\n                setCoast(response.data)\r\n            })\r\n    };\r\n\r\n    const selectFrom = item => {\r\n\r\n        if (false === checkAddress(item.address, from.address || '')) {\r\n            const json = JSON.stringify(item)\r\n            localStorage.setItem('from', json);\r\n            setFrom(item);\r\n\r\n            console.log(item)\r\n        }\r\n\r\n    }\r\n\r\n    const selectTo = item => {\r\n        if (false === checkAddress(item.address, to.address || '')) {\r\n            setTo(item);\r\n        }\r\n    }\r\n\r\n\r\n    function setCursorPosition(pos, elem) {\r\n        elem.focus();\r\n        if (elem.setSelectionRange) elem.setSelectionRange(pos, pos);\r\n        else if (elem.createTextRange) {\r\n            var range = elem.createTextRange();\r\n            range.collapse(true);\r\n            range.moveEnd(\"character\", pos);\r\n            range.moveStart(\"character\", pos);\r\n            range.select()\r\n        }\r\n    }\r\n\r\n    function mask(event) {\r\n        var matrix = this.defaultValue,\r\n            i = 0,\r\n            def = matrix.replace(/\\D/g, \"\"),\r\n            val = this.value.replace(/\\D/g, \"\");\r\n        def.length >= val.length && (val = def);\r\n        matrix = matrix.replace(/[_\\d]/g, function (a) {\r\n            return val.charAt(i++) || \"_\"\r\n        });\r\n        this.value = matrix;\r\n        setPhone(matrix);\r\n        i = matrix.lastIndexOf(val.substr(-1));\r\n        i < matrix.length && matrix != this.defaultValue ? i++ : i = matrix.indexOf(\"_\");\r\n        setCursorPosition(i, this)\r\n    }\r\n\r\n    const createOrder = () => {\r\n        const formData = new FormData;\r\n        formData.append('test_field1', from.address)\r\n        formData.append('source_lat', from.lat)\r\n        formData.append('source_lon', from.lon)\r\n        formData.append('test_field2', to.address)\r\n        formData.append('destination_lat', to.lat)\r\n        formData.append('destination_lon', to.lon)\r\n        // formData.append('source_time', '24.03.2020 17:40')\r\n        formData.append('source_time_iso8601', new Date().toISOString())\r\n        formData.append('phone', phone)\r\n        formData.append('test_field3', '')\r\n        formData.append('comment', comment)\r\n        formData.append('address_source', from.address)\r\n        formData.append('address_destination', to.address)\r\n        formData.append('name', props.location.state.order.name)\r\n        formData.append('auth_token', 'AB890D4D-EB06-4DF9-9EDC-5493A9892FB1')\r\n\r\n        //\r\n        axios.post(\"https://websites.platform.taximaster.ru/v2/order\", formData, {\r\n            \"headers\": {\r\n                \"Sec-Fetch-Dest\": \"empty\",\r\n                \"Sec-Fetch-Mod\": \"cors\",\r\n                \"Sec-Fetch-Site\": \"same-origin\",\r\n                \"X-Site-VtmId\": \"134\",\r\n                \"X-Site-VtmGroupId\": \"56\",\r\n                \"Accept\": \"*/*\"\r\n            },\r\n        })\r\n            .then(response => {\r\n                openNotificationWithIcon('success')\r\n                localStorage.setItem('phone', phone)\r\n                orderApi.setStatus(props.location.state.order.id, 1);\r\n                props.history.push(`/orders/${props.location.state.order.id}`)\r\n\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    Object.values(error.response.data.errors).map(errorField => {\r\n                        Object.values(errorField).map(errors => {\r\n                            alert(errors.join('\\n'))\r\n                        })\r\n                    })\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    const checkAddress = (itemAddress, prevAddress) => itemAddress === prevAddress;\r\n\r\n\r\n    const openNotificationWithIcon = type => {\r\n        notification[type]({\r\n            message: 'Такси',\r\n            description:\r\n                'Такси успешно вызвано',\r\n        });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/\"}>\r\n                        Заказы\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <Link to={`/orders/${props.location.state.order.id}`}>\r\n                        {props.location.state.order.name}\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n\r\n                <Breadcrumb.Item>Такси</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <div className={\"site-layout-content\"}>\r\n                <SearchAddress callback={selectFrom} item={from}/>\r\n\r\n                <SearchAddress callback={selectTo} item={to}/>\r\n\r\n                <Form.Item>\r\n                    <Input placeholder={\"Имя\"}/>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Input id={\"phone\"}  value={phone}\r\n                           placeholder={\"Ваш номер телефона +7(___)---_--_--\"}/>\r\n\r\n                    <a href=\"/#\" onClick={e => {\r\n                        e.preventDefault();\r\n                        setPhone('+7(___)___-____')\r\n                    }}>Очистить</a>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Input.TextArea value={comment} onChange={e => setComment(e.target.value)}\r\n                                    placeholder={\"Комментарий для водителя\"}/>\r\n                </Form.Item>\r\n\r\n                <Button onClick={createOrder}>Вызвать (Примерная стоимость: {coast})</Button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Taxi;","import React from 'react'\r\nimport {Layout, Menu, Result, Button } from 'antd';\r\nimport {Route, useHistory, Switch} from 'react-router-dom';\r\nimport Orders from \"../Orders\";\r\nimport Statistics from \"../Statistics\";\r\nimport Clients from \"../Clients\";\r\nimport Client from \"../Clients/Client\";\r\nimport ClientForm from \"../Clients/component/ClientForm\";\r\n\r\nimport Foods from \"../Foods\";\r\nimport Food from \"../Foods/Food\";\r\nimport FoodForm from \"../Foods/component/FoodForm\";\r\n\r\n\r\nimport {\r\n    PieChartOutlined,\r\n    UserOutlined,\r\n    ShopOutlined,\r\n    LoginOutlined,\r\n    OrderedListOutlined\r\n} from '@ant-design/icons'\r\nimport {BottomNav} from \"../../components\";\r\nimport ShowOrder from \"../Orders/ShowOrder\";\r\nimport OrderForm from \"../Orders/OrderForm\";\r\nimport {userApi} from \"../../core/api\";\r\nimport Taxi from \"../Orders/ShowOrder/Taxi\";\r\n\r\nconst {Content, Footer, Sider} = Layout;\r\n\r\nconst defaultSelected = () => {\r\n    if (window.location.pathname === '/') {\r\n        return \"1\"\r\n    } else if (window.location.pathname.includes('clients')) {\r\n        return \"2\";\r\n    } else if (window.location.pathname.includes('foods')) {\r\n        return \"3\";\r\n    }  else if (window.location.pathname.includes('statistics')) {\r\n        return \"4\";\r\n    }\r\n}\r\n\r\nconst HomePage = (props) => {\r\n    const [collapsed, setCollaps] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Layout className=\"layout\" style={{minHeight: '100vh'}}>\r\n\r\n            <Sider className={\"sider\"} collapsible collapsed={collapsed} onCollapse={() => setCollaps(!collapsed)}>\r\n                <div className=\"logo\"/>\r\n                <Menu theme=\"dark\" defaultSelectedKeys={[defaultSelected()]} mode=\"inline\">\r\n                    <Menu.Item key=\"1\" onClick={() => history.push('/')}>\r\n                        <OrderedListOutlined/>\r\n                        <span>Заказы</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\" onClick={() => history.push('/clients')}>\r\n                        <UserOutlined/>\r\n                        <span>Клиенты</span>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"3\" onClick={() => history.push('/foods')}>\r\n                        <ShopOutlined/>\r\n                        <span>Ассортимент</span>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"4\" onClick={() => history.push('/statistics')}>\r\n                        <PieChartOutlined/>\r\n                        <span>Статистика</span>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"5\" onClick={() => {\r\n                        if (window.confirm('Вы действительно хотите покинуть сайт ?')){\r\n                            userApi.logout();\r\n                        }\r\n                    }}>\r\n                        <LoginOutlined/>\r\n                        <span>Выйти</span>\r\n                    </Menu.Item>\r\n\r\n                </Menu>\r\n            </Sider>\r\n\r\n\r\n            <Layout>\r\n                <Content style={{padding: '0 50px'}}>\r\n\r\n                    <Switch>\r\n                        <Route exact path={'/'} component={Orders}/>\r\n                        <Route exact path={'/orders/create'} component={OrderForm}/>\r\n                        <Route exact path={'/orders/:id(\\\\d+)'} component={ShowOrder}/>\r\n                        <Route exact path={'/orders/:id(\\\\d+)/taxi'} component={Taxi}/>\r\n\r\n                        <Route exact path={\"/statistics\"} component={Statistics}/>\r\n\r\n                        <Route exact path={'/clients'} component={Clients}/>\r\n                        <Route exact path={'/clients/create'} component={ClientForm}/>\r\n                        <Route exact path={\"/clients/:id(\\\\d+)\"} component={Client}/>\r\n                        <Route exact path={'/clients/:id/edit'} component={ClientForm}/>\r\n                        <Route exact path={'/clients/:id/edit'} component={ClientForm}/>\r\n\r\n                        <Route exact path={'/foods'} component={Foods}/>\r\n                        <Route exact path={'/foods/create'} component={FoodForm}/>\r\n                        <Route exact path={\"/foods/:id(\\\\d+)\"} component={Food}/>\r\n                        <Route exact path={'/foods/:id/edit'} component={FoodForm}/>\r\n\r\n                        <Route component={() => {\r\n                            return (\r\n                                <Result\r\n                                    status=\"404\"\r\n                                    title=\"404\"\r\n                                    subTitle=\"Sorry, the page you visited does not exist.\"\r\n                                    extra={<Button onClick={() => history.push('/')} type=\"primary\">Вернуться на главную</Button>}\r\n                                />\r\n                            )\r\n                        }} />\r\n                    </Switch>\r\n\r\n\r\n                </Content>\r\n\r\n                {(/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)) && <BottomNav/> }\r\n\r\n                <Footer style={{textAlign: 'center'}}>Ant Design ©2018 Created by Ant UED</Footer>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport Auth from \"pages/Auth\";\nimport Home from \"pages/Home\";\nimport {connect} from 'react-redux'\n\nfunction App({user, isReady}) {\n\n    if (false === isReady) {\n        return (\n            <section className=\"auth\">\n                <div className=\"auth__content\">\n                    Загрузка...\n                </div>\n            </section>\n        )\n    }\n\n    return (\n        <div className=\"wrapper\">\n\n            <Switch>\n                <GuestRoute\n                    user={user}\n                    path={[\"/login\", \"/signup\"]}>\n                    <Auth/>\n                </GuestRoute>\n\n                <PrivateRoute user={user} path={\"/\"}>\n                    <Home/>\n                </PrivateRoute>\n\n\n\n            </Switch>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.userReducer.user,\n        isReady: state.appReducer.isReady\n    }\n}\n\nexport default connect(mapStateToProps)(App);\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({children, user, ...rest}) {\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                null !== user ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nfunction GuestRoute({children, user, ...rest}) {\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                null === user ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/\",\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {SET_USER} from \"../actionTypes\";\r\n\r\nexport default {\r\n    setUser: (payload) => ({\r\n        type: SET_USER,\r\n        payload: payload\r\n    })\r\n\r\n}","import {userApi} from \"../../core/api\";\r\nimport {userActions} from \"./index\";\r\nimport {APP_SET_IS_READY} from \"../actionTypes\";\r\n\r\nexport default {\r\n    init: function () {\r\n        return dispatch => {\r\n            userApi.me().then(response => {\r\n                dispatch(userActions.setUser(response.data));\r\n            }).catch(error => {\r\n                dispatch(userActions.setUser(null))\r\n            }).finally(() => {\r\n                dispatch(this.setAppIsready(true));\r\n            });\r\n        }\r\n    },\r\n\r\n    setAppIsready: (payload) => ({\r\n        type: APP_SET_IS_READY,\r\n        payload: payload\r\n    })\r\n\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport store from \"./redux/store\";\n\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {appActions} from \"./redux/actions\";\n\nfunction init() {\n    store.dispatch(appActions.init());\n}\n\ninit()\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","export const SET_USER = 'SET_USER';\r\nexport const APP_SET_IS_READY = 'APP:SET_IS_READY';\r\n"],"sourceRoot":""}