{"version":3,"sources":["redux/reducers/index.js","redux/reducers/appReducer.js","redux/reducers/userReducer.js","redux/reducers sync /^/.*$","components/Block/index.jsx","components/Button/index.jsx","utils/helpers/validateField.js","components/LetterOrAvatar/index.jsx","utils/helpers/getAvatarColor.js","core/config/axios.js","core/api/user.js","core/api/client.js","core/api/food.js","core/api/order.js","components/BottomNav/index.jsx","components/SearchAddress/index.jsx","components/SideBar/index.jsx","pages/Auth/components/Login/components/LoginForm.jsx","utils/validate.js","pages/Auth/components/Login/containers/LoginFormContainer.jsx","pages/Auth/components/Signup/components/RegisterForm.jsx","pages/Auth/components/Signup/containers/RegisterFormContainer.jsx","pages/Auth/index.jsx","pages/Orders/index.jsx","pages/Statistics/index.jsx","pages/Clients/index.jsx","pages/Clients/Client.jsx","pages/Clients/component/ClientForm.jsx","pages/Foods/index.jsx","pages/Foods/Food.jsx","pages/Foods/component/FoodForm.jsx","pages/Orders/ShowOrder/index.jsx","pages/Orders/OrderForm/FormProvider.js","pages/Orders/OrderForm/_form.jsx","pages/Orders/OrderForm/index.jsx","pages/Orders/ShowOrder/Taxi.jsx","pages/Home/index.jsx","App.js","redux/store.js","serviceWorker.js","redux/actions/user.js","redux/actions/app.js","index.js","redux/actionTypes.js"],"names":["combineReducers","reduce","initial","name","require","default","initialState","isReady","state","type","payload","APP_SET_IS_READY","initialUser","user","SET_USER","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Block","children","className","classNames","Button","props","size","key","touched","errors","url","letter","src","bgColor","charCode","charCodeAt","background","color","avatarColor","style","backgroundColor","axios","defaults","baseURL","process","withCredentials","data","csrf","then","response","post","remember","get","r","window","location","reload","catch","error","console","log","cancel","CancelToken","apiClient","save","put","params","cancelToken","c","getList","show","a","delete","apiFood","formData","FormData","append","price","image","apiOrder","setStatus","statuses","getStatistic","to","pathname","includes","OrderedListOutlined","UserOutlined","ShopOutlined","PieChartOutlined","onClick","confirm","userApi","LoginOutlined","item","callback","React","useState","setData","myTimeout","setMyTimeout","value","setValue","useEffect","address","text","clearTimeout","temp","setTimeout","headers","items","responseItem","idx","push","finally","Item","validateStatus","length","help","hasFeedback","width","onChange","val","onSearch","options","onSelect","option","find","Sider","Layout","defaultSelected","collapsed","setCollaps","history","useHistory","collapsible","onCollapse","theme","selectedKeys","defaultSelectedKeys","mode","LoginForm","values","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","onSubmit","validateField","email","prefix","MailOutlined","placeholder","onBlur","password","LockOutlined","disabled","isAuth","rules","test","password_confirmation","phone","forEach","LoginFormContainer","withFormik","enableReinitialize","mapPropsToValues","validate","validateForm","setSubmitting","setErrors","undefined","replace","displayName","RegisterForm","fontSize","RegisterFormContainer","Auth","exact","path","component","0","1","2","mockData","Array","fill","loading","status","Orders","orders","setOrders","Date","toJSON","split","date","setDate","orderApi","date_from","margin","dateString","orderItem","avatar","title","active","Meta","description","imageStyle","height","TabPane","Tabs","setType","_","defaultActiveKey","tab","display","justifyContent","alignItems","count","total","Clients","clientApi","orientation","dataItem","actions","stopPropagation","Card","Modal","Client","client","setClient","setLoading","match","marginTop","EditOutlined","DeleteOutlined","icon","ExclamationCircleOutlined","content","okText","okType","cancelText","onOk","onCancel","minHeight","ClientForm","formik","useFormik","initialValues","notification","message","setValues","hasOwnProperty","Fragment","PhoneOutlined","HomeOutlined","Foods","foodApi","img","Food","food","setFood","FoodForm","setImg","fileProps","beforeUpload","file","action","fileList","defaultFileList","showUploadList","BookOutlined","DollarOutlined","marginBottom","UploadOutlined","Title","Typography","Option","Select","statusesVariants","isMobileStyles","navigator","userAgent","ShowOrder","order","setOrder","changeStatus","setChangeStatus","changeDeliveryType","setDeliveryTypes","changeStatusPaid","setChangeStatusPaid","err","label","total_sum","overflowCount","date_delivery","defaultValue","deliveryTypes","delivery_type","payment_status","paymentStatuses","level","itemLayout","dataSource","foods","renderItem","pivot","comment","unit","shape","CarOutlined","FormContext","createContext","clientId","time_delivery","FormProvider","foodID","cart","setCart","sum","setSum","setFoods","clients","setClients","setIsReady","selectedClient","setSelectedClient","Promise","all","tempCart","cloneDeep","splice","filter","client_id","join","Provider","field","tempSum","cartItem","priceItem","parseInt","handleChangeFood","pushItem","context","useContext","refInput","useRef","ref","showSearch","optionFilterProp","filterOption","input","toLowerCase","indexOf","format","showIcon","target","Send","Success","subTitle","extra","Container","_form","OrderForm","Taxi","from","setFrom","setTo","setPhone","coast","setCoast","setComment","useCallback","document","querySelector","addEventListener","mask","phoneFromStorage","localStorage","getItem","itemFromFromStorage","json","JSON","parse","orderCoast","lat","lon","toISOString","event","matrix","this","i","def","charAt","lastIndexOf","substr","pos","elem","focus","setSelectionRange","createTextRange","range","collapse","moveEnd","moveStart","select","setCursorPosition","checkAddress","itemAddress","prevAddress","openNotificationWithIcon","SearchAddress","stringify","setItem","href","preventDefault","TextArea","errorField","alert","Content","Footer","HomePage","SideBar","padding","Statistics","textAlign","connect","userReducer","appReducer","GuestRoute","PrivateRoute","Home","rest","render","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","init","dispatch","userActions","setAppIsready","appActions","ReactDOM","getElementById","URL","origin","fetch","contentType","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8f771aa5.chunk.js","sourcesContent":["import {combineReducers} from \"redux\";\r\n\r\nconst reducers = [\"userReducer\", \"appReducer\"];\r\n\r\nexport default combineReducers(\r\n    reducers.reduce((initial, name) => {\r\n        initial[name] = require(`./${name}`).default;\r\n        return initial;\r\n    }, {})\r\n);","import {APP_SET_IS_READY} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    isReady: false\r\n};\r\n\r\nexport default function (state = initialState, {type, payload}) {\r\n    if (type === APP_SET_IS_READY) {\r\n        return {\r\n            ...state,\r\n            isReady: payload\r\n        };\r\n    }\r\n\r\n    return state;\r\n}","import {SET_USER} from \"../actionTypes\";\r\n\r\nconst initialUser = {\r\n    user: null\r\n}\r\n\r\nexport default (state = initialUser, {type, payload}) => {\r\n    switch (type) {\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","var map = {\n\t\"./\": 117,\n\t\"./appReducer\": 250,\n\t\"./appReducer.js\": 250,\n\t\"./index\": 117,\n\t\"./index.js\": 117,\n\t\"./userReducer\": 251,\n\t\"./userReducer.js\": 251\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 553;","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Block.scss\";\r\n\r\nconst Block = ({ children, className }) => (\r\n    <div className={classNames(\"block\", className)}>{children}</div>\r\n);\r\n\r\nexport default Block;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button as BaseButton } from \"antd\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Button.scss\";\r\n\r\nconst Button = props => (\r\n    <BaseButton\r\n        {...props}\r\n        className={classNames(\"button\", props.className, {\r\n            \"button--large\": props.size === \"large\"\r\n        })}\r\n    />\r\n);\r\n\r\nButton.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default Button;","export default (key, touched, errors) => {\r\n    if (touched[key]) {\r\n        if (errors[key]) {\r\n            return \"error\";\r\n        } else {\r\n            return \"success\";\r\n        }\r\n    } else {\r\n        return \"\";\r\n    }\r\n};","import React from 'react';\r\nimport {avatarColor} from 'utils/helpers'\r\nimport {Avatar} from \"antd\";\r\n\r\nimport './LetterOrAvatar.scss';\r\n\r\nexport default ({url, letter, name}) => {\r\n    if (url) {\r\n        return <Avatar className={\"avatar\"} src={url}/>\r\n    }\r\n\r\n    const bgColor = avatarColor(name || letter);\r\n\r\n    return (\r\n        <div className={\"avatar\"} style={{backgroundColor: `${bgColor.background}`}}>\r\n            <div className={\"avatar__letter\"} style={{color: bgColor.color}}>\r\n                {letter}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","export default letter => {\r\n    const charCode = letter.charCodeAt();\r\n\r\n    if (charCode >= 1048 && charCode <= 1055) {\r\n        return {\r\n            background: '#F5D6D9',\r\n            color: '#F38181',\r\n        };\r\n    }\r\n    if (charCode >= 1049 && charCode <= 1063) {\r\n        return {\r\n            background: '#F8ECD5',\r\n            color: '#F1A32F',\r\n        };\r\n    }\r\n    if (charCode >= 1064 && charCode <= 1071) {\r\n        return {\r\n            background: '#DAD5F8',\r\n            color: '#816CFF',\r\n        };\r\n    }\r\n    return {\r\n        background: '#E9F5FF',\r\n        color: '#2A86FF',\r\n    };\r\n};","import axios from 'axios';\r\n// axios.defaults.baseURL = 'http://diplom.gussi-gussi.com';\r\naxios.defaults.baseURL = process.env.REACT_APP_URL || 'http://192.168.31.183:8000';\r\naxios.defaults.withCredentials = true;\r\n\r\n\r\nexport default axios;","import axios from \"../config/axios\";\r\n\r\naxios.defaults.withCredentials = true;\r\nexport default {\r\n    register: (data) => {\r\n        return csrf().then(response => {\r\n            return axios.post('/register', {...data, remember: 'on'})\r\n        })\r\n    },\r\n\r\n    login: (data) => {\r\n        return csrf().then(response => {\r\n            return axios.post('/login', {...data, remember: 'on'})\r\n        })\r\n\r\n    },\r\n\r\n    me: () => {\r\n        return csrf().then(response => {\r\n            return axios.get('/api/user')\r\n        })\r\n    },\r\n\r\n    logout: () => {\r\n        csrf().then(r => {\r\n            axios.post('/logout')\r\n                .then(response => {\r\n                    window.location.reload();\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.response);\r\n                })\r\n        })\r\n    }\r\n\r\n}\r\n\r\nfunction csrf() {\r\n    axios.defaults.withCredentials = true;\r\n    return axios.get('/sanctum/csrf-cookie')\r\n}","import axios from '../config/axios';\r\n\r\nconst CancelToken = axios.CancelToken;\r\n\r\nlet cancel;\r\nconst apiClient = {\r\n    save: (data) => {\r\n        if (null !== data.id && \"\" !== data.id) {\r\n            return axios.put(`/api/clients/${data.id}`, data);\r\n        }\r\n\r\n\r\n        return axios.post('/api/clients', data);\r\n    },\r\n\r\n    get: (params = null) => {\r\n        return csrf().then(response => {\r\n            return axios.get('/api/clients', {\r\n                params,\r\n                cancelToken: new CancelToken(function executor(c) {\r\n                    // An executor function receives a cancel function as a parameter\r\n                    cancel = c;\r\n                })\r\n            })\r\n        })\r\n    },\r\n\r\n    getList: (params = null) => {\r\n        return axios.get('/api/clients/list', params)\r\n    },\r\n\r\n    show: async (id) => {\r\n        return await axios.get(`/api/clients/${id}`);\r\n    },\r\n\r\n    delete: id => axios.delete(`/api/clients/${id}`),\r\n\r\n    cancel: function () {\r\n        cancel();\r\n    }\r\n\r\n}\r\n\r\nfunction csrf() {\r\n    axios.defaults.withCredentials = true;\r\n    return axios.get('/sanctum/csrf-cookie')\r\n}\r\n\r\nexport default apiClient;","import axios from '../config/axios';\r\n\r\nconst CancelToken = axios.CancelToken;\r\n\r\nlet cancel;\r\n\r\nconst apiFood = {\r\n    save: (data) => {\r\n        const formData = new FormData();\r\n        formData.append(\"name\", data.name);\r\n        formData.append(\"price\", data.price);\r\n\r\n        if (data.image !== null) {\r\n            formData.append(\"img\", data.image);\r\n        }\r\n\r\n\r\n        if (data.id) {\r\n            formData.append('_method', 'PATCH')\r\n            return axios.post(`/api/foods/${data.id}`, formData);\r\n        }\r\n\r\n\r\n        return axios.post('/api/foods', formData);\r\n    },\r\n\r\n    cancel: function () {\r\n        cancel();\r\n    },\r\n    get: (params = null) => {\r\n        return axios.get('/api/foods', {\r\n            params,\r\n            cancelToken: new CancelToken(function executor(c) {\r\n                // An executor function receives a cancel function as a parameter\r\n                cancel = c;\r\n            })\r\n        })\r\n\r\n    },\r\n\r\n    getList: (params = null) => {\r\n        return axios.get('/api/foods/list', params);\r\n    },\r\n\r\n    show: (id) => {\r\n        return axios.get(`/api/foods/${id}`);\r\n    },\r\n\r\n    delete: id => axios.delete(`/api/foods/${id}`)\r\n}\r\n\r\nexport default apiFood;","import axios from '../config/axios';\r\n\r\nconst apiOrder = {\r\n    save: data => {\r\n        return csrf().then(r => {\r\n            return axios.post('/api/orders', data)\r\n        });\r\n    },\r\n\r\n    get: (params = {}) => {\r\n        return csrf().then(r => {\r\n            return axios.get('/api/orders', {params});\r\n        })\r\n    },\r\n\r\n    show: (id) => {\r\n       return csrf().then(r => {\r\n           return axios.get(`/api/orders/${id}`);\r\n       })\r\n    },\r\n\r\n    setStatus: (id, statuses) => {\r\n\r\n        return csrf().then(r => {\r\n            return axios.put(`/api/orders/${id}`, {...statuses})\r\n        })\r\n    },\r\n\r\n    delete: id => {\r\n        return csrf().then(r => {\r\n            return axios.delete(`/api/orders/${id}`);\r\n        })\r\n    },\r\n\r\n    getStatistic: (params, type) => {\r\n        return csrf().then(r => {\r\n            return axios.get('/api/stats', {params: {...params, type}})\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction csrf() {\r\n    axios.defaults.withCredentials = true;\r\n    return axios.get('/sanctum/csrf-cookie')\r\n}\r\n\r\nexport default apiOrder;","import React from \"react\";\r\nimport {\r\n    PieChartOutlined,\r\n    UserOutlined,\r\n    ShopOutlined,\r\n    LoginOutlined,\r\n    OrderedListOutlined\r\n} from '@ant-design/icons'\r\n\r\nimport './BottomNav.scss';\r\nimport {Link} from \"react-router-dom\";\r\nimport {userApi} from \"../../core/api\";\r\n\r\nexport default () => {\r\n\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <Link to=\"/\" className={window.location.pathname === '/' || window.location.pathname.includes('orders')  ? 'active' : ''}>\r\n                <OrderedListOutlined/>\r\n                <span> Заказы</span>\r\n            </Link>\r\n            <Link to=\"/clients\" className={window.location.pathname.includes('clients') ? 'active' : ''}>\r\n                <UserOutlined/>\r\n                <span> Клиенты</span>\r\n            </Link>\r\n\r\n            <Link to=\"/foods\" className={window.location.pathname.includes('foods') ? 'active' : ''}>\r\n                <ShopOutlined/>\r\n                <span> Ассортимент</span>\r\n            </Link>\r\n\r\n            <Link to=\"/statistics\" className={window.location.pathname.includes('statistics') ? 'active' : ''}>\r\n                <PieChartOutlined/>\r\n                <span> Статистика</span>\r\n            </Link>\r\n\r\n            <Link to=\"/#\" onClick={e => {\r\n                if (window.confirm('Вы действительно хотите покинуть сайт ?')) {\r\n                    userApi.logout();\r\n                }\r\n            }}>\r\n                <LoginOutlined/>\r\n                <span> Выйти</span>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport {AutoComplete, Form} from 'antd';\r\n\r\nexport default ({item, callback}) => {\r\n    const [data, setData] = React.useState([]);\r\n    const [myTimeout, setMyTimeout] = React.useState(null)\r\n    const [value, setValue] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        if (item) {\r\n            setValue(item.address)\r\n            get(item.address);\r\n        }\r\n    }, [item]);\r\n\r\n    const handleSearchFrom = (text) => {\r\n        setValue(text)\r\n        if (\"\" !== text) {\r\n            get(text);\r\n        }\r\n    }\r\n\r\n\r\n    const handleSelect = option => {\r\n        const item = data.find(item => item.value === option)\r\n        callback(item);\r\n    }\r\n\r\n    const get = text => {\r\n        if (myTimeout) {\r\n            clearTimeout(myTimeout);\r\n        }\r\n        const temp = setTimeout(() => {\r\n            setData([]);\r\n            const config = {\r\n                \"headers\": {\r\n                    \"Sec-Fetch-Dest\": \"empty\",\r\n                    \"Sec-Fetch-Mod\": \"cors\",\r\n                    \"Sec-Fetch-Site\": \"same-origin\",\r\n                    \"X-Site-VtmId\": \"134\",\r\n                    \"X-Site-VtmGroupId\": \"56\",\r\n                    \"Accept\": \"*/*\"\r\n                },\r\n            }\r\n            axios.defaults.withCredentials = false;\r\n            axios.get('https://websites.platform.taximaster.ru/v2/find_address?needle=' + text, {headers: config.headers})\r\n                .then(response => {\r\n                    const items = []\r\n\r\n                    response.data.map((responseItem, idx) => {\r\n                        if (idx <= 9) {\r\n                            items.push(responseItem)\r\n                        }\r\n\r\n                    })\r\n\r\n                    setData(items);\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.response)\r\n                })\r\n                .finally(() => {\r\n                })\r\n        }, 500)\r\n\r\n        setMyTimeout(temp)\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <Form.Item validateStatus={data.length !== 0 ? 'success' : 'error'} help={data.length !== 0 ? '' : 'Не удалось найти такой адрес'}\r\n                      hasFeedback>\r\n               <AutoComplete  value={value} style={{width: '100%'}} onChange={val => setValue(val)}\r\n                             onSearch={handleSearchFrom} options={data} onSelect={handleSelect}/>\r\n           </Form.Item>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Layout, Menu} from \"antd\";\r\nimport {userApi} from \"../../core/api\";\r\n\r\nimport {\r\n    PieChartOutlined,\r\n    UserOutlined,\r\n    ShopOutlined,\r\n    LoginOutlined,\r\n    OrderedListOutlined\r\n} from '@ant-design/icons'\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst {Sider} = Layout;\r\n\r\n\r\nconst defaultSelected = () => {\r\n    if (window.location.pathname === '/' || window.location.pathname.includes('orders')) {\r\n        return \"1\"\r\n    } else if (window.location.pathname.includes('clients')) {\r\n        return \"2\";\r\n    } else if (window.location.pathname.includes('foods')) {\r\n        return \"3\";\r\n    } else if (window.location.pathname.includes('statistics')) {\r\n        return \"4\";\r\n    }\r\n}\r\n\r\nexport default () => {\r\n    const [collapsed, setCollaps] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n\r\n    return (\r\n        <Sider className={\"sider\"} collapsible collapsed={collapsed} onCollapse={() => setCollaps(!collapsed)}>\r\n            <div className=\"logo\"/>\r\n            <Menu theme=\"dark\" selectedKeys={[defaultSelected()]} defaultSelectedKeys={[defaultSelected()]} mode=\"inline\">\r\n                <Menu.Item key=\"1\" onClick={() => history.push('/')}>\r\n                    <OrderedListOutlined/>\r\n                    <span>Заказы</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\" onClick={() => history.push('/clients')}>\r\n                    <UserOutlined/>\r\n                    <span>Клиенты</span>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"3\" onClick={() => history.push('/foods')}>\r\n                    <ShopOutlined/>\r\n                    <span>Ассортимент</span>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"4\" onClick={() => history.push('/statistics')}>\r\n                    <PieChartOutlined/>\r\n                    <span>Статистика</span>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"5\" onClick={() => {\r\n                    if (window.confirm('Вы действительно хотите покинуть сайт ?')) {\r\n                        userApi.logout();\r\n                    }\r\n                }}>\r\n                    <LoginOutlined/>\r\n                    <span>Выйти</span>\r\n                </Menu.Item>\r\n\r\n            </Menu>\r\n        </Sider>\r\n    )\r\n}","import React from \"react\";\r\nimport {Form, Input} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {MailOutlined, LockOutlined} from '@ant-design/icons';\r\n\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\n\r\nconst LoginForm = props => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isValid,\r\n        isSubmitting\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"auth__top\">\r\n                <h2>Войти в аккаунт</h2>\r\n                <p>Пожалуйста, войдите в свой аккаунт</p>\r\n            </div>\r\n            <Block>\r\n                <Form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"email\", touched, errors)}\r\n                        help={!touched.email ? \"\" : errors.email}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"email\"\r\n                            prefix={<MailOutlined type=\"mail\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            placeholder=\"E-Mail\"\r\n                            value={values.email}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"password\", touched, errors)}\r\n                        help={!touched.password ? \"\" : errors.password}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"password\"\r\n                            prefix={<LockOutlined type=\"lock\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Пароль\"\r\n                            value={values.password}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={isSubmitting}\r\n                            onClick={handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"large\"\r\n                        >\r\n                            Войти в аккаунт\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <Link className=\"auth__register-link\" to=\"/signup\">\r\n                        Зарегистрироваться\r\n                    </Link>\r\n                </Form>\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","export default ({ isAuth, values, errors }) => {\r\n\r\n\r\n    const rules = {\r\n        email: value => {\r\n            if (!value) {\r\n                errors.email = \"Введите E-Mail\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n                errors.email = \"Неверный E-Mail\";\r\n            }\r\n        },\r\n        password: value => {\r\n            if (!value) {\r\n                errors.password = \"Введите пароль\";\r\n            } else if (\r\n                !isAuth &&\r\n                !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(value)\r\n            ) {\r\n                errors.password = \"Слишком лёгкий пароль\";\r\n            }\r\n        },\r\n        password_confirmation: value => {\r\n\r\n            if (!value) {\r\n                errors.password_confirmation = \"Введите пароль повторно\";\r\n            }\r\n\r\n            if (!isAuth || value !== values.password) {\r\n                errors.password_confirmation = \"Пароли не совпадают\";\r\n            }\r\n        },\r\n        name: value => {\r\n            if (!isAuth || !value) {\r\n                errors.name = \"Укажите имя и фамилию\";\r\n            }\r\n        },\r\n\r\n        phone: value => {\r\n            if (!isAuth || !value) {\r\n                errors.phone = \"Укажите номер телефона\";\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n};","import {withFormik} from 'formik';\r\n\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nimport validateForm from 'utils/validate';\r\nimport {userApi} from \"core/api\";\r\n\r\nconst LoginFormContainer = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: '',\r\n    }),\r\n    validate: values => {\r\n        let errors = {};\r\n\r\n        validateForm({isAuth: true, values, errors});\r\n\r\n        return errors;\r\n    },\r\n    handleSubmit: async (values, {setSubmitting, setErrors, props}) => {\r\n        await userApi.login(values).catch(errors => {\r\n            if (errors.response !== undefined) {\r\n                let error = {};\r\n                Object.keys(errors.response.data.errors).forEach(key => {\r\n                    error[key] = errors.response.data.errors[key][0];\r\n                });\r\n                setErrors(error)\r\n            }\r\n        }).then(response => {\r\n            userApi.me().then(r => {\r\n                window.location.replace('/')\r\n            });\r\n            setSubmitting(false);\r\n        });\r\n    },\r\n    displayName: 'LoginForm',\r\n})(LoginForm);\r\n\r\nexport default LoginFormContainer;","import React from \"react\";\r\nimport {Form, Input} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {MailOutlined, LockOutlined, UserOutlined} from '@ant-design/icons';\r\n\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\n\r\nconst RegisterForm = props => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isValid,\r\n        isSubmitting\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"auth__top\">\r\n                <h2>Зарегистрироваться</h2>\r\n                <p style={{fontSize: 14}}>Пожалуйста, пройдите регистрацию</p>\r\n            </div>\r\n            <Block>\r\n                <Form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"email\", touched, errors)}\r\n                        help={!touched.email ? \"\" : errors.email}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"email\"\r\n                            prefix={<MailOutlined type=\"mail\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            placeholder=\"E-Mail\"\r\n                            value={values.email}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"name\", touched, errors)}\r\n                        help={!touched.name ? \"\" : errors.name}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"name\"\r\n                            prefix={<UserOutlined type=\"user\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            placeholder=\"Имя\"\r\n                            value={values.name}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"password\", touched, errors)}\r\n                        help={!touched.password ? \"\" : errors.password}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"password\"\r\n                            prefix={<LockOutlined type=\"lock\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Пароль\"\r\n                            value={values.password}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"password_confirmation\", touched, errors)}\r\n                        help={!touched.password_confirmation ? \"\" : errors.password_confirmation}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"password_confirmation\"\r\n                            prefix={<LockOutlined type=\"lock\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Повторите пароль\"\r\n                            value={values.password_confirmation}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={isSubmitting}\r\n                            onClick={handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"large\"\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <Link className=\"auth__register-link\" to=\"/login\">\r\n                        У меня уже есть аккаунт\r\n                    </Link>\r\n                </Form>\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;","import {withFormik} from 'formik';\r\n\r\nimport RegisterForm from '../components/RegisterForm';\r\n\r\nimport validateForm from 'utils/validate';\r\nimport {userApi} from \"core/api\";\r\n\r\nconst RegisterFormContainer = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: '',\r\n        name: '',\r\n        password_confirmation: ''\r\n    }),\r\n    validate: values => {\r\n        let errors = {};\r\n\r\n        validateForm({isAuth: true, values, errors});\r\n\r\n\r\n        return errors;\r\n    },\r\n    handleSubmit: (values, {setSubmitting, setErrors, props}) => {\r\n        userApi.register(values)\r\n            .then(r => {\r\n                userApi.me().then(r => {\r\n                    window.location.replace('/');\r\n                });\r\n            })\r\n            .catch(errors => {\r\n                if (errors.response !== undefined) {\r\n                    let error = {};\r\n                    Object.keys(errors.response.data.errors).forEach(key => {\r\n                        error[key] = errors.response.data.errors[key][0];\r\n                    })\r\n                    setErrors(error)\r\n                }\r\n\r\n                setSubmitting(false);\r\n            });\r\n    },\r\n    displayName: 'RegisterForm',\r\n})(RegisterForm);\r\n\r\nexport default RegisterFormContainer;","import React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\n\r\nimport LoginFormContainer from \"./components/Login/containers/LoginFormContainer\";\r\nimport RegisterFormContainer from \"./components/Signup/containers/RegisterFormContainer\";\r\n\r\nimport \"./Auth.scss\";\r\n\r\n\r\nconst Auth = () => (\r\n    <section className=\"auth\">\r\n        <div className=\"auth__content\">\r\n            <Route exact path=\"/login\" component={LoginFormContainer}/>\r\n            <Route exact path=\"/signup\" component={RegisterFormContainer}/>\r\n        </div>\r\n    </section>\r\n);\r\n\r\nexport default Auth;","import React from 'react';\r\nimport {List, Skeleton, Breadcrumb, Divider, DatePicker, Button, Badge, Empty} from 'antd';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {orderApi} from \"../../core/api\";\r\n\r\nimport './Orders.scss'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst statuses = {\r\n    0: {\r\n        text: 'Не выполнено',\r\n        color: 'red'\r\n    },\r\n    1: {\r\n        text: 'Выполнено',\r\n        color: 'green'\r\n    },\r\n\r\n    2: {\r\n        text: 'Выполнено',\r\n        color: 'green'\r\n    }\r\n}\r\n\r\nconst mockData = Array(5)\r\n    .fill(0)\r\n    .map((item, key) => ({\r\n        name: '',\r\n        letter: '',\r\n        id: key,\r\n        loading: true,\r\n        status: 0,\r\n    }))\r\n\r\n//\r\nconst Orders = (props) => {\r\n\r\n    const [orders, setOrders] = React.useState([{\r\n        key: '',\r\n        data: mockData\r\n    }]);\r\n    const [date, setDate] = React.useState(new Date().toJSON().split(\"T\")[0]);\r\n    React.useEffect(() => {\r\n        orderApi.get({date_from: date})\r\n            .then(response => {\r\n                setOrders(response.data);\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n    }, [date])\r\n\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>Заказы</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n\r\n                <div className={\"orders\"}>\r\n                    <DatePicker placeholder={\"Заказы от\"} onChange={(date, dateString) => setDate(dateString)}/>\r\n\r\n                    <Button onClick={() => props.history.push('/orders/create')}>\r\n                        Добавить\r\n                    </Button>\r\n\r\n                </div>\r\n\r\n\r\n                {orders.map((item, key) => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <Divider>{item.key}</Divider>\r\n                            {item.data.map(orderItem => {\r\n                                return (\r\n                                    <List.Item\r\n                                        className={'cursor-pointer'}\r\n                                        onClick={() => props.history.push('/orders/' + orderItem.id)}\r\n                                        key={orderItem.id}\r\n                                    >\r\n                                        <Skeleton avatar title={false} loading={orderItem.loading} active>\r\n                                            <List.Item.Meta\r\n                                                avatar={\r\n                                                    <LetterOrAvatar letter={orderItem.letter} name={orderItem.name}/>\r\n                                                }\r\n                                                title={<Link to={`/orders/${orderItem.id}`}>{orderItem.name}</Link>}\r\n                                                description={<Badge color={statuses[orderItem.status].color}\r\n                                                                    text={statuses[orderItem.status].text}/>}\r\n                                            />\r\n\r\n                                        </Skeleton>\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                {orders.length === 0 && <Empty\r\n                    image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n                    imageStyle={{\r\n                        height: 60,\r\n                    }}\r\n                    description={\r\n                        <span>\r\n                            Нет данных\r\n                        </span>\r\n                    }\r\n                >\r\n                    <Button onClick={() => props.history.push('/orders/create')} type=\"primary\">Добавить</Button>\r\n                </Empty>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders;","import React from \"react\";\r\nimport {Badge, Breadcrumb, List, Skeleton, Tabs} from 'antd';\r\nimport {UserOutlined, ShopOutlined} from '@ant-design/icons';\r\nimport {Link} from \"react-router-dom\";\r\nimport {orderApi} from \"../../core/api\";\r\nimport {LetterOrAvatar} from \"../../components\";\r\n\r\nconst {TabPane} = Tabs;\r\n\r\n\r\nexport default props => {\r\n    const [data, setData] = React.useState([])\r\n    const [type, setType] = React.useState('foods');\r\n    React.useEffect(_ => {\r\n        orderApi.getStatistic({}, type)\r\n            .then(r => {\r\n                setData(r.data)\r\n            })\r\n    }, [type])\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/\"}>\r\n                        Заказы\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>Статистика</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <div className={\"site-layout-content\"}>\r\n                <Tabs defaultActiveKey=\"1\">\r\n                    <TabPane\r\n                        tab={\r\n                            <span onClick={() => setType('foods')}>\r\n                             <ShopOutlined/>\r\n                              Ассортимент\r\n                            </span>\r\n                        }\r\n                        key=\"1\"\r\n                    >\r\n                        {data.map((item, key) => {\r\n                            return (\r\n                                <List.Item\r\n                                    className={'cursor-pointer'}\r\n                                    key={key}\r\n                                >\r\n                                    <Skeleton avatar title={false} loading={item.loading} active>\r\n                                        <List.Item.Meta\r\n                                            avatar={\r\n                                                <LetterOrAvatar letter={item.letter} name={item.name}/>\r\n                                            }\r\n                                            title={<div style={{display: \"flex\", justifyContent: 'space-between', alignItems: \"center\"}}>\r\n                                                <Link to={`/orders/${item.id}`}>{item.name}</Link>\r\n                                            </div>}\r\n                                            description={\"Продано: \" + item.count}\r\n                                        />\r\n\r\n                                    </Skeleton>\r\n                                </List.Item>\r\n                            )\r\n                        })}\r\n                    </TabPane>\r\n                    <TabPane\r\n                        tab={\r\n                            <span onClick={() => setType('clients')}>\r\n                               <UserOutlined/>\r\n                              Клиенты\r\n                            </span>\r\n                        }\r\n                        key=\"2\"\r\n                    >\r\n                        {data.map((item, key) => {\r\n                            return (\r\n                                <List.Item\r\n                                    key={key}\r\n                                >\r\n                                    <Skeleton avatar title={false} loading={item.loading} active>\r\n                                        <List.Item.Meta\r\n                                            avatar={\r\n                                                <LetterOrAvatar letter={item.letter} name={item.name}/>\r\n                                            }\r\n                                            title={<div style={{display: \"flex\", justifyContent: 'space-between', alignItems: \"center\"}}>\r\n                                                <Link to={`/orders/${item.id}`}>{item.name}</Link>\r\n                                                <Badge color={\"#83e246\"}\r\n                                                       text={item.total + \"Р\"}/>\r\n                                            </div>}\r\n                                            description={\"Заказов: \" + item.count}\r\n                                        />\r\n\r\n                                    </Skeleton>\r\n                                </List.Item>\r\n                            )\r\n                        })}\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {List, Skeleton, Breadcrumb, Divider, Button, Empty} from 'antd';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {clientApi} from \"../../core/api\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport './Clients.scss';\r\n\r\nconst mockData = Array(5)\r\n    .fill(0)\r\n    .map((item, key) => ({\r\n        name: '',\r\n        letter: '',\r\n        id: key,\r\n        loading: true,\r\n    }))\r\n\r\nconst Clients = (props) => {\r\n\r\n    const [data, setData] = React.useState([{\r\n        key: '',\r\n        data: mockData\r\n    }]);\r\n    React.useEffect(() => {\r\n        clientApi.get()\r\n            .then(response => {\r\n                setData(response.data.data);\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n        return () => {\r\n            clientApi.cancel();\r\n        }\r\n    }, [])\r\n\r\n    const getOrders = () => {\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>Клиенты</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n                <div className={\"clients\"}>\r\n                    <div>\r\n                        <Button onClick={() => props.history.push('/clients/create')}>\r\n                            Добавить\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                {data.map((item, key) => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <Divider orientation={\"left\"}>{item.key}</Divider>\r\n                            {item.data.map(dataItem => {\r\n                                return (\r\n                                    <List.Item\r\n                                        className={'cursor-pointer'}\r\n                                        key={dataItem.id}\r\n                                        onClick={() => props.history.push(`/clients/${dataItem.id}`)}\r\n                                        actions={[<Link onClick={(e) => e.stopPropagation()}\r\n                                                        to={`/clients/${dataItem.id}/edit`}\r\n                                                        key=\"list-loadmore-edit\">Изменить</Link>]}\r\n                                    >\r\n                                        <Skeleton avatar title={false} loading={dataItem.loading} active>\r\n                                            <List.Item.Meta\r\n                                                avatar={\r\n                                                    <LetterOrAvatar letter={dataItem.letter} name={dataItem.name}/>\r\n                                                }\r\n                                                title={<Link to={`/clients/${dataItem.id}`}>{dataItem.name}</Link>}\r\n                                                description=\"\"\r\n                                            />\r\n\r\n                                        </Skeleton>\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                {data.length === 0 && <Empty\r\n                    image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n                    imageStyle={{\r\n                        height: 60,\r\n                    }}\r\n                    description={\r\n                        <span>\r\n                         Нет данных\r\n                         </span>\r\n                    }\r\n                >\r\n                    <Button onClick={() => props.history.push('/clients/create')} type=\"primary\">Добавить</Button>\r\n                </Empty>}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clients;","import React from \"react\";\r\nimport {clientApi} from \"../../core/api\";\r\nimport {Skeleton, Card, Breadcrumb, Modal, List, Badge} from 'antd';\r\nimport {EditOutlined, DeleteOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Meta} = Card;\r\n\r\n\r\nconst {confirm} = Modal;\r\n\r\nconst statuses = {\r\n    0: {\r\n        text: 'Не выполнено',\r\n        color: 'red'\r\n    },\r\n    1: {\r\n        text: 'Выполнено',\r\n        color: 'green'\r\n    },\r\n\r\n    2: {\r\n        text: 'Выполнено',\r\n        color: 'green'\r\n    }\r\n}\r\nconst Client = (props) => {\r\n    const [client, setClient] = React.useState({\r\n        name: ''\r\n    });\r\n\r\n    const showDeleteConfirm = id => {\r\n        confirm({\r\n            title: 'Удаление',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            content: 'Вы действительно хотите удалить клиента?',\r\n            okText: 'Да',\r\n            okType: 'danger',\r\n            cancelText: 'Отменить',\r\n            onOk() {\r\n                clientApi.delete(id).then(response => {\r\n                    props.history.replace('/clients');\r\n                })\r\n            },\r\n            onCancel() {\r\n\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true)\r\n        clientApi.show(props.match.params.id)\r\n            .then(response => {\r\n\r\n                if (null === response.data.client) {\r\n                    props.history.push('/404')\r\n                }\r\n\r\n                setClient(response.data.client);\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                props.history.push('/404')\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n\r\n    }, [props.match.params.id])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/clients\"}>Клиенты</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>{client.name}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n\r\n            <Card\r\n                style={{width: '100%', marginTop: 16}}\r\n                actions={[\r\n                    <EditOutlined key=\"edit\"\r\n                                  onClick={() => props.history.push(`/clients/${props.match.params.id}/edit`, {\r\n                                      client: client\r\n                                  })}/>,\r\n                    <DeleteOutlined onClick={() => showDeleteConfirm(props.match.params.id)} key=\"delete\"/>,\r\n                ]}\r\n            >\r\n                <Skeleton loading={loading} avatar active>\r\n                    <Meta\r\n                        avatar={\r\n                            <LetterOrAvatar letter={client?.letter || ''} name={client.name || ''}/>\r\n                        }\r\n                        title={client.name}\r\n                    />\r\n                </Skeleton>\r\n            </Card>\r\n\r\n            <div className={\"site-layout-content\"} style={{minHeight: 'auto'}}>\r\n                {client && client.orders &&  client?.orders.map(orderItem => {\r\n                    return (\r\n                        <List.Item\r\n                            className={'cursor-pointer'}\r\n                            onClick={() => props.history.push('/orders/' + orderItem.id)}\r\n                            key={orderItem.id}\r\n                        >\r\n                            <Skeleton avatar title={false} loading={orderItem.loading} active>\r\n                                <List.Item.Meta\r\n                                    avatar={\r\n                                        <LetterOrAvatar letter={\"#\" + orderItem.id} name={orderItem.name}/>\r\n                                    }\r\n                                    title={<Link to={`/orders/${orderItem.id}`}>#{orderItem.id} {orderItem.name}</Link>}\r\n                                    description={<Badge color={statuses[orderItem.status].color}\r\n                                                        text={statuses[orderItem.status].text}/>}\r\n                                />\r\n\r\n                            </Skeleton>\r\n                        </List.Item>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Client;","import React from \"react\";\r\nimport {Breadcrumb, Form, Input, notification } from \"antd\";\r\nimport {PhoneOutlined, UserOutlined, HomeOutlined} from '@ant-design/icons';\r\n\r\nimport {useFormik} from \"formik\";\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\nimport {clientApi} from \"../../../core/api\";\r\nimport apiClient from \"../../../core/api/client\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n\r\n    const rules = {\r\n        name: value => {\r\n            if (!value) {\r\n                errors.name = \"Укажите имя и фамилию\";\r\n            }\r\n        },\r\n\r\n        phone: value => {\r\n            if (!value) {\r\n                errors.phone = \"Укажите номер телефона\";\r\n            }\r\n        }\r\n    }\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n\r\n    return errors;\r\n};\r\n\r\n\r\nconst openNotificationWithIcon = type => {\r\n    notification[type]({\r\n        message: 'Клиент',\r\n        description:\r\n            'Изменения успешно сохранены',\r\n    });\r\n};\r\n\r\nconst ClientForm = props => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            phone: '',\r\n            address: '',\r\n            id: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            apiClient.save(values).then(response => {\r\n                openNotificationWithIcon('success')\r\n                props.history.push(`/clients/${response.data.client.id}`)\r\n            })\r\n        },\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (undefined !== props.location.state) {\r\n            formik.setValues(props.location.state.client)\r\n        } else if (props.match.params.hasOwnProperty('id')) {\r\n            clientApi.show(props.match.params.id)\r\n                .then(response => {\r\n                    formik.setValues(response.data.client)\r\n                })\r\n        }\r\n\r\n    }, [props.location.state, props.match.params])\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/clients\"}>\r\n                        Клиенты\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                {\r\n                    formik.values.id !== ''\r\n                        ?\r\n                        <React.Fragment>\r\n                            <Breadcrumb.Item>\r\n                                <Link to={\"/clients/\" + formik.values.id}>\r\n                                    {formik.values.name}\r\n                                </Link>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>Редактировать</Breadcrumb.Item>\r\n                        </React.Fragment>\r\n                        :\r\n                        <Breadcrumb.Item>Создать</Breadcrumb.Item>\r\n\r\n                }\r\n\r\n            </Breadcrumb>\r\n\r\n            <Block>\r\n                {formik.values &&\r\n                <Form onSubmit={formik.handleSubmit} className=\"client-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"name\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.name ? \"\" : formik.errors.name}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"name\"\r\n                            prefix={<UserOutlined type=\"user\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Имя\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"phone\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.phone ? \"\" : formik.errors.phone}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"phone\"\r\n                            prefix={<PhoneOutlined type=\"phone\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"+7(999)999-99-99\"\r\n                            value={formik.values.phone}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"address\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.address ? \"\" : formik.errors.address}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"address\"\r\n                            prefix={<HomeOutlined type=\"home\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Адрес доставки\"\r\n                            value={formik.values.address}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item>\r\n                        {formik.isSubmitting && !formik.isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={formik.isSubmitting}\r\n                            onClick={formik.handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"medium\"\r\n                        >\r\n                            Сохранить\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>}\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClientForm;","import React from 'react';\r\nimport {List, Skeleton, Breadcrumb, Divider, Button, Empty} from 'antd';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {foodApi} from \"../../core/api\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport './Foods.scss';\r\n\r\nconst mockData = Array(5)\r\n    .fill(0)\r\n    .map((item, key) => ({\r\n        name: '',\r\n        letter: '',\r\n        id: key,\r\n        loading: true,\r\n    }))\r\n\r\nconst Foods = (props) => {\r\n\r\n    const [data, setData] = React.useState([{\r\n        key: '',\r\n        data: mockData\r\n    }]);\r\n    React.useEffect(() => {\r\n        foodApi.get()\r\n            .then(response => {\r\n                setData(response.data.data);\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n\r\n        return () => {\r\n            foodApi.cancel();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>Ассортимент</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n                <div className={\"foods\"}>\r\n                    <div>\r\n                        <Button onClick={() => props.history.push('/foods/create')}>\r\n                            Добавить\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                {data.map((item, key) => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <Divider orientation={\"left\"}>{item.key}</Divider>\r\n                            {item.data.map(dataItem => {\r\n                                return (\r\n                                    <List.Item\r\n                                        className={'cursor-pointer'}\r\n                                        key={dataItem.id}\r\n                                        onClick={() => props.history.push(`/foods/${dataItem.id}`)}\r\n                                        actions={[<Link onClick={(e) => e.stopPropagation()}\r\n                                                        to={`/foods/${dataItem.id}/edit`}\r\n                                                        key=\"list-loadmore-edit\">Изменить</Link>]}\r\n                                    >\r\n                                        <Skeleton avatar title={false} loading={dataItem.loading} active>\r\n                                            <List.Item.Meta\r\n                                                avatar={\r\n                                                    <LetterOrAvatar url={dataItem.img} letter={dataItem.letter}\r\n                                                                    name={dataItem.name}/>\r\n                                                }\r\n                                                title={<Link to={`/foods/${dataItem.id}`}>{dataItem.name}</Link>}\r\n                                                description=\"\"\r\n                                            />\r\n\r\n                                        </Skeleton>\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                {data.length === 0 && <Empty\r\n                    image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n                    imageStyle={{\r\n                        height: 60,\r\n                    }}\r\n                    description={\r\n                        <span>\r\n                         Нет данных\r\n                         </span>\r\n                    }\r\n                >\r\n                    <Button onClick={() => props.history.push('/foods/create')} type=\"primary\">Добавить</Button>\r\n                </Empty>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Foods;","import React from \"react\";\r\nimport {foodApi} from \"../../core/api\";\r\nimport {Skeleton, Card, Breadcrumb, Modal} from 'antd';\r\nimport {EditOutlined, DeleteOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Meta} = Card;\r\n\r\n\r\nconst {confirm} = Modal;\r\n\r\n\r\nconst Food = (props) => {\r\n    const [food, setFood] = React.useState({\r\n        name: ''\r\n    });\r\n\r\n    const showDeleteConfirm = id => {\r\n        confirm({\r\n            title: 'Удаление',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            content: 'Вы действительно хотите удалить клиента?',\r\n            okText: 'Да',\r\n            okType: 'danger',\r\n            cancelText: 'Отменить',\r\n            onOk() {\r\n                foodApi.delete(id).then(response => {\r\n                    props.history.replace('/foods');\r\n                })\r\n            },\r\n            onCancel() {\r\n\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true)\r\n        foodApi.show(props.match.params.id)\r\n            .then(response => {\r\n                if (null === response.data.food) {\r\n                    props.history.push('/404')\r\n                }\r\n\r\n                setFood(response.data.food);\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                props.history.push('/404')\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n\r\n    }, [props.match.params.id])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/foods\"}>Ассортимент</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>{food.name}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n\r\n            <Card\r\n                style={{width: '100%', marginTop: 16}}\r\n                actions={[\r\n                    <EditOutlined key=\"edit\"\r\n                                  onClick={() => props.history.push(`/foods/${props.match.params.id}/edit`, {\r\n                                      food: food\r\n                                  })}/>,\r\n                    <DeleteOutlined onClick={() => showDeleteConfirm(props.match.params.id)} key=\"delete\"/>,\r\n                ]}\r\n            >\r\n                <Skeleton loading={loading} avatar active>\r\n                    <Meta\r\n                        avatar={\r\n                            <LetterOrAvatar url={food.image} letter={food?.letter || ''} name={food.name || ''}/>\r\n                        }\r\n                        title={food.name}\r\n                    />\r\n                </Skeleton>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Food;","import React from \"react\";\r\nimport {Breadcrumb, Form, Input, notification, Upload} from \"antd\";\r\nimport {BookOutlined, DollarOutlined, UploadOutlined} from '@ant-design/icons';\r\n\r\nimport {useFormik} from \"formik\";\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\nimport {foodApi} from \"../../../core/api\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n\r\n    const rules = {\r\n        name: value => {\r\n            if (!value) {\r\n                errors.name = \"Укажите название\";\r\n            }\r\n        },\r\n\r\n        price: value => {\r\n            if (!value) {\r\n                errors.price = \"Укажите цену\";\r\n            }\r\n        }\r\n    }\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n\r\n    return errors;\r\n};\r\n\r\n\r\nconst openNotificationWithIcon = type => {\r\n    notification[type]({\r\n        message: 'Клиент',\r\n        description:\r\n            'Изменения успешно сохранены',\r\n    });\r\n};\r\n\r\nconst FoodForm = props => {\r\n    const [img, setImg] = React.useState(null);\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            price: '',\r\n            id: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            foodApi.save({\r\n                ...values,\r\n                image: img\r\n            }).then(response => {\r\n                openNotificationWithIcon('success')\r\n                props.history.push(`/foods/${response.data.food.id}`)\r\n            })\r\n        },\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (undefined !== props.location.state) {\r\n            formik.setValues(props.location.state.food)\r\n        } else if (props.match.params.hasOwnProperty('id')) {\r\n            foodApi.show(props.match.params.id)\r\n                .then(response => {\r\n                    formik.setValues(response.data.food)\r\n                })\r\n        }\r\n    }, [props.location.state, props.match.params])\r\n\r\n\r\n    const fileProps = {\r\n        beforeUpload: function (file) {\r\n            setImg(file)\r\n\r\n\r\n            // Prevent upload\r\n            return false;\r\n        },\r\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n        onChange({file, fileList}) {\r\n\r\n        },\r\n        defaultFileList: [],\r\n        showUploadList: {\r\n            // showDownloadIcon: true,\r\n            // downloadIcon: 'download ',\r\n            // showRemoveIcon: true,\r\n            // removeIcon: <StarOutlined onClick={e => console.log(e, 'custom removeIcon event')} />,\r\n        },\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/foods\"}>\r\n                        Ассортимент\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                {\r\n                    formik.values.id !== ''\r\n                        ?\r\n                        <React.Fragment>\r\n                            <Breadcrumb.Item>\r\n                                <Link to={\"/foods/\" + formik.values.id}>\r\n                                    {formik.values.name}\r\n                                </Link>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>Редактировать</Breadcrumb.Item>\r\n                        </React.Fragment>\r\n                        :\r\n                        <Breadcrumb.Item>Создать</Breadcrumb.Item>\r\n\r\n                }\r\n\r\n            </Breadcrumb>\r\n\r\n            <Block>\r\n                {formik.values &&\r\n                <Form onSubmit={formik.handleSubmit} className=\"food-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"name\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.name ? \"\" : formik.errors.name}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"name\"\r\n                            prefix={<BookOutlined type=\"book\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Название\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"price\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.price ? \"\" : formik.errors.price}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"price\"\r\n                            type={\"number\"}\r\n                            prefix={<DollarOutlined type=\"price\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Цена\"\r\n                            value={formik.values.price}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Upload {...fileProps}>\r\n                        <Button style={{marginBottom: 10}}>\r\n                            <UploadOutlined/> Загрузить\r\n                        </Button>\r\n                    </Upload>\r\n\r\n\r\n                    <Form.Item>\r\n                        {formik.isSubmitting && !formik.isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={formik.isSubmitting}\r\n                            onClick={formik.handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"medium\"\r\n                        >\r\n                            Сохранить\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>}\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FoodForm;","import React from 'react'\r\nimport {orderApi} from \"../../../core/api\";\r\nimport {Breadcrumb, Descriptions, Badge, List, Typography, Divider, Button, Select} from 'antd';\r\nimport {LetterOrAvatar} from \"../../../components\";\r\nimport {EditOutlined, CarOutlined} from '@ant-design/icons';\r\n\r\nimport './OrderShow.scss'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Title} = Typography;\r\nconst {Option} = Select;\r\n\r\nconst statusesVariants = {\r\n    0: {\r\n        text: 'Не выполнено',\r\n        color: 'red'\r\n    },\r\n    1: {\r\n        text: 'Выполнено',\r\n        color: 'green'\r\n    }\r\n}\r\n\r\nconst isMobileStyles = () => {\r\n    return (/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)) ? {\r\n        display: \"flex\",\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    } : {\r\n\r\n    }\r\n}\r\n\r\n\r\nconst ShowOrder = props => {\r\n    const [order, setOrder] = React.useState(null);\r\n    const [changeStatus, setChangeStatus] = React.useState(false)\r\n    const [changeDeliveryType, setDeliveryTypes] = React.useState(false)\r\n    const [changeStatusPaid, setChangeStatusPaid] = React.useState(false)\r\n    const [statuses, setStatuses] = React.useState({});\r\n    React.useEffect(() => {\r\n        orderApi.show(props.match.params.id)\r\n            .then(response => {\r\n                if (null === response.data.data) {\r\n                    props.history.push('/404')\r\n                }\r\n                setOrder(response.data.data);\r\n            })\r\n            .catch(err => {\r\n                props.history.push('/404')\r\n            })\r\n    }, [])\r\n\r\n\r\n    const setStatus = (val, type = 'status') => {\r\n        orderApi.setStatus(order.id, {[type]: val})\r\n            .finally(_ => {\r\n                setOrder({\r\n                    ...order,\r\n                    [type]: val\r\n                })\r\n\r\n                // setStatuses(tempStatuses);\r\n\r\n                setChangeStatus(false)\r\n                setDeliveryTypes(false);\r\n                setChangeStatusPaid(false);\r\n            })\r\n    }\r\n\r\n    if (null === order) {\r\n        return <div>\r\n\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className={'site-content'}>\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/\"}>\r\n                        Заказы\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>{order?.name}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <div className={\"site-layout-content\"}>\r\n                <Descriptions title=\"Общая информация\">\r\n                    <Descriptions.Item label=\"Имя\">{order.name}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Номер телефона\">{order.phone}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Адрес\">{order.address || 'Не заполнено'}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Сумма заказа\">\r\n                        <Badge style={{backgroundColor: '#52c41a'}} count={order.total_sum + 'Р'}\r\n                               overflowCount={1000000}/>\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Дата доставки\">\r\n                        {order.date_delivery}\r\n                    </Descriptions.Item>\r\n\r\n                    <Descriptions.Item label=\"Статус\" style={isMobileStyles()}>\r\n\r\n                        {false === changeStatus &&\r\n                        <div className={\"cursor-pointer\"} onClick={() => setChangeStatus(true)}>\r\n                            <Badge color={statusesVariants[order.status].color}\r\n                                   text={statusesVariants[order.status].text}/>\r\n                            <EditOutlined/>\r\n                        </div>\r\n                        }\r\n\r\n                        {true === changeStatus && <div>\r\n                            <Select defaultValue={order.status} style={{width: '100%'}}\r\n                                    onChange={val => setStatus(val)}>\r\n                                <Option value=\"0\">Не выполнено</Option>\r\n                                <Option value=\"1\">Выполнено</Option>\r\n                            </Select>\r\n                        </div>}\r\n                    </Descriptions.Item>\r\n\r\n                    <Descriptions.Item label=\"Тип доставки\" style={isMobileStyles()}>\r\n\r\n                        {false === changeDeliveryType &&\r\n                        <div className={\"cursor-pointer\"} onClick={() => setDeliveryTypes(true)}>\r\n                            {order.deliveryTypes[order.delivery_type]}\r\n                            <EditOutlined/>\r\n                        </div>\r\n                        }\r\n\r\n                        {true === changeDeliveryType && <div>\r\n                            <Select defaultValue={order.delivery_type} style={{width: '100%'}}\r\n                                    onChange={val => setStatus(val, 'delivery_type')}>\r\n                                {order.deliveryTypes.map((item, key) => <Option key={key} value={key}>{item}</Option>)}\r\n                            </Select>\r\n                        </div>}\r\n                    </Descriptions.Item>\r\n\r\n                    <Descriptions.Item style={isMobileStyles()} label=\"Статус оплаты\">\r\n\r\n                        {false === changeStatusPaid &&\r\n                        <div className={\"cursor-pointer\"} onClick={() => setChangeStatusPaid(true)}>\r\n                            <Badge color={statusesVariants[order.payment_status].color}\r\n                                   text={order.paymentStatuses[order.payment_status]}/>\r\n                            <EditOutlined/>\r\n                        </div>\r\n                        }\r\n\r\n                        {true === changeStatusPaid && <div>\r\n                            <Select defaultValue={order.payment_status} style={{width: '100%'}}\r\n                                    onChange={val => setStatus(val, 'payment_status')}>\r\n                                {order.paymentStatuses.map((item, key) => <Option key={key} value={key}>{item}</Option>)}\r\n                            </Select>\r\n                        </div>}\r\n                    </Descriptions.Item>\r\n\r\n\r\n                </Descriptions>\r\n\r\n                <Divider/>\r\n\r\n                <div>\r\n\r\n                    <Title level={4}>Заказ</Title>\r\n\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={order.foods}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    avatar={<LetterOrAvatar url={item.image} letter={item.letter} name={item.name}/>}\r\n                                    title={item.name}\r\n                                    description={<div className={\"order\"}>\r\n                                        <span>{item.pivot.comment}</span>\r\n                                        <Badge style={{backgroundColor: '#52c41a'}}\r\n                                               count={item.pivot.count + ' ' + item.pivot.unit}\r\n                                               overflowCount={1000000}/>\r\n                                    </div>}\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <Divider/>\r\n                    <div>\r\n                        <Button onClick={() => props.history.push(`/orders/${order.id}/taxi`, {order})} type=\"primary\"\r\n                                shape=\"circle\" icon={<CarOutlined/>} size={'large'}\r\n                                style={{backgroundColor: '#fee35d', color: '#fff'}}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowOrder","import React from \"react\";\r\nimport _ from 'lodash';\r\nimport {clientApi, foodApi, orderApi} from \"../../../core/api\";\r\nimport {useFormik} from \"formik\";\r\n\r\nexport const FormContext = React.createContext({});\r\n\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n\r\n    const rules = {\r\n        clientId: value => {\r\n            if (!value) {\r\n                errors.clientId = \"Укажите клиента\";\r\n            }\r\n        },\r\n\r\n        date_delivery: value => {\r\n            if (!value) {\r\n                errors.date_delivery = \"Укажите дату доставки\";\r\n            }\r\n        },\r\n\r\n        time_delivery: value => {\r\n            if (!value) {\r\n                errors.time_delivery = \"Укажите время доставки\";\r\n            }\r\n        },\r\n    }\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n\r\n    return errors;\r\n};\r\n\r\n\r\nexport const FormProvider = ({children}) => {\r\n    const [cart, setCart] = React.useState([{\r\n        foodID: null,\r\n        count: \"1\",\r\n        unit: \"ШТ\",\r\n        comment: \"\",\r\n    }]);\r\n\r\n    const [sum, setSum] = React.useState(0);\r\n    const [order, setOrder] = React.useState(null);\r\n    const [foods, setFoods] = React.useState([]);\r\n    const [clients, setClients] = React.useState([]);\r\n\r\n    const [isReady, setIsReady] = React.useState(false);\r\n    const [selectedClient, setSelectedClient] = React.useState(null);\r\n    const [errors, setErrors] = React.useState([]);\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            clientId: '',\r\n            date_delivery: '',\r\n            time_delivery: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            handleSubmit();\r\n        },\r\n    })\r\n\r\n\r\n    const handleChange = (value, key, field) => {\r\n        let tempSum = 0;\r\n        const tempCart = _.cloneDeep(cart);\r\n        tempCart[key][field] = value || null;\r\n\r\n        setCart(tempCart);\r\n        tempCart.map(cartItem => {\r\n            const priceItem = _.find(foods, function (o) {\r\n                return o.id === cartItem.foodID\r\n            })\r\n\r\n            if (priceItem) {\r\n                tempSum += priceItem.price * parseInt(cartItem.count) || 0;\r\n            }\r\n\r\n        });\r\n\r\n        setSum(tempSum);\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n        Promise.all(\r\n            [\r\n                clientApi.getList()\r\n                    .then(response => {\r\n                        setClients(response.data);\r\n                    }),\r\n\r\n                foodApi.getList()\r\n                    .then(response => {\r\n                        setFoods(response.data);\r\n                    })\r\n            ]\r\n        )\r\n            .finally(_ => {\r\n                setIsReady(true);\r\n            })\r\n    }, [])\r\n\r\n\r\n    const handleChangeFood = (value, key, field) => {\r\n        let tempSum = 0;\r\n        const tempCart = _.cloneDeep(cart);\r\n        tempCart[key][field] = value || null;\r\n\r\n        setCart(tempCart);\r\n        tempCart.map(cartItem => {\r\n            const priceItem = _.find(foods, function (o) {\r\n                return o.id === cartItem.foodID\r\n            })\r\n\r\n            if (priceItem) {\r\n                tempSum += priceItem.price * parseInt(cartItem.count) || 0;\r\n            }\r\n\r\n        });\r\n\r\n        setSum(tempSum);\r\n    };\r\n\r\n    const pushItem = () => {\r\n        let tempCart = _.cloneDeep(cart);\r\n        tempCart.push({\r\n            foodID: null,\r\n            count: \"1\",\r\n            unit: \"ШТ\",\r\n            comment: \"\",\r\n        });\r\n\r\n        setCart(tempCart);\r\n\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        setErrors([]);\r\n\r\n        let tempCart = _.cloneDeep(cart);\r\n\r\n        if (tempCart.length !== 1) {\r\n            setCart(tempCart.splice(1, 1));\r\n        }\r\n\r\n\r\n        console.log(selectedClient);\r\n        console.log(cart);\r\n\r\n        const data = {\r\n            cart: tempCart.filter(item => item.foodID !== null),\r\n            client_id: formik.values.clientId,\r\n            date_delivery: [formik.values.date_delivery, formik.values.time_delivery].join(' '),\r\n            comment: '',\r\n            ...selectedClient,\r\n            total_sum: sum,\r\n\r\n        };\r\n\r\n        orderApi.save(data)\r\n            .then(response => {\r\n                setOrder(response.data);\r\n            })\r\n            .catch(error => {\r\n                if (error.response.data.errors.hasOwnProperty('cart')) {\r\n                    setErrors(Object.values(error.response.data.errors.cart));\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    return (\r\n        <FormContext.Provider\r\n            value={{\r\n                handleChange,\r\n                foods,\r\n                clients,\r\n                isReady,\r\n                selectedClient,\r\n                setSelectedClient,\r\n                handleChangeFood,\r\n                cart,\r\n                pushItem,\r\n                handleSubmit,\r\n                sum,\r\n                formik,\r\n                errors,\r\n                order\r\n            }}\r\n        >\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {FormContext} from \"./FormProvider\";\r\nimport {Select, DatePicker, TimePicker, Typography, Input, Divider, InputNumber, Button, Form, Alert} from 'antd';\r\nimport {validateField} from \"../../../utils/helpers/index\";\r\n\r\nconst {Option} = Select;\r\nconst {Title} = Typography;\r\n\r\n\r\nexport default () => {\r\n    const context = React.useContext(FormContext);\r\n    const refInput = React.useRef(null)\r\n\r\n    React.useEffect(_ => {\r\n        window.ref = refInput;\r\n    }, [context.isReady])\r\n\r\n    return (\r\n        <Form onSubmit={context.formik.handleSubmit} className={\"order-form\"}>\r\n            <Title level={4}>Общая информация</Title>\r\n\r\n            <div className={\"order-form__form\"}>\r\n                <Form.Item\r\n                    validateStatus={validateField(\"clientId\", context.formik.touched, context.formik.errors)}\r\n                    help={!context.formik.touched.clientId ? \"\" : context.formik.errors.clientId}\r\n                    hasFeedback\r\n                >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Выберите клиента\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(value) => {\r\n                            context.formik.setValues({\r\n                                ...context.formik.values,\r\n                                clientId: value\r\n                            })\r\n\r\n                            context.setSelectedClient(context.clients.find(item => item.id === value));\r\n\r\n                        }}\r\n                        filterOption={(input, option) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                    >\r\n                        {context.clients.map(client => <Option key={client.id}\r\n                                                               value={client.id}>{client.name}</Option>)}\r\n\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    validateStatus={validateField(\"date_delivery\", context.formik.touched, context.formik.errors)}\r\n                    help={!context.formik.touched.date_delivery ? \"\" : context.formik.errors.date_delivery}\r\n                    hasFeedback\r\n                >\r\n                    <DatePicker\r\n                        style={{width: '100%'}}\r\n                        ref={refInput}\r\n                        placeholder={\"Выберите дату доставки\"}\r\n                        onChange={(date, dateString) => context.formik.setValues({\r\n                            ...context.formik.values,\r\n                            date_delivery: dateString\r\n                        })}/>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item\r\n                    validateStatus={validateField(\"time_delivery\", context.formik.touched, context.formik.errors)}\r\n                    help={!context.formik.touched.time_delivery ? \"\" : context.formik.errors.time_delivery}\r\n                    hasFeedback\r\n                >\r\n                    <TimePicker\r\n                        style={{width: '100%'}}\r\n                        format={\"HH:mm\"}\r\n                        onChange={(date, dateString) => context.formik.setValues({\r\n                            ...context.formik.values,\r\n                            time_delivery: dateString\r\n                        })}\r\n                    />\r\n                </Form.Item>\r\n\r\n            </div>\r\n\r\n            {\r\n                context.selectedClient\r\n                &&\r\n                <div>\r\n                    <Divider/>\r\n\r\n                    <Title level={4}>Информация о клиенте</Title>\r\n\r\n                    <div className={\"order-form__form\"}>\r\n                        <Input placeholder={\"Имя\"} value={context.selectedClient.name}/>\r\n                        <Input placeholder={\"Номер\"} style={{marginTop: 5}} value={context.selectedClient.phone}/>\r\n                        <Input placeholder={\"Адрес \"} style={{marginTop: 5}} value={context.selectedClient.address}/>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            <div>\r\n                <Divider/>\r\n                <Title level={4}>Заказ</Title>\r\n\r\n                {context.errors.map(error => {\r\n                    return (\r\n                        <Alert message={error} type=\"error\" showIcon/>\r\n                    )\r\n                })}\r\n\r\n                {context.cart.map((cartItem, key) => {\r\n                    return (\r\n                        <React.Fragment key={key}>\r\n                            <Divider orientation={\"left\"}>{key + 1}</Divider>\r\n                            <div className={\"order-form__form\"}>\r\n                                <Select\r\n                                    showSearch\r\n                                    placeholder=\"Выберите блюдо\"\r\n                                    optionFilterProp=\"children\"\r\n                                    onChange={(value) => {\r\n                                        context.handleChangeFood(value, key, 'foodID')\r\n\r\n                                    }}\r\n                                    filterOption={(input, option) =>\r\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    {context.foods.map(food => <Option key={food.id}\r\n                                                                       value={food.id}>{food.name}</Option>)}\r\n\r\n                                </Select>\r\n\r\n                                <div style={{display: 'flex', marginTop: 5}}>\r\n                                    <InputNumber placeholder={\"Кол-во\"}\r\n                                                 value={cartItem.count}\r\n                                                 onChange={value => context.handleChangeFood(value, key, 'count')}\r\n                                                 style={{width: \"100%\"}}/>\r\n\r\n                                    <Select defaultValue={cartItem.unit} style={{width: \"100%\"}} onChange={value => {\r\n                                        context.handleChangeFood(value, key, 'unit')\r\n                                    }}>\r\n                                        <Option value=\"ШТ\">ШТ</Option>\r\n                                        <Option value=\"КГ\">КГ</Option>\r\n                                    </Select>\r\n                                </div>\r\n\r\n                                <Input style={{marginTop: 5}} placeholder={\"Комментарий\"} value={cartItem.comment}\r\n                                       onChange={e => context.handleChangeFood(e.target.value, key, 'comment')}/>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )\r\n                })}\r\n\r\n                <Button style={{marginTop: 5}} onClick={context.pushItem}>+</Button>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </Form>\r\n    )\r\n}","import React from \"react\";\r\nimport './CreateOrder.scss'\r\nimport {Breadcrumb, Button, Result} from \"antd\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport _form from './_form';\r\nimport {FormProvider, FormContext} from \"./FormProvider\";\r\n\r\nconst OrderForm = props => {\r\n    return (\r\n        <FormProvider>\r\n            <div className={\"site-content\"}>\r\n\r\n                <Breadcrumb style={{margin: '16px 0'}}>\r\n                    <Breadcrumb.Item>Заказы</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n\r\n                <div className={\"site-layout-content\"}>\r\n                    <Container/>\r\n                </div>\r\n\r\n            </div>\r\n        </FormProvider>\r\n    )\r\n}\r\n\r\n\r\nconst Send = () => {\r\n    const context = React.useContext(FormContext);\r\n\r\n    React.useEffect(_ => {\r\n    }, [])\r\n\r\n    return (\r\n        <Button onClick={context.formik.handleSubmit} type={\"primary\"} style={{marginTop: 5}}>Добавить\r\n            ({context.sum}Р)</Button>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst Success = ({order}) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Result\r\n            status=\"success\"\r\n            title=\"Заказ успешно добавлен\"\r\n            subTitle={`Заказ успешно добавлен под номером: ${order.id}`}\r\n            extra={[\r\n                <Button onClick={() => history.push(`/orders/${order.id}`)} type=\"primary\" key=\"console\">\r\n                    Перейти к заказу\r\n                </Button>,\r\n            ]}\r\n        />\r\n    )\r\n}\r\n\r\nconst Container = () => {\r\n    const {order} = React.useContext(FormContext);\r\n\r\n    React.useEffect(_ => {\r\n    }, [])\r\n\r\n    return (\r\n        null === order ? <React.Fragment>\r\n                <_form/>\r\n\r\n                <Send/>\r\n            </React.Fragment>\r\n            : <Success order={order}/>\r\n    )\r\n}\r\n\r\nexport default OrderForm","import React from \"react\";\r\nimport {SearchAddress} from \"../../../components\";\r\nimport axios from 'axios'\r\nimport {Form, Typography, Button, Input, Breadcrumb, notification} from 'antd'\r\nimport {Link} from \"react-router-dom\";\r\nimport {orderApi} from \"../../../core/api\";\r\nconst Taxi = (props) => {\r\n\r\n    const [from, setFrom] = React.useState({\r\n        address: '',\r\n    });\r\n    const [to, setTo] = React.useState({\r\n        address: props.location.state.order.address\r\n    });\r\n    const [phone, setPhone] = React.useState('+7(___)___-____')\r\n\r\n    const [coast, setCoast] = React.useState(null);\r\n    const [comment, setComment] = React.useState(`Номер телефона: ${props.location.state.order.phone}\r\nИмя: ${props.location.state.order.name}\r\n        `);\r\n\r\n    const callback = React.useCallback(() => {\r\n        var input = document.querySelector(\"#phone\");\r\n        input.addEventListener(\"input\", mask, false)\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        const phoneFromStorage = localStorage.getItem('phone');\r\n\r\n        if (phoneFromStorage) {\r\n            setPhone(phoneFromStorage)\r\n        }\r\n        const itemFromFromStorage = localStorage.getItem('from');\r\n\r\n        if (itemFromFromStorage) {\r\n            const json = JSON.parse(itemFromFromStorage);\r\n\r\n            if (from.address === '') {\r\n                setFrom(json);\r\n            }\r\n\r\n\r\n        }\r\n\r\n        orderCoast();\r\n        callback();\r\n    }, [from, to])\r\n\r\n    const orderCoast = () => {\r\n        if (true === (from === null || to === null)) {\r\n            return\r\n        }\r\n        const formData = new FormData;\r\n        formData.append('source_lat', from.lat)\r\n        formData.append('source_lon', from.lon)\r\n        formData.append('destination_lat', to.lat)\r\n        formData.append('destination_lon', to.lon)\r\n        formData.append('source_time_iso8601', new Date().toISOString())\r\n        axios.defaults.withCredentials = false;\r\n        axios.post(\"https://websites.platform.taximaster.ru/v2/calc_order_cost\", formData, {\r\n            \"headers\": {\r\n                \"Sec-Fetch-Dest\": \"empty\",\r\n                \"Sec-Fetch-Mod\": \"cors\",\r\n                \"Sec-Fetch-Site\": \"same-origin\",\r\n                \"X-Site-VtmId\": \"134\",\r\n                \"X-Site-VtmGroupId\": \"56\",\r\n                \"Accept\": \"*/*\"\r\n            },\r\n        })\r\n            .then(response => {\r\n\r\n                setCoast(response.data)\r\n            })\r\n    };\r\n\r\n    const selectFrom = item => {\r\n\r\n        if (false === checkAddress(item.address, from.address || '')) {\r\n            const json = JSON.stringify(item)\r\n            localStorage.setItem('from', json);\r\n            setFrom(item);\r\n\r\n            console.log(item)\r\n        }\r\n\r\n    }\r\n\r\n    const selectTo = item => {\r\n        if (false === checkAddress(item.address, to.address || '')) {\r\n            setTo(item);\r\n        }\r\n    }\r\n\r\n\r\n    function setCursorPosition(pos, elem) {\r\n        elem.focus();\r\n        if (elem.setSelectionRange) elem.setSelectionRange(pos, pos);\r\n        else if (elem.createTextRange) {\r\n            var range = elem.createTextRange();\r\n            range.collapse(true);\r\n            range.moveEnd(\"character\", pos);\r\n            range.moveStart(\"character\", pos);\r\n            range.select()\r\n        }\r\n    }\r\n\r\n    function mask(event) {\r\n        var matrix = this.defaultValue,\r\n            i = 0,\r\n            def = matrix.replace(/\\D/g, \"\"),\r\n            val = this.value.replace(/\\D/g, \"\");\r\n        def.length >= val.length && (val = def);\r\n        matrix = matrix.replace(/[_\\d]/g, function (a) {\r\n            return val.charAt(i++) || \"_\"\r\n        });\r\n        this.value = matrix;\r\n        setPhone(matrix);\r\n        i = matrix.lastIndexOf(val.substr(-1));\r\n        i < matrix.length && matrix != this.defaultValue ? i++ : i = matrix.indexOf(\"_\");\r\n        setCursorPosition(i, this)\r\n    }\r\n\r\n    const createOrder = () => {\r\n        const formData = new FormData;\r\n        formData.append('test_field1', from.address)\r\n        formData.append('source_lat', from.lat)\r\n        formData.append('source_lon', from.lon)\r\n        formData.append('test_field2', to.address)\r\n        formData.append('destination_lat', to.lat)\r\n        formData.append('destination_lon', to.lon)\r\n        // formData.append('source_time', '24.03.2020 17:40')\r\n        formData.append('source_time_iso8601', new Date().toISOString())\r\n        formData.append('phone', phone)\r\n        formData.append('test_field3', '')\r\n        formData.append('comment', comment)\r\n        formData.append('address_source', from.address)\r\n        formData.append('address_destination', to.address)\r\n        formData.append('name', props.location.state.order.name)\r\n        formData.append('auth_token', 'AB890D4D-EB06-4DF9-9EDC-5493A9892FB1')\r\n\r\n        //\r\n        axios.post(\"https://websites.platform.taximaster.ru/v2/order\", formData, {\r\n            \"headers\": {\r\n                \"Sec-Fetch-Dest\": \"empty\",\r\n                \"Sec-Fetch-Mod\": \"cors\",\r\n                \"Sec-Fetch-Site\": \"same-origin\",\r\n                \"X-Site-VtmId\": \"134\",\r\n                \"X-Site-VtmGroupId\": \"56\",\r\n                \"Accept\": \"*/*\"\r\n            },\r\n        })\r\n            .then(response => {\r\n                openNotificationWithIcon('success')\r\n                localStorage.setItem('phone', phone)\r\n                orderApi.setStatus(props.location.state.order.id, 1);\r\n                props.history.push(`/orders/${props.location.state.order.id}`)\r\n\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    Object.values(error.response.data.errors).map(errorField => {\r\n                        Object.values(errorField).map(errors => {\r\n                            alert(errors.join('\\n'))\r\n                        })\r\n                    })\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    const checkAddress = (itemAddress, prevAddress) => itemAddress === prevAddress;\r\n\r\n\r\n    const openNotificationWithIcon = type => {\r\n        notification[type]({\r\n            message: 'Такси',\r\n            description:\r\n                'Такси успешно вызвано',\r\n        });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/\"}>\r\n                        Заказы\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <Link to={`/orders/${props.location.state.order.id}`}>\r\n                        {props.location.state.order.name}\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n\r\n                <Breadcrumb.Item>Такси</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <div className={\"site-layout-content\"}>\r\n                <SearchAddress callback={selectFrom} item={from}/>\r\n\r\n                <SearchAddress callback={selectTo} item={to}/>\r\n\r\n                <Form.Item>\r\n                    <Input placeholder={\"Имя\"}/>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Input id={\"phone\"}  value={phone}\r\n                           placeholder={\"Ваш номер телефона +7(___)---_--_--\"}/>\r\n\r\n                    <a href=\"/#\" onClick={e => {\r\n                        e.preventDefault();\r\n                        setPhone('+7(___)___-____')\r\n                    }}>Очистить</a>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Input.TextArea value={comment} onChange={e => setComment(e.target.value)}\r\n                                    placeholder={\"Комментарий для водителя\"}/>\r\n                </Form.Item>\r\n\r\n                <Button onClick={createOrder}>Вызвать (Примерная стоимость: {coast})</Button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Taxi;","import React from 'react'\r\nimport {Layout, Result, Button} from 'antd';\r\nimport {Route, useHistory, Switch} from 'react-router-dom';\r\nimport Orders from \"../Orders\";\r\nimport Statistics from \"../Statistics\";\r\nimport Clients from \"../Clients\";\r\nimport Client from \"../Clients/Client\";\r\nimport ClientForm from \"../Clients/component/ClientForm\";\r\n\r\nimport Foods from \"../Foods\";\r\nimport Food from \"../Foods/Food\";\r\nimport FoodForm from \"../Foods/component/FoodForm\";\r\n\r\n\r\nimport {BottomNav, SideBar} from \"../../components\";\r\nimport ShowOrder from \"../Orders/ShowOrder\";\r\nimport OrderForm from \"../Orders/OrderForm\";\r\nimport Taxi from \"../Orders/ShowOrder/Taxi\";\r\n\r\nconst {Content, Footer} = Layout\r\n\r\nconst HomePage = (props) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Layout className=\"layout\" style={{minHeight: '100vh'}}>\r\n\r\n            <SideBar/>\r\n\r\n            <Layout>\r\n                <Content style={{padding: '0 50px'}}>\r\n\r\n                    <Switch>\r\n                        <Route exact path={'/'} component={Orders}/>\r\n                        <Route exact path={'/orders/create'} component={OrderForm}/>\r\n                        <Route exact path={'/orders/:id(\\\\d+)'} component={ShowOrder}/>\r\n                        <Route exact path={'/orders/:id(\\\\d+)/taxi'} component={Taxi}/>\r\n\r\n                        <Route exact path={\"/statistics\"} component={Statistics}/>\r\n\r\n                        <Route exact path={'/clients'} component={Clients}/>\r\n                        <Route exact path={'/clients/create'} component={ClientForm}/>\r\n                        <Route exact path={\"/clients/:id(\\\\d+)\"} component={Client}/>\r\n                        <Route exact path={'/clients/:id/edit'} component={ClientForm}/>\r\n                        <Route exact path={'/clients/:id/edit'} component={ClientForm}/>\r\n\r\n                        <Route exact path={'/foods'} component={Foods}/>\r\n                        <Route exact path={'/foods/create'} component={FoodForm}/>\r\n                        <Route exact path={\"/foods/:id(\\\\d+)\"} component={Food}/>\r\n                        <Route exact path={'/foods/:id/edit'} component={FoodForm}/>\r\n\r\n                        <Route component={() => {\r\n                            return (\r\n                                <Result\r\n                                    status=\"404\"\r\n                                    title=\"404\"\r\n                                    subTitle=\"Sorry, the page you visited does not exist.\"\r\n                                    extra={<Button onClick={() => history.push('/')} type=\"primary\">Вернуться на\r\n                                        главную</Button>}\r\n                                />\r\n                            )\r\n                        }}/>\r\n                    </Switch>\r\n\r\n\r\n                </Content>\r\n\r\n                {(/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)) && <BottomNav/>}\r\n\r\n                <Footer style={{textAlign: 'center'}}>Ant Design ©2018 Created by Ant UED</Footer>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport Auth from \"pages/Auth\";\nimport Home from \"pages/Home\";\nimport {connect} from 'react-redux'\n\nfunction App({user, isReady}) {\n\n    if (false === isReady) {\n        return (\n            <section className=\"auth\">\n                <div className=\"auth__content\">\n                    Загрузка...\n                </div>\n            </section>\n        )\n    }\n\n    return (\n        <div className=\"wrapper\">\n\n            <Switch>\n                <GuestRoute\n                    user={user}\n                    path={[\"/login\", \"/signup\"]}>\n                    <Auth/>\n                </GuestRoute>\n\n                <PrivateRoute user={user} path={\"/\"}>\n                    <Home/>\n                </PrivateRoute>\n\n\n\n            </Switch>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.userReducer.user,\n        isReady: state.appReducer.isReady\n    }\n}\n\nexport default connect(mapStateToProps)(App);\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({children, user, ...rest}) {\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                null !== user ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nfunction GuestRoute({children, user, ...rest}) {\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                null === user ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/\",\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {SET_USER} from \"../actionTypes\";\r\n\r\nexport default {\r\n    setUser: (payload) => ({\r\n        type: SET_USER,\r\n        payload: payload\r\n    })\r\n\r\n}","import {userApi} from \"../../core/api\";\r\nimport {userActions} from \"./index\";\r\nimport {APP_SET_IS_READY} from \"../actionTypes\";\r\n\r\nexport default {\r\n    init: function () {\r\n        return dispatch => {\r\n            userApi.me().then(response => {\r\n                dispatch(userActions.setUser(response.data));\r\n            }).catch(error => {\r\n                dispatch(userActions.setUser(null))\r\n            }).finally(() => {\r\n                dispatch(this.setAppIsready(true));\r\n            });\r\n        }\r\n    },\r\n\r\n    setAppIsready: (payload) => ({\r\n        type: APP_SET_IS_READY,\r\n        payload: payload\r\n    })\r\n\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport store from \"./redux/store\";\n\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {appActions} from \"./redux/actions\";\n\nfunction init() {\n    store.dispatch(appActions.init());\n}\n\ninit()\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","export const SET_USER = 'SET_USER';\r\nexport const APP_SET_IS_READY = 'APP:SET_IS_READY';\r\n"],"sourceRoot":""}