{"version":3,"sources":["redux/reducers/index.js","redux/reducers/appReducer.js","redux/reducers/userReducer.js","redux/reducers sync /^/.*$","components/Block/index.jsx","components/Button/index.jsx","utils/helpers/validateField.js","components/LetterOrAvatar/index.jsx","utils/helpers/getAvatarColor.js","core/config/axios.js","core/api/user.js","core/api/client.js","core/api/food.js","core/api/order.js","components/BottomNav/index.jsx","pages/Auth/components/Login/components/LoginForm.jsx","utils/validate.js","pages/Auth/components/Login/containers/LoginFormContainer.jsx","pages/Auth/components/Signup/components/RegisterForm.jsx","pages/Auth/components/Signup/containers/RegisterFormContainer.jsx","pages/Auth/index.jsx","pages/Orders/index.jsx","pages/Clients/index.jsx","pages/Clients/Client.jsx","pages/Clients/component/ClientForm.jsx","pages/Foods/index.jsx","pages/Foods/Food.jsx","pages/Foods/component/FoodForm.jsx","pages/Orders/ShowOrder/index.jsx","pages/Orders/OrderForm/FormProvider.js","pages/Orders/OrderForm/_form.jsx","pages/Orders/OrderForm/index.jsx","pages/Home/index.jsx","App.js","redux/store.js","serviceWorker.js","redux/actions/user.js","redux/actions/app.js","index.js","redux/actionTypes.js"],"names":["combineReducers","reduce","initial","name","require","default","initialState","isReady","state","type","payload","APP_SET_IS_READY","initialUser","user","SET_USER","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Block","children","className","classNames","Button","props","size","key","touched","errors","url","letter","src","bgColor","charCode","charCodeAt","background","color","avatarColor","style","backgroundColor","axios","defaults","baseURL","process","withCredentials","data","csrf","then","response","post","remember","get","r","window","location","reload","catch","error","console","log","cancel","CancelToken","apiClient","save","put","params","cancelToken","c","getList","show","a","delete","apiFood","formData","FormData","append","price","image","apiOrder","setStatus","status","getStatistic","to","pathname","PieChartOutlined","includes","UserOutlined","ShopOutlined","onClick","confirm","userApi","LoginOutlined","LoginForm","values","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","onSubmit","Item","validateStatus","validateField","help","email","hasFeedback","prefix","MailOutlined","placeholder","value","onChange","onBlur","password","LockOutlined","disabled","isAuth","rules","test","password_confirmation","phone","forEach","LoginFormContainer","withFormik","enableReinitialize","mapPropsToValues","validate","validateForm","setSubmitting","setErrors","undefined","replace","displayName","RegisterForm","fontSize","RegisterFormContainer","Auth","exact","path","component","statuses","0","text","1","2","mockData","Array","fill","item","loading","Orders","React","useState","orders","setOrders","date","setDate","useEffect","orderApi","date_from","margin","dateString","history","push","orderItem","avatar","title","active","Meta","description","length","imageStyle","height","Clients","setData","clientApi","orientation","dataItem","actions","stopPropagation","Card","Modal","Client","client","setClient","setLoading","match","finally","width","marginTop","EditOutlined","DeleteOutlined","icon","ExclamationCircleOutlined","content","okText","okType","cancelText","onOk","onCancel","ClientForm","formik","useFormik","initialValues","address","notification","message","setValues","hasOwnProperty","Fragment","PhoneOutlined","HomeOutlined","Foods","foodApi","img","Food","food","setFood","FoodForm","setImg","fileProps","beforeUpload","file","action","fileList","defaultFileList","showUploadList","BookOutlined","DollarOutlined","marginBottom","UploadOutlined","Title","Typography","ShowOrder","order","setOrder","err","label","count","total_sum","overflowCount","date_delivery","level","itemLayout","dataSource","foods","renderItem","pivot","comment","unit","FormContext","createContext","clientId","time_delivery","FormProvider","foodID","cart","setCart","sum","setSum","setFoods","clients","setClients","setIsReady","selectedClient","setSelectedClient","Promise","all","_","tempCart","cloneDeep","splice","filter","client_id","join","Provider","field","tempSum","cartItem","priceItem","find","parseInt","handleChangeFood","pushItem","Option","Select","context","useContext","refInput","useRef","ref","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","format","showIcon","display","defaultValue","target","Send","Success","useHistory","subTitle","extra","Container","_form","OrderForm","Content","Layout","Footer","Sider","HomePage","collapsed","setCollaps","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","padding","navigator","userAgent","textAlign","connect","userReducer","appReducer","GuestRoute","PrivateRoute","Home","rest","render","from","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","init","dispatch","userActions","setAppIsready","appActions","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","headers","contentType","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f69b60ff.chunk.js","sourcesContent":["import {combineReducers} from \"redux\";\r\n\r\nconst reducers = [\"userReducer\", \"appReducer\"];\r\n\r\nexport default combineReducers(\r\n    reducers.reduce((initial, name) => {\r\n        initial[name] = require(`./${name}`).default;\r\n        return initial;\r\n    }, {})\r\n);","import {APP_SET_IS_READY} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    isReady: false\r\n};\r\n\r\nexport default function (state = initialState, {type, payload}) {\r\n    if (type === APP_SET_IS_READY) {\r\n        return {\r\n            ...state,\r\n            isReady: payload\r\n        };\r\n    }\r\n\r\n    return state;\r\n}","import {SET_USER} from \"../actionTypes\";\r\n\r\nconst initialUser = {\r\n    user: null\r\n}\r\n\r\nexport default (state = initialUser, {type, payload}) => {\r\n    switch (type) {\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","var map = {\n\t\"./\": 115,\n\t\"./appReducer\": 249,\n\t\"./appReducer.js\": 249,\n\t\"./index\": 115,\n\t\"./index.js\": 115,\n\t\"./userReducer\": 250,\n\t\"./userReducer.js\": 250\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 552;","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Block.scss\";\r\n\r\nconst Block = ({ children, className }) => (\r\n    <div className={classNames(\"block\", className)}>{children}</div>\r\n);\r\n\r\nexport default Block;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button as BaseButton } from \"antd\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Button.scss\";\r\n\r\nconst Button = props => (\r\n    <BaseButton\r\n        {...props}\r\n        className={classNames(\"button\", props.className, {\r\n            \"button--large\": props.size === \"large\"\r\n        })}\r\n    />\r\n);\r\n\r\nButton.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default Button;","export default (key, touched, errors) => {\r\n    if (touched[key]) {\r\n        if (errors[key]) {\r\n            return \"error\";\r\n        } else {\r\n            return \"success\";\r\n        }\r\n    } else {\r\n        return \"\";\r\n    }\r\n};","import React from 'react';\r\nimport {avatarColor} from 'utils/helpers'\r\nimport {Avatar} from \"antd\";\r\n\r\nimport './LetterOrAvatar.scss';\r\n\r\nexport default ({url, letter, name}) => {\r\n    if (url) {\r\n        return <Avatar className={\"avatar\"} src={url}/>\r\n    }\r\n\r\n    const bgColor = avatarColor(name || letter);\r\n\r\n    return (\r\n        <div className={\"avatar\"} style={{backgroundColor: `${bgColor.background}`}}>\r\n            <div className={\"avatar__letter\"} style={{color: bgColor.color}}>\r\n                {letter}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","export default letter => {\r\n    const charCode = letter.charCodeAt();\r\n\r\n    if (charCode >= 1048 && charCode <= 1055) {\r\n        return {\r\n            background: '#F5D6D9',\r\n            color: '#F38181',\r\n        };\r\n    }\r\n    if (charCode >= 1049 && charCode <= 1063) {\r\n        return {\r\n            background: '#F8ECD5',\r\n            color: '#F1A32F',\r\n        };\r\n    }\r\n    if (charCode >= 1064 && charCode <= 1071) {\r\n        return {\r\n            background: '#DAD5F8',\r\n            color: '#816CFF',\r\n        };\r\n    }\r\n    return {\r\n        background: '#E9F5FF',\r\n        color: '#2A86FF',\r\n    };\r\n};","import axios from 'axios';\r\n// axios.defaults.baseURL = 'http://diplom.gussi-gussi.com';\r\naxios.defaults.baseURL = process.env.REACT_APP_URL || 'http://192.168.31.183:8000';\r\naxios.defaults.withCredentials = true;\r\n\r\n\r\nexport default axios;","import axios from \"../config/axios\";\r\n\r\naxios.defaults.withCredentials = true;\r\nexport default {\r\n    register: (data) => {\r\n        return csrf().then(response => {\r\n            return axios.post('/register', {...data, remember: 'on'})\r\n        })\r\n    },\r\n\r\n    login: (data) => {\r\n        return csrf().then(response => {\r\n            return axios.post('/login', {...data, remember: 'on'})\r\n        })\r\n\r\n    },\r\n\r\n    me: () => {\r\n        return csrf().then(response => {\r\n            return axios.get('/api/user')\r\n        })\r\n    },\r\n\r\n    logout: () => {\r\n        csrf().then(r => {\r\n            axios.post('/logout')\r\n                .then(response => {\r\n                    window.location.reload();\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.response);\r\n                })\r\n        })\r\n    }\r\n\r\n}\r\n\r\nfunction csrf() {\r\n    axios.defaults.withCredentials = true;\r\n    return axios.get('/sanctum/csrf-cookie')\r\n}","import axios from '../config/axios';\r\n\r\nconst CancelToken = axios.CancelToken;\r\n\r\nlet cancel;\r\nconst apiClient = {\r\n    save: (data) => {\r\n        if (null !== data.id && \"\" !== data.id) {\r\n            return axios.put(`/api/clients/${data.id}`, data);\r\n        }\r\n\r\n\r\n        return axios.post('/api/clients', data);\r\n    },\r\n\r\n    get: (params = null) => {\r\n        return csrf().then(response => {\r\n            return axios.get('/api/clients', {\r\n                params,\r\n                cancelToken: new CancelToken(function executor(c) {\r\n                    // An executor function receives a cancel function as a parameter\r\n                    cancel = c;\r\n                })\r\n            })\r\n        })\r\n    },\r\n\r\n    getList: (params = null) => {\r\n        return axios.get('/api/clients/list', params)\r\n    },\r\n\r\n    show: async (id) => {\r\n        return await axios.get(`/api/clients/${id}`);\r\n    },\r\n\r\n    delete: id => axios.delete(`/api/clients/${id}`),\r\n\r\n    cancel: function () {\r\n        cancel();\r\n    }\r\n\r\n}\r\n\r\nfunction csrf() {\r\n    axios.defaults.withCredentials = true;\r\n    return axios.get('/sanctum/csrf-cookie')\r\n}\r\n\r\nexport default apiClient;","import axios from '../config/axios';\r\n\r\nconst CancelToken = axios.CancelToken;\r\n\r\nlet cancel;\r\n\r\nconst apiFood = {\r\n    save: (data) => {\r\n        const formData = new FormData();\r\n        formData.append(\"name\", data.name);\r\n        formData.append(\"price\", data.price);\r\n\r\n        if (data.image !== null) {\r\n            formData.append(\"img\", data.image);\r\n        }\r\n\r\n\r\n        if (data.id) {\r\n            formData.append('_method', 'PATCH')\r\n            return axios.post(`/api/foods/${data.id}`, formData);\r\n        }\r\n\r\n\r\n        return axios.post('/api/foods', formData);\r\n    },\r\n\r\n    cancel: function () {\r\n        cancel();\r\n    },\r\n    get: (params = null) => {\r\n        return axios.get('/api/foods', {\r\n            params,\r\n            cancelToken: new CancelToken(function executor(c) {\r\n                // An executor function receives a cancel function as a parameter\r\n                cancel = c;\r\n            })\r\n        })\r\n\r\n    },\r\n\r\n    getList: (params = null) => {\r\n        return axios.get('/api/foods/list', params);\r\n    },\r\n\r\n    show: (id) => {\r\n        return axios.get(`/api/foods/${id}`);\r\n    },\r\n\r\n    delete: id => axios.delete(`/api/foods/${id}`)\r\n}\r\n\r\nexport default apiFood;","import axios from '../config/axios';\r\n\r\nconst apiOrder = {\r\n    save: data => {\r\n        return axios.post('/api/orders', data);\r\n    },\r\n\r\n    get: (params = {}) => {\r\n        return axios.get('/api/orders', {params});\r\n    },\r\n\r\n    show: (id) => {\r\n        return axios.get(`/api/orders/${id}`);\r\n    },\r\n\r\n    setStatus: (id, status) => {\r\n        return axios.put(`/api/orders/${id}`, {status: status})\r\n    },\r\n\r\n    delete: id => {\r\n        return axios.delete(`/api/orders/${id}`);\r\n    },\r\n\r\n    getStatistic: (params, type) => {\r\n        return axios.get('/api/stats', {params: {...params, type}})\r\n    }\r\n}\r\n\r\nexport default apiOrder;","import React from \"react\";\r\nimport {\r\n    PieChartOutlined,\r\n    UserOutlined,\r\n    ShopOutlined,\r\n    LoginOutlined\r\n} from '@ant-design/icons'\r\n\r\nimport './BottomNav.scss';\r\nimport {Link} from \"react-router-dom\";\r\nimport {userApi} from \"../../core/api\";\r\n\r\nexport default () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <Link to=\"/\" className={window.location.pathname === '/' ? 'active' : ''}>\r\n                <PieChartOutlined/>\r\n                <span> Заказы</span>\r\n            </Link>\r\n            <Link to=\"/clients\" className={window.location.pathname.includes('clients') ? 'active' : ''}>\r\n                <UserOutlined/>\r\n                <span> Клиенты</span>\r\n            </Link>\r\n\r\n            <Link to=\"/foods\" className={window.location.pathname.includes('foods') ? 'active' : ''}>\r\n                <ShopOutlined/>\r\n                <span> Ассортимент</span>\r\n            </Link>\r\n\r\n            <Link to=\"/#\" onClick={e => {\r\n                if (window.confirm('Вы действительно хотите покинуть сайт ?')) {\r\n                    userApi.logout();\r\n                }\r\n            }}>\r\n                <LoginOutlined/>\r\n                <span> Выйти</span>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Form, Input} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {MailOutlined, LockOutlined} from '@ant-design/icons';\r\n\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\n\r\nconst LoginForm = props => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isValid,\r\n        isSubmitting\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"auth__top\">\r\n                <h2>Войти в аккаунт</h2>\r\n                <p>Пожалуйста, войдите в свой аккаунт</p>\r\n            </div>\r\n            <Block>\r\n                <Form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"email\", touched, errors)}\r\n                        help={!touched.email ? \"\" : errors.email}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"email\"\r\n                            prefix={<MailOutlined type=\"mail\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            placeholder=\"E-Mail\"\r\n                            value={values.email}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"password\", touched, errors)}\r\n                        help={!touched.password ? \"\" : errors.password}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"password\"\r\n                            prefix={<LockOutlined type=\"lock\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Пароль\"\r\n                            value={values.password}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={isSubmitting}\r\n                            onClick={handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"large\"\r\n                        >\r\n                            Войти в аккаунт\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <Link className=\"auth__register-link\" to=\"/signup\">\r\n                        Зарегистрироваться\r\n                    </Link>\r\n                </Form>\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","export default ({ isAuth, values, errors }) => {\r\n\r\n\r\n    const rules = {\r\n        email: value => {\r\n            if (!value) {\r\n                errors.email = \"Введите E-Mail\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n                errors.email = \"Неверный E-Mail\";\r\n            }\r\n        },\r\n        password: value => {\r\n            if (!value) {\r\n                errors.password = \"Введите пароль\";\r\n            } else if (\r\n                !isAuth &&\r\n                !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(value)\r\n            ) {\r\n                errors.password = \"Слишком лёгкий пароль\";\r\n            }\r\n        },\r\n        password_confirmation: value => {\r\n\r\n            if (!value) {\r\n                errors.password_confirmation = \"Введите пароль повторно\";\r\n            }\r\n\r\n            if (!isAuth || value !== values.password) {\r\n                errors.password_confirmation = \"Пароли не совпадают\";\r\n            }\r\n        },\r\n        name: value => {\r\n            if (!isAuth || !value) {\r\n                errors.name = \"Укажите имя и фамилию\";\r\n            }\r\n        },\r\n\r\n        phone: value => {\r\n            if (!isAuth || !value) {\r\n                errors.phone = \"Укажите номер телефона\";\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n};","import {withFormik} from 'formik';\r\n\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nimport validateForm from 'utils/validate';\r\nimport {userApi} from \"core/api\";\r\n\r\nconst LoginFormContainer = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: '',\r\n    }),\r\n    validate: values => {\r\n        let errors = {};\r\n\r\n        validateForm({isAuth: true, values, errors});\r\n\r\n        return errors;\r\n    },\r\n    handleSubmit: async (values, {setSubmitting, setErrors, props}) => {\r\n        await userApi.login(values).catch(errors => {\r\n            if (errors.response !== undefined) {\r\n                let error = {};\r\n                Object.keys(errors.response.data.errors).forEach(key => {\r\n                    error[key] = errors.response.data.errors[key][0];\r\n                });\r\n                setErrors(error)\r\n            }\r\n        }).then(response => {\r\n            userApi.me().then(r => {\r\n                window.location.replace('/')\r\n            });\r\n            setSubmitting(false);\r\n        });\r\n    },\r\n    displayName: 'LoginForm',\r\n})(LoginForm);\r\n\r\nexport default LoginFormContainer;","import React from \"react\";\r\nimport {Form, Input} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {MailOutlined, LockOutlined, UserOutlined} from '@ant-design/icons';\r\n\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\n\r\nconst RegisterForm = props => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isValid,\r\n        isSubmitting\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"auth__top\">\r\n                <h2>Зарегистрироваться</h2>\r\n                <p style={{fontSize: 14}}>Пожалуйста, пройдите регистрацию</p>\r\n            </div>\r\n            <Block>\r\n                <Form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"email\", touched, errors)}\r\n                        help={!touched.email ? \"\" : errors.email}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"email\"\r\n                            prefix={<MailOutlined type=\"mail\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            placeholder=\"E-Mail\"\r\n                            value={values.email}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"name\", touched, errors)}\r\n                        help={!touched.name ? \"\" : errors.name}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"name\"\r\n                            prefix={<UserOutlined type=\"user\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            placeholder=\"Имя\"\r\n                            value={values.name}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"password\", touched, errors)}\r\n                        help={!touched.password ? \"\" : errors.password}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"password\"\r\n                            prefix={<LockOutlined type=\"lock\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Пароль\"\r\n                            value={values.password}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"password_confirmation\", touched, errors)}\r\n                        help={!touched.password_confirmation ? \"\" : errors.password_confirmation}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"password_confirmation\"\r\n                            prefix={<LockOutlined type=\"lock\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Повторите пароль\"\r\n                            value={values.password_confirmation}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={isSubmitting}\r\n                            onClick={handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"large\"\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <Link className=\"auth__register-link\" to=\"/login\">\r\n                        У меня уже есть аккаунт\r\n                    </Link>\r\n                </Form>\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;","import {withFormik} from 'formik';\r\n\r\nimport RegisterForm from '../components/RegisterForm';\r\n\r\nimport validateForm from 'utils/validate';\r\nimport {userApi} from \"core/api\";\r\n\r\nconst RegisterFormContainer = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: '',\r\n        name: '',\r\n        password_confirmation: ''\r\n    }),\r\n    validate: values => {\r\n        let errors = {};\r\n\r\n        validateForm({isAuth: true, values, errors});\r\n\r\n\r\n        return errors;\r\n    },\r\n    handleSubmit: (values, {setSubmitting, setErrors, props}) => {\r\n        userApi.register(values)\r\n            .then(r => {\r\n                userApi.me().then(r => {\r\n                    window.location.replace('/');\r\n                });\r\n            })\r\n            .catch(errors => {\r\n                if (errors.response !== undefined) {\r\n                    let error = {};\r\n                    Object.keys(errors.response.data.errors).forEach(key => {\r\n                        error[key] = errors.response.data.errors[key][0];\r\n                    })\r\n                    setErrors(error)\r\n                }\r\n\r\n                setSubmitting(false);\r\n            });\r\n    },\r\n    displayName: 'RegisterForm',\r\n})(RegisterForm);\r\n\r\nexport default RegisterFormContainer;","import React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\n\r\nimport LoginFormContainer from \"./components/Login/containers/LoginFormContainer\";\r\nimport RegisterFormContainer from \"./components/Signup/containers/RegisterFormContainer\";\r\n\r\nimport \"./Auth.scss\";\r\n\r\n\r\nconst Auth = () => (\r\n    <section className=\"auth\">\r\n        <div className=\"auth__content\">\r\n            <Route exact path=\"/login\" component={LoginFormContainer}/>\r\n            <Route exact path=\"/signup\" component={RegisterFormContainer}/>\r\n        </div>\r\n    </section>\r\n);\r\n\r\nexport default Auth;","import React from 'react';\r\nimport {List, Skeleton, Breadcrumb, Divider, DatePicker, Button, Badge, Empty} from 'antd';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {orderApi} from \"../../core/api\";\r\n\r\nimport './Orders.scss'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst statuses = {\r\n    0: {\r\n        text: 'Не выполнено',\r\n        color: 'red'\r\n    },\r\n    1: {\r\n        text: 'Выполнено',\r\n        color: 'green'\r\n    },\r\n\r\n    2: {\r\n        text: 'Выполнено',\r\n        color: 'green'\r\n    }\r\n}\r\n\r\nconst mockData = Array(5)\r\n    .fill(0)\r\n    .map((item, key) => ({\r\n        name: '',\r\n        letter: '',\r\n        id: key,\r\n        loading: true,\r\n        status: 0,\r\n    }))\r\n\r\n//\r\nconst Orders = (props) => {\r\n\r\n    const [orders, setOrders] = React.useState([{\r\n        key: '',\r\n        data: mockData\r\n    }]);\r\n    const [date, setDate] = React.useState(\"2020-04-11\");\r\n    React.useEffect(() => {\r\n        orderApi.get({date_from: date})\r\n            .then(response => {\r\n                setOrders(response.data);\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n    }, [date])\r\n\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>Заказы</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n\r\n                <div className={\"orders\"}>\r\n                    <DatePicker placeholder={\"Заказы от\"} onChange={(date, dateString) => setDate(dateString)}/>\r\n\r\n                    <Button onClick={() => props.history.push('/orders/create')}>\r\n                        Добавить\r\n                    </Button>\r\n\r\n                </div>\r\n\r\n\r\n                {orders.map((item, key) => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <Divider>{item.key}</Divider>\r\n                            {item.data.map(orderItem => {\r\n                                return (\r\n                                    <List.Item\r\n                                        className={'cursor-pointer'}\r\n                                        onClick={() => props.history.push('/orders/' + orderItem.id)}\r\n                                        key={orderItem.id}\r\n                                    >\r\n                                        <Skeleton avatar title={false} loading={orderItem.loading} active>\r\n                                            <List.Item.Meta\r\n                                                avatar={\r\n                                                    <LetterOrAvatar letter={orderItem.letter} name={orderItem.name}/>\r\n                                                }\r\n                                                title={<Link to={`/orders/${orderItem.id}`}>{orderItem.name}</Link>}\r\n                                                description={<Badge color={statuses[orderItem.status].color}\r\n                                                                    text={statuses[orderItem.status].text}/>}\r\n                                            />\r\n\r\n                                        </Skeleton>\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                {orders.length === 0 && <Empty\r\n                    image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n                    imageStyle={{\r\n                        height: 60,\r\n                    }}\r\n                    description={\r\n                        <span>\r\n                            Нет данных\r\n                        </span>\r\n                    }\r\n                >\r\n                    <Button onClick={() => props.history.push('/orders/create')} type=\"primary\">Добавить</Button>\r\n                </Empty>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders;","import React from 'react';\r\nimport {List, Skeleton, Breadcrumb, Divider, Button, Empty} from 'antd';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {clientApi} from \"../../core/api\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport './Clients.scss';\r\n\r\nconst mockData = Array(5)\r\n    .fill(0)\r\n    .map((item, key) => ({\r\n        name: '',\r\n        letter: '',\r\n        id: key,\r\n        loading: true,\r\n    }))\r\n\r\nconst Clients = (props) => {\r\n\r\n    const [data, setData] = React.useState([{\r\n        key: '',\r\n        data: mockData\r\n    }]);\r\n    React.useEffect(() => {\r\n        clientApi.get()\r\n            .then(response => {\r\n                setData(response.data.data);\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n        return () => {\r\n            clientApi.cancel();\r\n        }\r\n    }, [])\r\n\r\n    const getOrders = () => {\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>Клиенты</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n                <div className={\"clients\"}>\r\n                    <div>\r\n                        <Button onClick={() => props.history.push('/clients/create')}>\r\n                            Добавить\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                {data.map((item, key) => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <Divider orientation={\"left\"}>{item.key}</Divider>\r\n                            {item.data.map(dataItem => {\r\n                                return (\r\n                                    <List.Item\r\n                                        className={'cursor-pointer'}\r\n                                        key={dataItem.id}\r\n                                        onClick={() => props.history.push(`/clients/${dataItem.id}`)}\r\n                                        actions={[<Link onClick={(e) => e.stopPropagation()}\r\n                                                        to={`/clients/${dataItem.id}/edit`}\r\n                                                        key=\"list-loadmore-edit\">Изменить</Link>]}\r\n                                    >\r\n                                        <Skeleton avatar title={false} loading={dataItem.loading} active>\r\n                                            <List.Item.Meta\r\n                                                avatar={\r\n                                                    <LetterOrAvatar letter={dataItem.letter} name={dataItem.name}/>\r\n                                                }\r\n                                                title={<Link to={`/clients/${dataItem.id}`}>{dataItem.name}</Link>}\r\n                                                description=\"\"\r\n                                            />\r\n\r\n                                        </Skeleton>\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                {data.length === 0 && <Empty\r\n                    image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n                    imageStyle={{\r\n                        height: 60,\r\n                    }}\r\n                    description={\r\n                        <span>\r\n                         Нет данных\r\n                         </span>\r\n                    }\r\n                >\r\n                    <Button onClick={() => props.history.push('/clients/create')} type=\"primary\">Добавить</Button>\r\n                </Empty>}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clients;","import React from \"react\";\r\nimport {clientApi} from \"../../core/api\";\r\nimport {Skeleton, Card, Breadcrumb, Modal} from 'antd';\r\nimport {EditOutlined, DeleteOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Meta} = Card;\r\n\r\n\r\nconst {confirm} = Modal;\r\n\r\n\r\nconst Client = (props) => {\r\n    const [client, setClient] = React.useState({\r\n        name: ''\r\n    });\r\n\r\n    const showDeleteConfirm = id => {\r\n        confirm({\r\n            title: 'Удаление',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            content: 'Вы действительно хотите удалить клиента?',\r\n            okText: 'Да',\r\n            okType: 'danger',\r\n            cancelText: 'Отменить',\r\n            onOk() {\r\n                clientApi.delete(id).then(response => {\r\n                    props.history.replace('/clients');\r\n                })\r\n            },\r\n            onCancel() {\r\n\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true)\r\n        clientApi.show(props.match.params.id)\r\n            .then(response => {\r\n\r\n                if (null === response.data.client) {\r\n                    props.history.push('/404')\r\n                }\r\n\r\n                setClient(response.data.client);\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                props.history.push('/404')\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n\r\n    }, [props.match.params.id])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/clients\"}>Клиенты</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>{client.name}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n\r\n            <Card\r\n                style={{width: '100%', marginTop: 16}}\r\n                actions={[\r\n                    <EditOutlined key=\"edit\"\r\n                                  onClick={() => props.history.push(`/clients/${props.match.params.id}/edit`, {\r\n                                      client: client\r\n                                  })}/>,\r\n                    <DeleteOutlined onClick={() => showDeleteConfirm(props.match.params.id)} key=\"delete\"/>,\r\n                ]}\r\n            >\r\n                <Skeleton loading={loading} avatar active>\r\n                    <Meta\r\n                        avatar={\r\n                            <LetterOrAvatar letter={client?.letter || ''} name={client.name || ''}/>\r\n                        }\r\n                        title={client.name}\r\n                    />\r\n                </Skeleton>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Client;","import React from \"react\";\r\nimport {Breadcrumb, Form, Input, notification } from \"antd\";\r\nimport {PhoneOutlined, UserOutlined, HomeOutlined} from '@ant-design/icons';\r\n\r\nimport {useFormik} from \"formik\";\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\nimport {clientApi} from \"../../../core/api\";\r\nimport apiClient from \"../../../core/api/client\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n\r\n    const rules = {\r\n        name: value => {\r\n            if (!value) {\r\n                errors.name = \"Укажите имя и фамилию\";\r\n            }\r\n        },\r\n\r\n        phone: value => {\r\n            if (!value) {\r\n                errors.phone = \"Укажите номер телефона\";\r\n            }\r\n        }\r\n    }\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n\r\n    return errors;\r\n};\r\n\r\n\r\nconst openNotificationWithIcon = type => {\r\n    notification[type]({\r\n        message: 'Клиент',\r\n        description:\r\n            'Изменения успешно сохранены',\r\n    });\r\n};\r\n\r\nconst ClientForm = props => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            phone: '',\r\n            address: '',\r\n            id: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            apiClient.save(values).then(response => {\r\n                openNotificationWithIcon('success')\r\n                props.history.push(`/clients/${response.data.client.id}`)\r\n            })\r\n        },\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (undefined !== props.location.state) {\r\n            formik.setValues(props.location.state.client)\r\n        } else if (props.match.params.hasOwnProperty('id')) {\r\n            clientApi.show(props.match.params.id)\r\n                .then(response => {\r\n                    formik.setValues(response.data.client)\r\n                })\r\n        }\r\n\r\n    }, [props.location.state, props.match.params])\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/clients\"}>\r\n                        Клиенты\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                {\r\n                    formik.values.id !== ''\r\n                        ?\r\n                        <React.Fragment>\r\n                            <Breadcrumb.Item>\r\n                                <Link to={\"/clients/\" + formik.values.id}>\r\n                                    {formik.values.name}\r\n                                </Link>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>Редактировать</Breadcrumb.Item>\r\n                        </React.Fragment>\r\n                        :\r\n                        <Breadcrumb.Item>Создать</Breadcrumb.Item>\r\n\r\n                }\r\n\r\n            </Breadcrumb>\r\n\r\n            <Block>\r\n                {formik.values &&\r\n                <Form onSubmit={formik.handleSubmit} className=\"client-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"name\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.name ? \"\" : formik.errors.name}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"name\"\r\n                            prefix={<UserOutlined type=\"user\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Имя\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"phone\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.phone ? \"\" : formik.errors.phone}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"phone\"\r\n                            prefix={<PhoneOutlined type=\"phone\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"+7(999)999-99-99\"\r\n                            value={formik.values.phone}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"address\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.address ? \"\" : formik.errors.address}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"address\"\r\n                            prefix={<HomeOutlined type=\"home\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Адрес доставки\"\r\n                            value={formik.values.address}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item>\r\n                        {formik.isSubmitting && !formik.isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={formik.isSubmitting}\r\n                            onClick={formik.handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"medium\"\r\n                        >\r\n                            Сохранить\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>}\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClientForm;","import React from 'react';\r\nimport {List, Skeleton, Breadcrumb, Divider, Button, Empty} from 'antd';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {foodApi} from \"../../core/api\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport './Foods.scss';\r\n\r\nconst mockData = Array(5)\r\n    .fill(0)\r\n    .map((item, key) => ({\r\n        name: '',\r\n        letter: '',\r\n        id: key,\r\n        loading: true,\r\n    }))\r\n\r\nconst Foods = (props) => {\r\n\r\n    const [data, setData] = React.useState([{\r\n        key: '',\r\n        data: mockData\r\n    }]);\r\n    React.useEffect(() => {\r\n        foodApi.get()\r\n            .then(response => {\r\n                setData(response.data.data);\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n\r\n        return () => {\r\n            foodApi.cancel();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>Ассортимент</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n                <div className={\"foods\"}>\r\n                    <div>\r\n                        <Button onClick={() => props.history.push('/foods/create')}>\r\n                            Добавить\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                {data.map((item, key) => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <Divider orientation={\"left\"}>{item.key}</Divider>\r\n                            {item.data.map(dataItem => {\r\n                                return (\r\n                                    <List.Item\r\n                                        className={'cursor-pointer'}\r\n                                        key={dataItem.id}\r\n                                        onClick={() => props.history.push(`/foods/${dataItem.id}`)}\r\n                                        actions={[<Link onClick={(e) => e.stopPropagation()}\r\n                                                        to={`/foods/${dataItem.id}/edit`}\r\n                                                        key=\"list-loadmore-edit\">Изменить</Link>]}\r\n                                    >\r\n                                        <Skeleton avatar title={false} loading={dataItem.loading} active>\r\n                                            <List.Item.Meta\r\n                                                avatar={\r\n                                                    <LetterOrAvatar url={dataItem.img} letter={dataItem.letter}\r\n                                                                    name={dataItem.name}/>\r\n                                                }\r\n                                                title={<Link to={`/foods/${dataItem.id}`}>{dataItem.name}</Link>}\r\n                                                description=\"\"\r\n                                            />\r\n\r\n                                        </Skeleton>\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                {data.length === 0 && <Empty\r\n                    image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n                    imageStyle={{\r\n                        height: 60,\r\n                    }}\r\n                    description={\r\n                        <span>\r\n                         Нет данных\r\n                         </span>\r\n                    }\r\n                >\r\n                    <Button onClick={() => props.history.push('/foods/create')} type=\"primary\">Добавить</Button>\r\n                </Empty>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Foods;","import React from \"react\";\r\nimport {foodApi} from \"../../core/api\";\r\nimport {Skeleton, Card, Breadcrumb, Modal} from 'antd';\r\nimport {EditOutlined, DeleteOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Meta} = Card;\r\n\r\n\r\nconst {confirm} = Modal;\r\n\r\n\r\nconst Food = (props) => {\r\n    const [food, setFood] = React.useState({\r\n        name: ''\r\n    });\r\n\r\n    const showDeleteConfirm = id => {\r\n        confirm({\r\n            title: 'Удаление',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            content: 'Вы действительно хотите удалить клиента?',\r\n            okText: 'Да',\r\n            okType: 'danger',\r\n            cancelText: 'Отменить',\r\n            onOk() {\r\n                foodApi.delete(id).then(response => {\r\n                    props.history.replace('/foods');\r\n                })\r\n            },\r\n            onCancel() {\r\n\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true)\r\n        foodApi.show(props.match.params.id)\r\n            .then(response => {\r\n                if (null === response.data.food) {\r\n                    props.history.push('/404')\r\n                }\r\n\r\n                setFood(response.data.food);\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                props.history.push('/404')\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n\r\n    }, [props.match.params.id])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/foods\"}>Ассортимент</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>{food.name}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n\r\n            <Card\r\n                style={{width: '100%', marginTop: 16}}\r\n                actions={[\r\n                    <EditOutlined key=\"edit\"\r\n                                  onClick={() => props.history.push(`/foods/${props.match.params.id}/edit`, {\r\n                                      food: food\r\n                                  })}/>,\r\n                    <DeleteOutlined onClick={() => showDeleteConfirm(props.match.params.id)} key=\"delete\"/>,\r\n                ]}\r\n            >\r\n                <Skeleton loading={loading} avatar active>\r\n                    <Meta\r\n                        avatar={\r\n                            <LetterOrAvatar url={food.image} letter={food?.letter || ''} name={food.name || ''}/>\r\n                        }\r\n                        title={food.name}\r\n                    />\r\n                </Skeleton>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Food;","import React from \"react\";\r\nimport {Breadcrumb, Form, Input, notification, Upload} from \"antd\";\r\nimport {BookOutlined, DollarOutlined, UploadOutlined} from '@ant-design/icons';\r\n\r\nimport {useFormik} from \"formik\";\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\nimport {foodApi} from \"../../../core/api\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n\r\n    const rules = {\r\n        name: value => {\r\n            if (!value) {\r\n                errors.name = \"Укажите название\";\r\n            }\r\n        },\r\n\r\n        price: value => {\r\n            if (!value) {\r\n                errors.price = \"Укажите цену\";\r\n            }\r\n        }\r\n    }\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n\r\n    return errors;\r\n};\r\n\r\n\r\nconst openNotificationWithIcon = type => {\r\n    notification[type]({\r\n        message: 'Клиент',\r\n        description:\r\n            'Изменения успешно сохранены',\r\n    });\r\n};\r\n\r\nconst FoodForm = props => {\r\n    const [img, setImg] = React.useState(null);\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            price: '',\r\n            id: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            foodApi.save({\r\n                ...values,\r\n                image: img\r\n            }).then(response => {\r\n                openNotificationWithIcon('success')\r\n                props.history.push(`/foods/${response.data.food.id}`)\r\n            })\r\n        },\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (undefined !== props.location.state) {\r\n            formik.setValues(props.location.state.food)\r\n        } else if (props.match.params.hasOwnProperty('id')) {\r\n            foodApi.show(props.match.params.id)\r\n                .then(response => {\r\n                    formik.setValues(response.data.food)\r\n                })\r\n        }\r\n    }, [props.location.state, props.match.params])\r\n\r\n\r\n    const fileProps = {\r\n        beforeUpload: function (file) {\r\n            setImg(file)\r\n\r\n\r\n            // Prevent upload\r\n            return false;\r\n        },\r\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n        onChange({file, fileList}) {\r\n\r\n        },\r\n        defaultFileList: [],\r\n        showUploadList: {\r\n            // showDownloadIcon: true,\r\n            // downloadIcon: 'download ',\r\n            // showRemoveIcon: true,\r\n            // removeIcon: <StarOutlined onClick={e => console.log(e, 'custom removeIcon event')} />,\r\n        },\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/foods\"}>\r\n                        Ассортимент\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                {\r\n                    formik.values.id !== ''\r\n                        ?\r\n                        <React.Fragment>\r\n                            <Breadcrumb.Item>\r\n                                <Link to={\"/foods/\" + formik.values.id}>\r\n                                    {formik.values.name}\r\n                                </Link>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>Редактировать</Breadcrumb.Item>\r\n                        </React.Fragment>\r\n                        :\r\n                        <Breadcrumb.Item>Создать</Breadcrumb.Item>\r\n\r\n                }\r\n\r\n            </Breadcrumb>\r\n\r\n            <Block>\r\n                {formik.values &&\r\n                <Form onSubmit={formik.handleSubmit} className=\"food-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"name\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.name ? \"\" : formik.errors.name}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"name\"\r\n                            prefix={<BookOutlined type=\"book\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Название\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"price\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.price ? \"\" : formik.errors.price}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"price\"\r\n                            type={\"number\"}\r\n                            prefix={<DollarOutlined type=\"price\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Цена\"\r\n                            value={formik.values.price}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Upload {...fileProps}>\r\n                        <Button style={{marginBottom: 10}}>\r\n                            <UploadOutlined/> Загрузить\r\n                        </Button>\r\n                    </Upload>\r\n\r\n\r\n                    <Form.Item>\r\n                        {formik.isSubmitting && !formik.isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={formik.isSubmitting}\r\n                            onClick={formik.handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"medium\"\r\n                        >\r\n                            Сохранить\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>}\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FoodForm;","import React from 'react'\r\nimport {orderApi} from \"../../../core/api\";\r\nimport {Breadcrumb, Descriptions, Badge, List, Typography, Divider} from 'antd';\r\nimport {LetterOrAvatar} from \"../../../components\";\r\n\r\n\r\nimport './OrderShow.scss'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Title} = Typography;\r\n\r\n\r\nconst statuses = {\r\n    0: {\r\n        text: 'Не выполнено',\r\n        color: 'red'\r\n    },\r\n    1: {\r\n        text: 'Выполнено',\r\n        color: 'green'\r\n    }\r\n}\r\n\r\n\r\nconst ShowOrder = props => {\r\n    const [order, setOrder] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        orderApi.show(props.match.params.id)\r\n            .then(response => {\r\n                if (null === response.data.data) {\r\n                    props.history.push('/404')\r\n                }\r\n                setOrder(response.data.data);\r\n            })\r\n            .catch(err => {\r\n                props.history.push('/404')\r\n            })\r\n    }, [])\r\n\r\n    if (order === null) {\r\n        return <div>\r\n\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className={'site-content'}>\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/\"}>\r\n                        Заказы\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>{order?.name}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <div className={\"site-layout-content\"}>\r\n                <Descriptions title=\"Общая информация\">\r\n                    <Descriptions.Item label=\"Имя\">{order.name}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Номер телефона\">{order.phone}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Адрес\">{order.address || 'Не заполнено'}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Сумма заказа\">\r\n                        <Badge style={{backgroundColor: '#52c41a'}} count={order.total_sum + 'Р'}\r\n                               overflowCount={1000000}/>\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Дата доставки\">\r\n                        {order.date_delivery}\r\n                    </Descriptions.Item>\r\n\r\n                    <Descriptions.Item label=\"Статус\">\r\n                        <Badge color={statuses[order.status].color} text={statuses[order.status].text}/>\r\n                    </Descriptions.Item>\r\n\r\n                </Descriptions>\r\n\r\n                <Divider/>\r\n\r\n                <div>\r\n\r\n                    <Title level={4}>Заказ</Title>\r\n\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={order.foods}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    avatar={<LetterOrAvatar url={item.image} letter={item.letter} name={item.name}/>}\r\n                                    title={item.name}\r\n                                    description={<div className={\"order\"}>\r\n                                        <span>{item.pivot.comment}</span>\r\n                                        <Badge style={{backgroundColor: '#52c41a'}}\r\n                                               count={item.pivot.count + ' ' + item.pivot.unit}\r\n                                               overflowCount={1000000}/>\r\n                                    </div>}\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowOrder","import React from \"react\";\r\nimport _ from 'lodash';\r\nimport {clientApi, foodApi, orderApi} from \"../../../core/api\";\r\nimport {useFormik} from \"formik\";\r\n\r\nexport const FormContext = React.createContext({});\r\n\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n\r\n    const rules = {\r\n        clientId: value => {\r\n            if (!value) {\r\n                errors.clientId = \"Укажите клиента\";\r\n            }\r\n        },\r\n\r\n        date_delivery: value => {\r\n            if (!value) {\r\n                errors.date_delivery = \"Укажите дату доставки\";\r\n            }\r\n        },\r\n\r\n        time_delivery: value => {\r\n            if (!value) {\r\n                errors.time_delivery = \"Укажите время доставки\";\r\n            }\r\n        },\r\n    }\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n\r\n    return errors;\r\n};\r\n\r\n\r\nexport const FormProvider = ({children}) => {\r\n    const [cart, setCart] = React.useState([{\r\n        foodID: null,\r\n        count: \"1\",\r\n        unit: \"ШТ\",\r\n        comment: \"\",\r\n    }]);\r\n\r\n    const [sum, setSum] = React.useState(0);\r\n    const [order, setOrder] = React.useState(null);\r\n    const [foods, setFoods] = React.useState([]);\r\n    const [clients, setClients] = React.useState([]);\r\n\r\n    const [isReady, setIsReady] = React.useState(false);\r\n    const [selectedClient, setSelectedClient] = React.useState(null);\r\n    const [errors, setErrors] = React.useState([]);\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            clientId: '',\r\n            date_delivery: '',\r\n            time_delivery: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            handleSubmit();\r\n        },\r\n    })\r\n\r\n\r\n    const handleChange = (value, key, field) => {\r\n        let tempSum = 0;\r\n        const tempCart = _.cloneDeep(cart);\r\n        tempCart[key][field] = value || null;\r\n\r\n        setCart(tempCart);\r\n        tempCart.map(cartItem => {\r\n            const priceItem = _.find(foods, function (o) {\r\n                return o.id === cartItem.foodID\r\n            })\r\n\r\n            if (priceItem) {\r\n                tempSum += priceItem.price * parseInt(cartItem.count) || 0;\r\n            }\r\n\r\n        });\r\n\r\n        setSum(tempSum);\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n        Promise.all(\r\n            [\r\n                clientApi.getList()\r\n                    .then(response => {\r\n                        setClients(response.data);\r\n                    }),\r\n\r\n                foodApi.getList()\r\n                    .then(response => {\r\n                        setFoods(response.data);\r\n                    })\r\n            ]\r\n        )\r\n            .finally(_ => {\r\n                setIsReady(true);\r\n            })\r\n    }, [])\r\n\r\n\r\n    const handleChangeFood = (value, key, field) => {\r\n        let tempSum = 0;\r\n        const tempCart = _.cloneDeep(cart);\r\n        tempCart[key][field] = value || null;\r\n\r\n        setCart(tempCart);\r\n        tempCart.map(cartItem => {\r\n            const priceItem = _.find(foods, function (o) {\r\n                return o.id === cartItem.foodID\r\n            })\r\n\r\n            if (priceItem) {\r\n                tempSum += priceItem.price * parseInt(cartItem.count) || 0;\r\n            }\r\n\r\n        });\r\n\r\n        setSum(tempSum);\r\n    };\r\n\r\n    const pushItem = () => {\r\n        let tempCart = _.cloneDeep(cart);\r\n        tempCart.push({\r\n            foodID: null,\r\n            count: \"1\",\r\n            unit: \"ШТ\",\r\n            comment: \"\",\r\n        });\r\n\r\n        setCart(tempCart);\r\n\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        setErrors([]);\r\n\r\n        let tempCart = _.cloneDeep(cart);\r\n\r\n        if (tempCart.length !== 1) {\r\n            setCart(tempCart.splice(1, 1));\r\n        }\r\n\r\n\r\n        console.log(selectedClient);\r\n        console.log(cart);\r\n\r\n        const data = {\r\n            cart: tempCart.filter(item => item.foodID !== null),\r\n            client_id: formik.values.clientId,\r\n            date_delivery: [formik.values.date_delivery, formik.values.time_delivery].join(' '),\r\n            comment: '',\r\n            ...selectedClient,\r\n            total_sum: sum,\r\n\r\n        };\r\n\r\n        orderApi.save(data)\r\n            .then(response => {\r\n                setOrder(response.data);\r\n            })\r\n            .catch(error => {\r\n                if (error.response.data.errors.hasOwnProperty('cart')) {\r\n                    setErrors(Object.values(error.response.data.errors.cart));\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    return (\r\n        <FormContext.Provider\r\n            value={{\r\n                handleChange,\r\n                foods,\r\n                clients,\r\n                isReady,\r\n                selectedClient,\r\n                setSelectedClient,\r\n                handleChangeFood,\r\n                cart,\r\n                pushItem,\r\n                handleSubmit,\r\n                sum,\r\n                formik,\r\n                errors,\r\n                order\r\n            }}\r\n        >\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {FormContext} from \"./FormProvider\";\r\nimport {Select, DatePicker, TimePicker, Typography, Input, Divider, InputNumber, Button, Form, Alert} from 'antd';\r\nimport {validateField} from \"../../../utils/helpers/index\";\r\n\r\nconst {Option} = Select;\r\nconst {Title} = Typography;\r\n\r\n\r\nexport default () => {\r\n    const context = React.useContext(FormContext);\r\n    const refInput = React.useRef(null)\r\n\r\n    React.useEffect(_ => {\r\n        window.ref = refInput;\r\n    }, [context.isReady])\r\n\r\n    return (\r\n        <Form onSubmit={context.formik.handleSubmit} className={\"order-form\"}>\r\n            <Title level={4}>Общая информация</Title>\r\n\r\n            <div className={\"order-form__form\"}>\r\n                <Form.Item\r\n                    validateStatus={validateField(\"clientId\", context.formik.touched, context.formik.errors)}\r\n                    help={!context.formik.touched.clientId ? \"\" : context.formik.errors.clientId}\r\n                    hasFeedback\r\n                >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Выберите клиента\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(value) => {\r\n                            context.formik.setValues({\r\n                                ...context.formik.values,\r\n                                clientId: value\r\n                            })\r\n\r\n                            context.setSelectedClient(context.clients.find(item => item.id === value));\r\n\r\n                        }}\r\n                        filterOption={(input, option) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                    >\r\n                        {context.clients.map(client => <Option key={client.id}\r\n                                                               value={client.id}>{client.name}</Option>)}\r\n\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    validateStatus={validateField(\"date_delivery\", context.formik.touched, context.formik.errors)}\r\n                    help={!context.formik.touched.date_delivery ? \"\" : context.formik.errors.date_delivery}\r\n                    hasFeedback\r\n                >\r\n                    <DatePicker\r\n                        style={{width: '100%'}}\r\n                        ref={refInput}\r\n                        placeholder={\"Выберите дату доставки\"}\r\n                        onChange={(date, dateString) => context.formik.setValues({\r\n                            ...context.formik.values,\r\n                            date_delivery: dateString\r\n                        })}/>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item\r\n                    validateStatus={validateField(\"time_delivery\", context.formik.touched, context.formik.errors)}\r\n                    help={!context.formik.touched.time_delivery ? \"\" : context.formik.errors.time_delivery}\r\n                    hasFeedback\r\n                >\r\n                    <TimePicker\r\n                        style={{width: '100%'}}\r\n                        format={\"HH:mm\"}\r\n                        onChange={(date, dateString) => context.formik.setValues({\r\n                            ...context.formik.values,\r\n                            time_delivery: dateString\r\n                        })}\r\n                    />\r\n                </Form.Item>\r\n\r\n            </div>\r\n\r\n            {\r\n                context.selectedClient\r\n                &&\r\n                <div>\r\n                    <Divider/>\r\n\r\n                    <Title level={4}>Информация о клиенте</Title>\r\n\r\n                    <div className={\"order-form__form\"}>\r\n                        <Input placeholder={\"Имя\"} value={context.selectedClient.name}/>\r\n                        <Input placeholder={\"Номер\"} style={{marginTop: 5}} value={context.selectedClient.phone}/>\r\n                        <Input placeholder={\"Адрес \"} style={{marginTop: 5}} value={context.selectedClient.address}/>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            <div>\r\n                <Divider/>\r\n                <Title level={4}>Заказ</Title>\r\n\r\n                {context.errors.map(error => {\r\n                    return (\r\n                        <Alert message={error} type=\"error\" showIcon/>\r\n                    )\r\n                })}\r\n\r\n                {context.cart.map((cartItem, key) => {\r\n                    return (\r\n                        <React.Fragment key={key}>\r\n                            <Divider orientation={\"left\"}>{key + 1}</Divider>\r\n                            <div className={\"order-form__form\"}>\r\n                                <Select\r\n                                    showSearch\r\n                                    placeholder=\"Выберите блюдо\"\r\n                                    optionFilterProp=\"children\"\r\n                                    onChange={(value) => {\r\n                                        context.handleChangeFood(value, key, 'foodID')\r\n\r\n                                    }}\r\n                                    filterOption={(input, option) =>\r\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    {context.foods.map(food => <Option key={food.id}\r\n                                                                       value={food.id}>{food.name}</Option>)}\r\n\r\n                                </Select>\r\n\r\n                                <div style={{display: 'flex', marginTop: 5}}>\r\n                                    <InputNumber placeholder={\"Кол-во\"}\r\n                                                 value={cartItem.count}\r\n                                                 onChange={value => context.handleChangeFood(value, key, 'count')}\r\n                                                 style={{width: \"100%\"}}/>\r\n\r\n                                    <Select defaultValue={cartItem.unit} style={{width: \"100%\"}} onChange={value => {\r\n                                        context.handleChangeFood(value, key, 'unit')\r\n                                    }}>\r\n                                        <Option value=\"ШТ\">ШТ</Option>\r\n                                        <Option value=\"КГ\">КГ</Option>\r\n                                    </Select>\r\n                                </div>\r\n\r\n                                <Input style={{marginTop: 5}} placeholder={\"Комментарий\"} value={cartItem.comment}\r\n                                       onChange={e => context.handleChangeFood(e.target.value, key, 'comment')}/>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )\r\n                })}\r\n\r\n                <Button style={{marginTop: 5}} onClick={context.pushItem}>+</Button>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </Form>\r\n    )\r\n}","import React from \"react\";\r\nimport './CreateOrder.scss'\r\nimport {Breadcrumb, Button, Result} from \"antd\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport _form from './_form';\r\nimport {FormProvider, FormContext} from \"./FormProvider\";\r\n\r\nconst OrderForm = props => {\r\n    return (\r\n        <FormProvider>\r\n            <div className={\"site-content\"}>\r\n\r\n                <Breadcrumb style={{margin: '16px 0'}}>\r\n                    <Breadcrumb.Item>Заказы</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n\r\n                <div className={\"site-layout-content\"}>\r\n                    <Container/>\r\n                </div>\r\n\r\n            </div>\r\n        </FormProvider>\r\n    )\r\n}\r\n\r\n\r\nconst Send = () => {\r\n    const context = React.useContext(FormContext);\r\n\r\n    React.useEffect(_ => {\r\n    }, [])\r\n\r\n    return (\r\n        <Button onClick={context.formik.handleSubmit} type={\"primary\"} style={{marginTop: 5}}>Добавить\r\n            ({context.sum}Р)</Button>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst Success = ({order}) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Result\r\n            status=\"success\"\r\n            title=\"Заказ успешно добавлен\"\r\n            subTitle={`Заказ успешно добавлен под номером: ${order.id}`}\r\n            extra={[\r\n                <Button onClick={() => history.push(`/orders/${order.id}`)} type=\"primary\" key=\"console\">\r\n                    Перейти к заказу\r\n                </Button>,\r\n            ]}\r\n        />\r\n    )\r\n}\r\n\r\nconst Container = () => {\r\n    const {order} = React.useContext(FormContext);\r\n\r\n    React.useEffect(_ => {\r\n    }, [])\r\n\r\n    return (\r\n        null === order ? <React.Fragment>\r\n                <_form/>\r\n\r\n                <Send/>\r\n            </React.Fragment>\r\n            : <Success order={order}/>\r\n    )\r\n}\r\n\r\nexport default OrderForm","import React from 'react'\r\nimport {Layout, Menu, Result, Button } from 'antd';\r\nimport {Route, useHistory, Switch} from 'react-router-dom';\r\nimport Orders from \"../Orders\";\r\nimport Clients from \"../Clients\";\r\nimport Client from \"../Clients/Client\";\r\nimport ClientForm from \"../Clients/component/ClientForm\";\r\n\r\nimport Foods from \"../Foods\";\r\nimport Food from \"../Foods/Food\";\r\nimport FoodForm from \"../Foods/component/FoodForm\";\r\n\r\n\r\nimport {\r\n    PieChartOutlined,\r\n    UserOutlined,\r\n    ShopOutlined,\r\n    LoginOutlined\r\n} from '@ant-design/icons'\r\nimport {BottomNav} from \"../../components\";\r\nimport ShowOrder from \"../Orders/ShowOrder\";\r\nimport OrderForm from \"../Orders/OrderForm\";\r\nimport {userApi} from \"../../core/api\";\r\n\r\nconst {Content, Footer, Sider} = Layout;\r\n\r\nconst defaultSelected = () => {\r\n    if (window.location.pathname === '/') {\r\n        return \"1\"\r\n    } else if (window.location.pathname.includes('clients')) {\r\n        return \"2\";\r\n    } else if (window.location.pathname.includes('foods')) {\r\n        return \"3\";\r\n    }\r\n}\r\n\r\nconst HomePage = (props) => {\r\n    const [collapsed, setCollaps] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Layout className=\"layout\" style={{minHeight: '100vh'}}>\r\n\r\n            <Sider className={\"sider\"} collapsible collapsed={collapsed} onCollapse={() => setCollaps(!collapsed)}>\r\n                <div className=\"logo\"/>\r\n                <Menu theme=\"dark\" defaultSelectedKeys={[defaultSelected()]} mode=\"inline\">\r\n                    <Menu.Item key=\"1\" onClick={() => history.push('/')}>\r\n                        <PieChartOutlined/>\r\n                        <span>Заказы</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\" onClick={() => history.push('/clients')}>\r\n                        <UserOutlined/>\r\n                        <span>Клиенты</span>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"3\" onClick={() => history.push('/foods')}>\r\n                        <ShopOutlined/>\r\n                        <span>Ассортимент</span>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"4\" onClick={() => {\r\n                        if (window.confirm('Вы действительно хотите покинуть сайт ?')){\r\n                            userApi.logout();\r\n                        }\r\n                    }}>\r\n                        <LoginOutlined/>\r\n                        <span>Выйти</span>\r\n                    </Menu.Item>\r\n\r\n                </Menu>\r\n            </Sider>\r\n\r\n\r\n            <Layout>\r\n                <Content style={{padding: '0 50px'}}>\r\n\r\n                    <Switch>\r\n                        <Route exact path={'/'} component={Orders}/>\r\n                        <Route exact path={'/orders/create'} component={OrderForm}/>\r\n                        <Route exact path={'/orders/:id(\\\\d+)'} component={ShowOrder}/>\r\n\r\n                        <Route exact path={'/clients'} component={Clients}/>\r\n                        <Route exact path={'/clients/create'} component={ClientForm}/>\r\n                        <Route exact path={\"/clients/:id(\\\\d+)\"} component={Client}/>\r\n                        <Route exact path={'/clients/:id/edit'} component={ClientForm}/>\r\n                        <Route exact path={'/clients/:id/edit'} component={ClientForm}/>\r\n\r\n                        <Route exact path={'/foods'} component={Foods}/>\r\n                        <Route exact path={'/foods/create'} component={FoodForm}/>\r\n                        <Route exact path={\"/foods/:id(\\\\d+)\"} component={Food}/>\r\n                        <Route exact path={'/foods/:id/edit'} component={FoodForm}/>\r\n\r\n                        <Route component={() => {\r\n                            return (\r\n                                <Result\r\n                                    status=\"404\"\r\n                                    title=\"404\"\r\n                                    subTitle=\"Sorry, the page you visited does not exist.\"\r\n                                    extra={<Button onClick={() => history.push('/')} type=\"primary\">Вернуться на главную</Button>}\r\n                                />\r\n                            )\r\n                        }} />\r\n                    </Switch>\r\n\r\n\r\n                </Content>\r\n\r\n                {(/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)) && <BottomNav/> }\r\n\r\n                <Footer style={{textAlign: 'center'}}>Ant Design ©2018 Created by Ant UED</Footer>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport Auth from \"pages/Auth\";\nimport Home from \"pages/Home\";\nimport {connect} from 'react-redux'\n\nfunction App({user, isReady}) {\n\n    if (false === isReady) {\n        return (\n            <section className=\"auth\">\n                <div className=\"auth__content\">\n                    Загрузка...\n                </div>\n            </section>\n        )\n    }\n\n    return (\n        <div className=\"wrapper\">\n\n            <Switch>\n                <GuestRoute\n                    user={user}\n                    path={[\"/login\", \"/signup\"]}>\n                    <Auth/>\n                </GuestRoute>\n\n                <PrivateRoute user={user} path={\"/\"}>\n                    <Home/>\n                </PrivateRoute>\n\n\n\n            </Switch>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.userReducer.user,\n        isReady: state.appReducer.isReady\n    }\n}\n\nexport default connect(mapStateToProps)(App);\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({children, user, ...rest}) {\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                null !== user ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nfunction GuestRoute({children, user, ...rest}) {\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                null === user ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/\",\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {SET_USER} from \"../actionTypes\";\r\n\r\nexport default {\r\n    setUser: (payload) => ({\r\n        type: SET_USER,\r\n        payload: payload\r\n    })\r\n\r\n}","import {userApi} from \"../../core/api\";\r\nimport {userActions} from \"./index\";\r\nimport {APP_SET_IS_READY} from \"../actionTypes\";\r\n\r\nexport default {\r\n    init: function () {\r\n        return dispatch => {\r\n            userApi.me().then(response => {\r\n                dispatch(userActions.setUser(response.data));\r\n            }).catch(error => {\r\n                dispatch(userActions.setUser(null))\r\n            }).finally(() => {\r\n                dispatch(this.setAppIsready(true));\r\n            });\r\n        }\r\n    },\r\n\r\n    setAppIsready: (payload) => ({\r\n        type: APP_SET_IS_READY,\r\n        payload: payload\r\n    })\r\n\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport store from \"./redux/store\";\n\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {appActions} from \"./redux/actions\";\n\nfunction init() {\n    store.dispatch(appActions.init());\n}\n\ninit()\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","export const SET_USER = 'SET_USER';\r\nexport const APP_SET_IS_READY = 'APP:SET_IS_READY';\r\n"],"sourceRoot":""}