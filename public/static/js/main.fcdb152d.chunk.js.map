{"version":3,"sources":["redux/reducers/index.js","redux/reducers/appReducer.js","redux/reducers/userReducer.js","redux/reducers sync /^/.*$","components/Block/index.jsx","components/Button/index.jsx","utils/helpers/validateField.js","components/LetterOrAvatar/index.jsx","utils/helpers/getAvatarColor.js","components/BottomNav/index.jsx","pages/Auth/components/Login/components/LoginForm.jsx","utils/validate.js","core/config/axios.js","core/api/user.js","core/api/client.js","core/api/food.js","core/api/order.js","pages/Auth/components/Login/containers/LoginFormContainer.jsx","pages/Auth/components/Signup/components/RegisterForm.jsx","pages/Auth/components/Signup/containers/RegisterFormContainer.jsx","pages/Auth/index.jsx","pages/Orders/index.jsx","pages/Clients/index.jsx","pages/Clients/Client.jsx","pages/Clients/component/ClientForm.jsx","pages/Foods/index.jsx","pages/Foods/Food.jsx","pages/Foods/component/FoodForm.jsx","pages/Orders/ShowOrder/index.jsx","pages/Orders/OrderForm/FormProvider.js","pages/Orders/OrderForm/_form.jsx","pages/Orders/OrderForm/index.jsx","pages/Home/index.jsx","App.js","redux/store.js","serviceWorker.js","redux/actions/user.js","redux/actions/app.js","index.js","redux/actionTypes.js"],"names":["combineReducers","reduce","initial","name","require","default","initialState","isReady","state","type","payload","APP_SET_IS_READY","initialUser","user","SET_USER","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Block","children","className","classNames","Button","props","size","key","touched","errors","url","letter","src","bgColor","charCode","charCodeAt","background","color","avatarColor","style","backgroundColor","to","window","location","pathname","PieChartOutlined","includes","UserOutlined","ShopOutlined","LoginForm","values","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","onSubmit","Item","validateStatus","validateField","help","email","hasFeedback","prefix","MailOutlined","placeholder","value","onChange","onBlur","password","LockOutlined","disabled","onClick","isAuth","rules","test","password_confirmation","phone","forEach","axios","defaults","baseURL","process","withCredentials","data","csrf","then","response","post","remember","get","apiClient","save","put","params","getList","show","a","delete","apiFood","formData","FormData","append","price","image","apiOrder","setStatus","status","getStatistic","LoginFormContainer","withFormik","enableReinitialize","mapPropsToValues","validate","validateForm","setSubmitting","setErrors","userApi","catch","undefined","error","displayName","RegisterForm","fontSize","RegisterFormContainer","Auth","exact","path","component","statuses","0","text","1","2","mockData","Array","fill","item","loading","Orders","React","useState","orders","setOrders","date","setDate","useEffect","orderApi","date_from","margin","dateString","history","push","orderItem","avatar","title","active","Meta","description","Clients","setData","getOrders","clientApi","orientation","dataItem","actions","stopPropagation","Card","confirm","Modal","Client","client","setClient","setLoading","match","console","log","finally","width","marginTop","EditOutlined","DeleteOutlined","icon","ExclamationCircleOutlined","content","okText","okType","cancelText","onOk","replace","onCancel","ClientForm","formik","useFormik","initialValues","address","notification","message","setValues","hasOwnProperty","Fragment","PhoneOutlined","HomeOutlined","Foods","foodApi","img","Food","food","setFood","FoodForm","setImg","fileProps","beforeUpload","file","action","fileList","defaultFileList","showUploadList","BookOutlined","DollarOutlined","marginBottom","UploadOutlined","Title","Typography","ShowOrder","order","setOrder","err","label","count","total_sum","overflowCount","date_delivery","level","itemLayout","dataSource","foods","renderItem","pivot","comment","unit","FormContext","createContext","clientId","time_delivery","FormProvider","foodID","cart","setCart","sum","setSum","setFoods","clients","setClients","setIsReady","selectedClient","setSelectedClient","Promise","all","_","tempCart","cloneDeep","length","splice","filter","client_id","join","Provider","field","tempSum","cartItem","priceItem","find","parseInt","handleChangeFood","pushItem","Option","Select","context","useContext","refInput","useRef","ref","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","format","showIcon","display","defaultValue","target","Send","Success","useHistory","subTitle","extra","Container","_form","OrderForm","Content","Layout","Footer","Sider","HomePage","collapsed","setCollaps","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","padding","navigator","userAgent","textAlign","connect","userReducer","appReducer","GuestRoute","PrivateRoute","Home","rest","render","from","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","Boolean","hostname","init","dispatch","userActions","setAppIsready","appActions","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fcdb152d.chunk.js","sourcesContent":["import {combineReducers} from \"redux\";\r\n\r\nconst reducers = [\"userReducer\", \"appReducer\"];\r\n\r\nexport default combineReducers(\r\n    reducers.reduce((initial, name) => {\r\n        initial[name] = require(`./${name}`).default;\r\n        return initial;\r\n    }, {})\r\n);","import {APP_SET_IS_READY} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    isReady: false\r\n};\r\n\r\nexport default function (state = initialState, {type, payload}) {\r\n    if (type === APP_SET_IS_READY) {\r\n        return {\r\n            ...state,\r\n            isReady: payload\r\n        };\r\n    }\r\n\r\n    return state;\r\n}","import {SET_USER} from \"../actionTypes\";\r\n\r\nconst initialUser = {\r\n    user: null\r\n}\r\n\r\nexport default (state = initialUser, {type, payload}) => {\r\n    switch (type) {\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","var map = {\n\t\"./\": 114,\n\t\"./appReducer\": 248,\n\t\"./appReducer.js\": 248,\n\t\"./index\": 114,\n\t\"./index.js\": 114,\n\t\"./userReducer\": 249,\n\t\"./userReducer.js\": 249\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 551;","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Block.scss\";\r\n\r\nconst Block = ({ children, className }) => (\r\n    <div className={classNames(\"block\", className)}>{children}</div>\r\n);\r\n\r\nexport default Block;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button as BaseButton } from \"antd\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Button.scss\";\r\n\r\nconst Button = props => (\r\n    <BaseButton\r\n        {...props}\r\n        className={classNames(\"button\", props.className, {\r\n            \"button--large\": props.size === \"large\"\r\n        })}\r\n    />\r\n);\r\n\r\nButton.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default Button;","export default (key, touched, errors) => {\r\n    if (touched[key]) {\r\n        if (errors[key]) {\r\n            return \"error\";\r\n        } else {\r\n            return \"success\";\r\n        }\r\n    } else {\r\n        return \"\";\r\n    }\r\n};","import React from 'react';\r\nimport {avatarColor} from 'utils/helpers'\r\nimport {Avatar} from \"antd\";\r\n\r\nimport './LetterOrAvatar.scss';\r\n\r\nexport default ({url, letter, name}) => {\r\n    if (url) {\r\n        return <Avatar className={\"avatar\"} src={url}/>\r\n    }\r\n\r\n    const bgColor = avatarColor(name || letter);\r\n\r\n    return (\r\n        <div className={\"avatar\"} style={{backgroundColor: `${bgColor.background}`}}>\r\n            <div className={\"avatar__letter\"} style={{color: bgColor.color}}>\r\n                {letter}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","export default letter => {\r\n    const charCode = letter.charCodeAt();\r\n\r\n    if (charCode >= 1048 && charCode <= 1055) {\r\n        return {\r\n            background: '#F5D6D9',\r\n            color: '#F38181',\r\n        };\r\n    }\r\n    if (charCode >= 1049 && charCode <= 1063) {\r\n        return {\r\n            background: '#F8ECD5',\r\n            color: '#F1A32F',\r\n        };\r\n    }\r\n    if (charCode >= 1064 && charCode <= 1071) {\r\n        return {\r\n            background: '#DAD5F8',\r\n            color: '#816CFF',\r\n        };\r\n    }\r\n    return {\r\n        background: '#E9F5FF',\r\n        color: '#2A86FF',\r\n    };\r\n};","import React from \"react\";\r\nimport {\r\n    PieChartOutlined,\r\n    UserOutlined,\r\n    ShopOutlined\r\n} from '@ant-design/icons'\r\n\r\nimport './BottomNav.scss';\r\nimport {Link} from \"react-router-dom\";\r\nexport default () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <Link to=\"/\" className={window.location.pathname === '/' ? 'active' : ''}>\r\n                <PieChartOutlined/>\r\n                <span> Заказы</span>\r\n            </Link>\r\n            <Link to=\"/clients\" className={window.location.pathname.includes('clients')  ? 'active' : ''}>\r\n                <UserOutlined/>\r\n                <span> Клиенты</span>\r\n            </Link>\r\n\r\n            <Link to=\"/foods\" className={window.location.pathname.includes('foods')  ? 'active' : ''}>\r\n                <ShopOutlined/>\r\n                <span> Ассортимент</span>\r\n            </Link>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Form, Input} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {MailOutlined, LockOutlined} from '@ant-design/icons';\r\n\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\n\r\nconst LoginForm = props => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isValid,\r\n        isSubmitting\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"auth__top\">\r\n                <h2>Войти в аккаунт</h2>\r\n                <p>Пожалуйста, войдите в свой аккаунт</p>\r\n            </div>\r\n            <Block>\r\n                <Form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"email\", touched, errors)}\r\n                        help={!touched.email ? \"\" : errors.email}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"email\"\r\n                            prefix={<MailOutlined type=\"mail\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            placeholder=\"E-Mail\"\r\n                            value={values.email}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"password\", touched, errors)}\r\n                        help={!touched.password ? \"\" : errors.password}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"password\"\r\n                            prefix={<LockOutlined type=\"lock\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Пароль\"\r\n                            value={values.password}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={isSubmitting}\r\n                            onClick={handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"large\"\r\n                        >\r\n                            Войти в аккаунт\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <Link className=\"auth__register-link\" to=\"/signup\">\r\n                        Зарегистрироваться\r\n                    </Link>\r\n                </Form>\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","export default ({ isAuth, values, errors }) => {\r\n\r\n\r\n    const rules = {\r\n        email: value => {\r\n            if (!value) {\r\n                errors.email = \"Введите E-Mail\";\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n                errors.email = \"Неверный E-Mail\";\r\n            }\r\n        },\r\n        password: value => {\r\n            if (!value) {\r\n                errors.password = \"Введите пароль\";\r\n            } else if (\r\n                !isAuth &&\r\n                !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(value)\r\n            ) {\r\n                errors.password = \"Слишком лёгкий пароль\";\r\n            }\r\n        },\r\n        password_confirmation: value => {\r\n\r\n            if (!value) {\r\n                errors.password_confirmation = \"Введите пароль повторно\";\r\n            }\r\n\r\n            if (!isAuth || value !== values.password) {\r\n                errors.password_confirmation = \"Пароли не совпадают\";\r\n            }\r\n        },\r\n        name: value => {\r\n            if (!isAuth || !value) {\r\n                errors.name = \"Укажите имя и фамилию\";\r\n            }\r\n        },\r\n\r\n        phone: value => {\r\n            if (!isAuth || !value) {\r\n                errors.phone = \"Укажите номер телефона\";\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n};","import axios from 'axios';\r\n// axios.defaults.baseURL = 'http://diplom.gussi-gussi.com';\r\naxios.defaults.baseURL = process.env.REACT_APP_URL || 'http://192.168.31.183:8000';\r\naxios.defaults.withCredentials = true;\r\n\r\n\r\nexport default axios;","import axios from \"../config/axios\";\r\n\r\naxios.defaults.withCredentials = true;\r\nexport default {\r\n    register: (data) => {\r\n\r\n    },\r\n\r\n    login: (data) => {\r\n        return csrf().then(response => {\r\n            return axios.post('/login', {...data, remember: 'on'})\r\n        })\r\n\r\n    },\r\n\r\n    me: () => {\r\n        return csrf().then(response => {\r\n            return axios.get('/api/user')\r\n        })\r\n    },\r\n\r\n}\r\n\r\nfunction csrf() {\r\n    axios.defaults.withCredentials = true;\r\n    return axios.get('/sanctum/csrf-cookie')\r\n}","import axios from '../config/axios';\r\n\r\nconst apiClient = {\r\n    save: (data) => {\r\n        if (null !== data.id && \"\" !== data.id) {\r\n            return axios.put(`/api/clients/${data.id}`, data);\r\n        }\r\n\r\n\r\n        return axios.post('/api/clients', data);\r\n    },\r\n\r\n    get: (params = null) => {\r\n        return csrf().then(response => {\r\n           return  axios.get('/api/clients', params)\r\n        })\r\n    },\r\n\r\n    getList: (params = null) => {\r\n        return axios.get('/api/clients/list', params)\r\n    },\r\n\r\n    show: async (id) => {\r\n        return await axios.get(`/api/clients/${id}`);\r\n    },\r\n\r\n    delete: id => axios.delete(`/api/clients/${id}`)\r\n}\r\n\r\nfunction csrf() {\r\n    axios.defaults.withCredentials = true;\r\n    return axios.get('/sanctum/csrf-cookie')\r\n}\r\n\r\nexport default apiClient;","import axios from '../config/axios';\r\n\r\nconst apiFood = {\r\n    save: (data) => {\r\n        const formData = new FormData();\r\n        formData.append(\"name\", data.name);\r\n        formData.append(\"price\", data.price);\r\n\r\n        if (data.image !== null) {\r\n            formData.append(\"img\", data.image);\r\n        }\r\n\r\n\r\n        if (data.id) {\r\n            formData.append('_method', 'PATCH')\r\n            return axios.post(`/api/foods/${data.id}`, formData);\r\n        }\r\n\r\n\r\n        return axios.post('/api/foods', formData);\r\n    },\r\n\r\n    get: (params = null) => {\r\n        return axios.get('/api/foods', params)\r\n    },\r\n\r\n    getList: (params = null) => {\r\n        return axios.get('/api/foods/list', params);\r\n    },\r\n\r\n    show: (id) => {\r\n        return axios.get(`/api/foods/${id}`);\r\n    },\r\n\r\n    delete: id => axios.delete(`/api/foods/${id}`)\r\n}\r\n\r\nexport default apiFood;","import axios from '../config/axios';\r\n\r\nconst apiOrder = {\r\n    save: data => {\r\n        return axios.post('/api/orders', data);\r\n    },\r\n\r\n    get: (params = {}) => {\r\n        return axios.get('/api/orders', {params});\r\n    },\r\n\r\n    show: (id) => {\r\n        return axios.get(`/api/orders/${id}`);\r\n    },\r\n\r\n    setStatus: (id, status) => {\r\n        return axios.put(`/api/orders/${id}`, {status: status})\r\n    },\r\n\r\n    delete: id => {\r\n        return axios.delete(`/api/orders/${id}`);\r\n    },\r\n\r\n    getStatistic: (params, type) => {\r\n        return axios.get('/api/stats', {params: {...params, type}})\r\n    }\r\n}\r\n\r\nexport default apiOrder;","import {withFormik} from 'formik';\r\n\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nimport validateForm from 'utils/validate';\r\nimport {userApi} from \"core/api\";\r\n\r\nconst LoginFormContainer = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: '',\r\n    }),\r\n    validate: values => {\r\n        let errors = {};\r\n\r\n        validateForm({isAuth: true, values, errors});\r\n\r\n        return errors;\r\n    },\r\n    handleSubmit: async (values, {setSubmitting, setErrors, props}) => {\r\n        await userApi.login(values).catch(errors => {\r\n            if (errors.response !== undefined) {\r\n                let error = {};\r\n                Object.keys(errors.response.data.errors).forEach(key => {\r\n                    error[key] = errors.response.data.errors[key][0];\r\n                });\r\n                setErrors(error)\r\n            }\r\n        }).then(response => {\r\n            userApi.me();\r\n            setSubmitting(false);\r\n        });\r\n    },\r\n    displayName: 'LoginForm',\r\n})(LoginForm);\r\n\r\nexport default LoginFormContainer;","import React from \"react\";\r\nimport {Form, Input} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {MailOutlined, LockOutlined, UserOutlined} from '@ant-design/icons';\r\n\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\n\r\nconst RegisterForm = props => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isValid,\r\n        isSubmitting\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"auth__top\">\r\n                <h2>Зарегистрироваться</h2>\r\n                <p style={{fontSize: 14}}>Пожалуйста, пройдите регистрацию</p>\r\n            </div>\r\n            <Block>\r\n                <Form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"email\", touched, errors)}\r\n                        help={!touched.email ? \"\" : errors.email}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"email\"\r\n                            prefix={<MailOutlined type=\"mail\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            placeholder=\"E-Mail\"\r\n                            value={values.email}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"name\", touched, errors)}\r\n                        help={!touched.name ? \"\" : errors.name}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"name\"\r\n                            prefix={<UserOutlined type=\"user\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            placeholder=\"Имя\"\r\n                            value={values.name}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"password\", touched, errors)}\r\n                        help={!touched.password ? \"\" : errors.password}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"password\"\r\n                            prefix={<LockOutlined type=\"lock\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Пароль\"\r\n                            value={values.password}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"password_confirmation\", touched, errors)}\r\n                        help={!touched.password_confirmation ? \"\" : errors.password_confirmation}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"password_confirmation\"\r\n                            prefix={<LockOutlined type=\"lock\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Повторите пароль\"\r\n                            value={values.password_confirmation}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={isSubmitting}\r\n                            onClick={handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"large\"\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <Link className=\"auth__register-link\" to=\"/login\">\r\n                        У меня уже есть аккаунт\r\n                    </Link>\r\n                </Form>\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;","import {withFormik} from 'formik';\r\n\r\nimport RegisterForm from '../components/RegisterForm';\r\n\r\nimport validateForm from 'utils/validate';\r\nimport {userApi} from \"core/api\";\r\n\r\nconst RegisterFormContainer = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: '',\r\n        name: '',\r\n        password_confirmation: ''\r\n    }),\r\n    validate: values => {\r\n        let errors = {};\r\n\r\n        validateForm({isAuth: true, values, errors});\r\n\r\n\r\n        return errors;\r\n    },\r\n    handleSubmit: async (values, {setSubmitting, setErrors, props}) => {\r\n        await userApi.register(values).catch(errors => {\r\n            if (errors.response !== undefined) {\r\n                let error = {};\r\n                Object.keys(errors.response.data.errors).forEach(key => {\r\n                    error[key] = errors.response.data.errors[key][0];\r\n                })\r\n                setErrors(error)\r\n            }\r\n            userApi.me();\r\n            setSubmitting(false);\r\n        });\r\n    },\r\n    displayName: 'RegisterForm',\r\n})(RegisterForm);\r\n\r\nexport default RegisterFormContainer;","import React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\n\r\nimport LoginFormContainer from \"./components/Login/containers/LoginFormContainer\";\r\nimport RegisterFormContainer from \"./components/Signup/containers/RegisterFormContainer\";\r\n\r\nimport \"./Auth.scss\";\r\n\r\n\r\nconst Auth = () => (\r\n    <section className=\"auth\">\r\n        <div className=\"auth__content\">\r\n            <Route exact path=\"/login\" component={LoginFormContainer}/>\r\n            <Route exact path=\"/signup\" component={RegisterFormContainer}/>\r\n        </div>\r\n    </section>\r\n);\r\n\r\nexport default Auth;","import React from 'react';\r\nimport {List, Skeleton, Breadcrumb, Divider, DatePicker, Button, Badge} from 'antd';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {orderApi} from \"../../core/api\";\r\n\r\nimport './Orders.scss'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst statuses = {\r\n    0: {\r\n        text: 'Не выполнено',\r\n        color: 'red'\r\n    },\r\n    1: {\r\n        text: 'Выполнено',\r\n        color: 'green'\r\n    },\r\n\r\n    2: {\r\n        text: 'Выполнено',\r\n        color: 'green'\r\n    }\r\n}\r\n\r\nconst mockData = Array(5)\r\n    .fill(0)\r\n    .map((item, key) => ({\r\n        name: '',\r\n        letter: '',\r\n        id: key,\r\n        loading: true,\r\n        status: 0,\r\n    }))\r\n\r\n//\r\nconst Orders = (props) => {\r\n\r\n    const [orders, setOrders] = React.useState([{\r\n        key: '',\r\n        data: mockData\r\n    }]);\r\n    const [date, setDate] = React.useState(\"2020-04-11\");\r\n    React.useEffect(() => {\r\n        orderApi.get({date_from: date})\r\n            .then(response => {\r\n                setOrders(response.data);\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n    }, [date])\r\n\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>Заказы</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n\r\n                <div className={\"orders\"}>\r\n                    <DatePicker placeholder={\"Заказы от\"} onChange={(date, dateString) => setDate(dateString)}/>\r\n\r\n                    <Button onClick={() => props.history.push('/orders/create')}>\r\n                        Добавить\r\n                    </Button>\r\n\r\n                </div>\r\n\r\n\r\n                {orders.map((item, key) => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <Divider>{item.key}</Divider>\r\n                            {item.data.map(orderItem => {\r\n                                return (\r\n                                    <List.Item\r\n                                        className={'cursor-pointer'}\r\n                                        onClick={() => props.history.push('/orders/' + orderItem.id)}\r\n                                        key={orderItem.id}\r\n                                    >\r\n                                        <Skeleton avatar title={false} loading={orderItem.loading} active>\r\n                                            <List.Item.Meta\r\n                                                avatar={\r\n                                                    <LetterOrAvatar letter={orderItem.letter} name={orderItem.name}/>\r\n                                                }\r\n                                                title={<Link to={`/orders/${orderItem.id}`}>{orderItem.name}</Link>}\r\n                                                description={<Badge color={statuses[orderItem.status].color}\r\n                                                                    text={statuses[orderItem.status].text}/>}\r\n                                            />\r\n\r\n                                        </Skeleton>\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders;","import React from 'react';\r\nimport {List, Skeleton, Breadcrumb, Divider, Button} from 'antd';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {clientApi} from \"../../core/api\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport './Clients.scss';\r\nconst mockData = Array(5)\r\n    .fill(0)\r\n    .map((item, key) => ({\r\n        name: '',\r\n        letter: '',\r\n        id: key,\r\n        loading: true,\r\n    }))\r\n\r\nconst Clients = (props) => {\r\n\r\n    const [data, setData] = React.useState([{\r\n        key: '',\r\n        data: mockData\r\n    }]);\r\n    React.useEffect(() => {\r\n        getOrders();\r\n    }, [])\r\n\r\n    const getOrders = () => {\r\n        clientApi.get()\r\n            .then(response => {\r\n                setData(response.data.data);\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>Клиенты</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n                <div className={\"clients\"}>\r\n                    <div>\r\n                        <Button onClick={() => props.history.push('/clients/create')}>\r\n                            Добавить\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                {data.map((item, key) => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <Divider orientation={\"left\"}>{item.key}</Divider>\r\n                            {item.data.map(dataItem => {\r\n                                return (\r\n                                    <List.Item\r\n                                        className={'cursor-pointer'}\r\n                                        key={dataItem.id}\r\n                                        onClick={() => props.history.push(`/clients/${dataItem.id}`)}\r\n                                        actions={[<Link onClick={(e) => e.stopPropagation()} to={`/clients/${dataItem.id}/edit`}\r\n                                                        key=\"list-loadmore-edit\">Изменить</Link>]}\r\n                                    >\r\n                                        <Skeleton avatar title={false} loading={dataItem.loading} active>\r\n                                            <List.Item.Meta\r\n                                                avatar={\r\n                                                    <LetterOrAvatar letter={dataItem.letter} name={dataItem.name}/>\r\n                                                }\r\n                                                title={<Link to={`/clients/${dataItem.id}`}>{dataItem.name}</Link>}\r\n                                                description=\"\"\r\n                                            />\r\n\r\n                                        </Skeleton>\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clients;","import React from \"react\";\r\nimport {clientApi} from \"../../core/api\";\r\nimport {Skeleton, Card, Breadcrumb, Modal} from 'antd';\r\nimport {EditOutlined, DeleteOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Meta} = Card;\r\n\r\n\r\nconst {confirm} = Modal;\r\n\r\n\r\nconst Client = (props) => {\r\n    const [client, setClient] = React.useState({\r\n        name: ''\r\n    });\r\n\r\n    const showDeleteConfirm = id => {\r\n        confirm({\r\n            title: 'Удаление',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            content: 'Вы действительно хотите удалить клиента?',\r\n            okText: 'Да',\r\n            okType: 'danger',\r\n            cancelText: 'Отменить',\r\n            onOk() {\r\n                clientApi.delete(id).then(response => {\r\n                    props.history.replace('/clients');\r\n                })\r\n            },\r\n            onCancel() {\r\n\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true)\r\n        clientApi.show(props.match.params.id)\r\n            .then(response => {\r\n\r\n                if (null === response.data.client) {\r\n                    props.history.push('/404')\r\n                }\r\n\r\n                setClient(response.data.client);\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                props.history.push('/404')\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n\r\n    }, [props.match.params.id])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/clients\"}>Клиенты</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>{client.name}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n\r\n            <Card\r\n                style={{width: '100%', marginTop: 16}}\r\n                actions={[\r\n                    <EditOutlined key=\"edit\"\r\n                                  onClick={() => props.history.push(`/clients/${props.match.params.id}/edit`, {\r\n                                      client: client\r\n                                  })}/>,\r\n                    <DeleteOutlined onClick={() => showDeleteConfirm(props.match.params.id)} key=\"delete\"/>,\r\n                ]}\r\n            >\r\n                <Skeleton loading={loading} avatar active>\r\n                    <Meta\r\n                        avatar={\r\n                            <LetterOrAvatar letter={client?.letter || ''} name={client.name || ''}/>\r\n                        }\r\n                        title={client.name}\r\n                    />\r\n                </Skeleton>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Client;","import React from \"react\";\r\nimport {Breadcrumb, Form, Input, notification } from \"antd\";\r\nimport {PhoneOutlined, UserOutlined, HomeOutlined} from '@ant-design/icons';\r\n\r\nimport {useFormik} from \"formik\";\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\nimport {clientApi} from \"../../../core/api\";\r\nimport apiClient from \"../../../core/api/client\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n\r\n    const rules = {\r\n        name: value => {\r\n            if (!value) {\r\n                errors.name = \"Укажите имя и фамилию\";\r\n            }\r\n        },\r\n\r\n        phone: value => {\r\n            if (!value) {\r\n                errors.phone = \"Укажите номер телефона\";\r\n            }\r\n        }\r\n    }\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n\r\n    return errors;\r\n};\r\n\r\n\r\nconst openNotificationWithIcon = type => {\r\n    notification[type]({\r\n        message: 'Клиент',\r\n        description:\r\n            'Изменения успешно сохранены',\r\n    });\r\n};\r\n\r\nconst ClientForm = props => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            phone: '',\r\n            address: '',\r\n            id: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            apiClient.save(values).then(response => {\r\n                openNotificationWithIcon('success')\r\n                props.history.push(`/clients/${response.data.client.id}`)\r\n            })\r\n        },\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (undefined !== props.location.state) {\r\n            formik.setValues(props.location.state.client)\r\n        } else if (props.match.params.hasOwnProperty('id')) {\r\n            clientApi.show(props.match.params.id)\r\n                .then(response => {\r\n                    formik.setValues(response.data.client)\r\n                })\r\n        }\r\n\r\n    }, [props.location.state, props.match.params])\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/clients\"}>\r\n                        Клиенты\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                {\r\n                    formik.values.id !== ''\r\n                        ?\r\n                        <React.Fragment>\r\n                            <Breadcrumb.Item>\r\n                                <Link to={\"/clients/\" + formik.values.id}>\r\n                                    {formik.values.name}\r\n                                </Link>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>Редактировать</Breadcrumb.Item>\r\n                        </React.Fragment>\r\n                        :\r\n                        <Breadcrumb.Item>Создать</Breadcrumb.Item>\r\n\r\n                }\r\n\r\n            </Breadcrumb>\r\n\r\n            <Block>\r\n                {formik.values &&\r\n                <Form onSubmit={formik.handleSubmit} className=\"client-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"name\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.name ? \"\" : formik.errors.name}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"name\"\r\n                            prefix={<UserOutlined type=\"user\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Имя\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"phone\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.phone ? \"\" : formik.errors.phone}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"phone\"\r\n                            prefix={<PhoneOutlined type=\"phone\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"+7(999)999-99-99\"\r\n                            value={formik.values.phone}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"address\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.address ? \"\" : formik.errors.address}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"address\"\r\n                            prefix={<HomeOutlined type=\"home\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Адрес доставки\"\r\n                            value={formik.values.address}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item>\r\n                        {formik.isSubmitting && !formik.isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={formik.isSubmitting}\r\n                            onClick={formik.handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"medium\"\r\n                        >\r\n                            Сохранить\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>}\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClientForm;","import React from 'react';\r\nimport {List, Skeleton, Breadcrumb, Divider, Button} from 'antd';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {foodApi} from \"../../core/api\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport './Foods.scss';\r\nconst mockData = Array(5)\r\n    .fill(0)\r\n    .map((item, key) => ({\r\n        name: '',\r\n        letter: '',\r\n        id: key,\r\n        loading: true,\r\n    }))\r\n\r\nconst Foods = (props) => {\r\n\r\n    const [data, setData] = React.useState([{\r\n        key: '',\r\n        data: mockData\r\n    }]);\r\n    React.useEffect(() => {\r\n        foodApi.get()\r\n            .then(response => {\r\n                setData(response.data.data);\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={\"site-content\"}>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>Ассортимент</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n                <div className={\"foods\"}>\r\n                    <div>\r\n                        <Button onClick={() => props.history.push('/foods/create')}>\r\n                            Добавить\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                {data.map((item, key) => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <Divider orientation={\"left\"}>{item.key}</Divider>\r\n                            {item.data.map(dataItem => {\r\n                                return (\r\n                                    <List.Item\r\n                                        className={'cursor-pointer'}\r\n                                        key={dataItem.id}\r\n                                        onClick={() => props.history.push(`/foods/${dataItem.id}`)}\r\n                                        actions={[<Link onClick={(e) => e.stopPropagation()} to={`/foods/${dataItem.id}/edit`}\r\n                                                        key=\"list-loadmore-edit\">Изменить</Link>]}\r\n                                    >\r\n                                        <Skeleton avatar title={false} loading={dataItem.loading} active>\r\n                                            <List.Item.Meta\r\n                                                avatar={\r\n                                                    <LetterOrAvatar url={dataItem.img} letter={dataItem.letter} name={dataItem.name}/>\r\n                                                }\r\n                                                title={<Link to={`/foods/${dataItem.id}`}>{dataItem.name}</Link>}\r\n                                                description=\"\"\r\n                                            />\r\n\r\n                                        </Skeleton>\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Foods;","import React from \"react\";\r\nimport {foodApi} from \"../../core/api\";\r\nimport {Skeleton, Card, Breadcrumb, Modal} from 'antd';\r\nimport {EditOutlined, DeleteOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport {LetterOrAvatar} from \"../../components\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Meta} = Card;\r\n\r\n\r\nconst {confirm} = Modal;\r\n\r\n\r\nconst Food = (props) => {\r\n    const [food, setFood] = React.useState({\r\n        name: ''\r\n    });\r\n\r\n    const showDeleteConfirm = id => {\r\n        confirm({\r\n            title: 'Удаление',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            content: 'Вы действительно хотите удалить клиента?',\r\n            okText: 'Да',\r\n            okType: 'danger',\r\n            cancelText: 'Отменить',\r\n            onOk() {\r\n                foodApi.delete(id).then(response => {\r\n                    props.history.replace('/foods');\r\n                })\r\n            },\r\n            onCancel() {\r\n\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true)\r\n        foodApi.show(props.match.params.id)\r\n            .then(response => {\r\n                if (null === response.data.food) {\r\n                    props.history.push('/404')\r\n                }\r\n\r\n                setFood(response.data.food);\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                props.history.push('/404')\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n\r\n    }, [props.match.params.id])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/foods\"}>Ассортимент</Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>{food.name}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n\r\n            <Card\r\n                style={{width: '100%', marginTop: 16}}\r\n                actions={[\r\n                    <EditOutlined key=\"edit\"\r\n                                  onClick={() => props.history.push(`/foods/${props.match.params.id}/edit`, {\r\n                                      food: food\r\n                                  })}/>,\r\n                    <DeleteOutlined onClick={() => showDeleteConfirm(props.match.params.id)} key=\"delete\"/>,\r\n                ]}\r\n            >\r\n                <Skeleton loading={loading} avatar active>\r\n                    <Meta\r\n                        avatar={\r\n                            <LetterOrAvatar url={food.image} letter={food?.letter || ''} name={food.name || ''}/>\r\n                        }\r\n                        title={food.name}\r\n                    />\r\n                </Skeleton>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Food;","import React from \"react\";\r\nimport {Breadcrumb, Form, Input, notification, Upload} from \"antd\";\r\nimport {BookOutlined, DollarOutlined, UploadOutlined} from '@ant-design/icons';\r\n\r\nimport {useFormik} from \"formik\";\r\nimport {Button, Block} from \"components\";\r\nimport {validateField} from \"utils/helpers\";\r\nimport {foodApi} from \"../../../core/api\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n\r\n    const rules = {\r\n        name: value => {\r\n            if (!value) {\r\n                errors.name = \"Укажите название\";\r\n            }\r\n        },\r\n\r\n        price: value => {\r\n            if (!value) {\r\n                errors.price = \"Укажите цену\";\r\n            }\r\n        }\r\n    }\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n\r\n    return errors;\r\n};\r\n\r\n\r\nconst openNotificationWithIcon = type => {\r\n    notification[type]({\r\n        message: 'Клиент',\r\n        description:\r\n            'Изменения успешно сохранены',\r\n    });\r\n};\r\n\r\nconst FoodForm = props => {\r\n    const [img, setImg] = React.useState(null);\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            price: '',\r\n            id: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            foodApi.save({\r\n                ...values,\r\n                image: img\r\n            }).then(response => {\r\n                openNotificationWithIcon('success')\r\n                props.history.push(`/foods/${response.data.food.id}`)\r\n            })\r\n        },\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (undefined !== props.location.state) {\r\n            formik.setValues(props.location.state.food)\r\n        } else if (props.match.params.hasOwnProperty('id')) {\r\n            foodApi.show(props.match.params.id)\r\n                .then(response => {\r\n                    formik.setValues(response.data.food)\r\n                })\r\n        }\r\n    }, [props.location.state, props.match.params])\r\n\r\n\r\n    const fileProps = {\r\n        beforeUpload: function (file) {\r\n            setImg(file)\r\n\r\n\r\n            // Prevent upload\r\n            return false;\r\n        },\r\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n        onChange({file, fileList}) {\r\n\r\n        },\r\n        defaultFileList: [],\r\n        showUploadList: {\r\n            // showDownloadIcon: true,\r\n            // downloadIcon: 'download ',\r\n            // showRemoveIcon: true,\r\n            // removeIcon: <StarOutlined onClick={e => console.log(e, 'custom removeIcon event')} />,\r\n        },\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/foods\"}>\r\n                        Ассортимент\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                {\r\n                    formik.values.id !== ''\r\n                        ?\r\n                        <React.Fragment>\r\n                            <Breadcrumb.Item>\r\n                                <Link to={\"/foods/\" + formik.values.id}>\r\n                                    {formik.values.name}\r\n                                </Link>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>Редактировать</Breadcrumb.Item>\r\n                        </React.Fragment>\r\n                        :\r\n                        <Breadcrumb.Item>Создать</Breadcrumb.Item>\r\n\r\n                }\r\n\r\n            </Breadcrumb>\r\n\r\n            <Block>\r\n                {formik.values &&\r\n                <Form onSubmit={formik.handleSubmit} className=\"food-form\">\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"name\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.name ? \"\" : formik.errors.name}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"name\"\r\n                            prefix={<BookOutlined type=\"book\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Название\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        validateStatus={validateField(\"price\", formik.touched, formik.errors)}\r\n                        help={!formik.touched.price ? \"\" : formik.errors.price}\r\n                        hasFeedback\r\n                    >\r\n                        <Input\r\n                            id=\"price\"\r\n                            type={\"number\"}\r\n                            prefix={<DollarOutlined type=\"price\" style={{color: \"rgba(0,0,0,.25)\"}}/>}\r\n                            size=\"medium\"\r\n                            placeholder=\"Цена\"\r\n                            value={formik.values.price}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                        />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Upload {...fileProps}>\r\n                        <Button style={{marginBottom: 10}}>\r\n                            <UploadOutlined/> Загрузить\r\n                        </Button>\r\n                    </Upload>\r\n\r\n\r\n                    <Form.Item>\r\n                        {formik.isSubmitting && !formik.isValid && <span>Ошибка!</span>}\r\n                        <Button\r\n                            disabled={formik.isSubmitting}\r\n                            onClick={formik.handleSubmit}\r\n                            type=\"primary\"\r\n                            size=\"medium\"\r\n                        >\r\n                            Сохранить\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>}\r\n            </Block>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FoodForm;","import React from 'react'\r\nimport {orderApi} from \"../../../core/api\";\r\nimport {Breadcrumb, Descriptions, Badge, List, Typography, Divider} from 'antd';\r\nimport {LetterOrAvatar} from \"../../../components\";\r\n\r\n\r\nimport './OrderShow.scss'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Title} = Typography;\r\n\r\n\r\nconst statuses = {\r\n    0: {\r\n        text: 'Не выполнено',\r\n        color: 'red'\r\n    },\r\n    1: {\r\n        text: 'Выполнено',\r\n        color: 'green'\r\n    }\r\n}\r\n\r\n\r\nconst ShowOrder = props => {\r\n    const [order, setOrder] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        orderApi.show(props.match.params.id)\r\n            .then(response => {\r\n                setOrder(response.data.data);\r\n            })\r\n            .catch(err => {\r\n                props.history.push('/404')\r\n            })\r\n    }, [])\r\n\r\n    if (order === null) {\r\n        return <div>\r\n\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className={'site-content'}>\r\n\r\n            <Breadcrumb style={{margin: '16px 0'}}>\r\n                <Breadcrumb.Item>\r\n                    <Link to={\"/orders\"}>\r\n                        Заказы\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>{order?.client.name}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <div className={\"site-layout-content\"}>\r\n                <Descriptions title=\"Общая информация\">\r\n                    <Descriptions.Item label=\"Имя\">{order.name}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Номер телефона\">{order.phone}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Адрес\">{order.address || 'Не заполнено'}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Сумма заказа\">\r\n                        <Badge style={{backgroundColor: '#52c41a'}} count={order.total_sum + 'Р'}\r\n                               overflowCount={1000000}/>\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Дата доставки\">\r\n                        {order.date_delivery}\r\n                    </Descriptions.Item>\r\n\r\n                    <Descriptions.Item label=\"Статус\">\r\n                        <Badge color={statuses[order.status].color} text={statuses[order.status].text}/>\r\n                    </Descriptions.Item>\r\n\r\n                </Descriptions>\r\n\r\n                <Divider/>\r\n\r\n                <div>\r\n\r\n                    <Title level={4}>Заказ</Title>\r\n\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={order.foods}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    avatar={<LetterOrAvatar url={item.img} letter={item.letter} name={item.name}/>}\r\n                                    title={item.name}\r\n                                    description={<div className={\"order\"}>\r\n                                        <span>{item.pivot.comment}</span>\r\n                                        <Badge style={{backgroundColor: '#52c41a'}}\r\n                                               count={item.pivot.count + ' ' + item.pivot.unit}\r\n                                               overflowCount={1000000}/>\r\n                                    </div>}\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowOrder","import React from \"react\";\r\nimport _ from 'lodash';\r\nimport {clientApi, foodApi, orderApi} from \"../../../core/api\";\r\nimport {useFormik} from \"formik\";\r\n\r\nexport const FormContext = React.createContext({});\r\n\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n\r\n    const rules = {\r\n        clientId: value => {\r\n            if (!value) {\r\n                errors.clientId = \"Укажите клиента\";\r\n            }\r\n        },\r\n\r\n        date_delivery: value => {\r\n            if (!value) {\r\n                errors.date_delivery = \"Укажите дату доставки\";\r\n            }\r\n        },\r\n\r\n        time_delivery: value => {\r\n            if (!value) {\r\n                errors.time_delivery = \"Укажите время доставки\";\r\n            }\r\n        },\r\n    }\r\n\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n\r\n    return errors;\r\n};\r\n\r\n\r\nexport const FormProvider = ({children}) => {\r\n    const [cart, setCart] = React.useState([{\r\n        foodID: null,\r\n        count: \"1\",\r\n        unit: \"ШТ\",\r\n        comment: \"\",\r\n    }]);\r\n\r\n    const [sum, setSum] = React.useState(0);\r\n    const [order, setOrder] = React.useState(null);\r\n    const [foods, setFoods] = React.useState([]);\r\n    const [clients, setClients] = React.useState([]);\r\n\r\n    const [isReady, setIsReady] = React.useState(false);\r\n    const [selectedClient, setSelectedClient] = React.useState(null);\r\n    const [errors, setErrors] = React.useState([]);\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            clientId: '',\r\n            date_delivery: '',\r\n            time_delivery: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            handleSubmit();\r\n        },\r\n    })\r\n\r\n\r\n    const handleChange = (value, key, field) => {\r\n        let tempSum = 0;\r\n        const tempCart = _.cloneDeep(cart);\r\n        tempCart[key][field] = value || null;\r\n\r\n        setCart(tempCart);\r\n        tempCart.map(cartItem => {\r\n            const priceItem = _.find(foods, function (o) {\r\n                return o.id === cartItem.foodID\r\n            })\r\n\r\n            if (priceItem) {\r\n                tempSum += priceItem.price * parseInt(cartItem.count) || 0;\r\n            }\r\n\r\n        });\r\n\r\n        setSum(tempSum);\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n        Promise.all(\r\n            [\r\n                clientApi.getList()\r\n                    .then(response => {\r\n                        setClients(response.data);\r\n                    }),\r\n\r\n                foodApi.getList()\r\n                    .then(response => {\r\n                        setFoods(response.data);\r\n                    })\r\n            ]\r\n        )\r\n            .finally(_ => {\r\n                setIsReady(true);\r\n            })\r\n    }, [])\r\n\r\n\r\n    const handleChangeFood = (value, key, field) => {\r\n        let tempSum = 0;\r\n        const tempCart = _.cloneDeep(cart);\r\n        tempCart[key][field] = value || null;\r\n\r\n        setCart(tempCart);\r\n        tempCart.map(cartItem => {\r\n            const priceItem = _.find(foods, function (o) {\r\n                return o.id === cartItem.foodID\r\n            })\r\n\r\n            if (priceItem) {\r\n                tempSum += priceItem.price * parseInt(cartItem.count) || 0;\r\n            }\r\n\r\n        });\r\n\r\n        setSum(tempSum);\r\n    };\r\n\r\n    const pushItem = () => {\r\n        let tempCart = _.cloneDeep(cart);\r\n        tempCart.push({\r\n            foodID: null,\r\n            count: \"1\",\r\n            unit: \"ШТ\",\r\n            comment: \"\",\r\n        });\r\n\r\n        setCart(tempCart);\r\n\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        setErrors([]);\r\n\r\n        let tempCart = _.cloneDeep(cart);\r\n\r\n        if (tempCart.length !== 1) {\r\n            setCart(tempCart.splice(1, 1));\r\n        }\r\n\r\n\r\n        console.log(selectedClient);\r\n        console.log(cart);\r\n\r\n        const data = {\r\n            cart: tempCart.filter(item => item.foodID !== null),\r\n            client_id: formik.values.clientId,\r\n            date_delivery: [formik.values.date_delivery, formik.values.time_delivery].join(' '),\r\n            comment: '',\r\n            ...selectedClient,\r\n            total_sum: sum,\r\n\r\n        };\r\n\r\n        orderApi.save(data)\r\n            .then(response => {\r\n                setOrder(response.data);\r\n            })\r\n            .catch(error => {\r\n                if (error.response.data.errors.hasOwnProperty('cart')) {\r\n                    setErrors(Object.values(error.response.data.errors.cart));\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    return (\r\n        <FormContext.Provider\r\n            value={{\r\n                handleChange,\r\n                foods,\r\n                clients,\r\n                isReady,\r\n                selectedClient,\r\n                setSelectedClient,\r\n                handleChangeFood,\r\n                cart,\r\n                pushItem,\r\n                handleSubmit,\r\n                sum,\r\n                formik,\r\n                errors,\r\n                order\r\n            }}\r\n        >\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {FormContext} from \"./FormProvider\";\r\nimport {Select, DatePicker, TimePicker, Typography, Input, Divider, InputNumber, Button, Form, Alert} from 'antd';\r\nimport {validateField} from \"../../../utils/helpers/index\";\r\n\r\nconst {Option} = Select;\r\nconst {Title} = Typography;\r\n\r\n\r\nexport default () => {\r\n    const context = React.useContext(FormContext);\r\n    const refInput = React.useRef(null)\r\n\r\n    React.useEffect(_ => {\r\n        window.ref = refInput;\r\n    }, [context.isReady])\r\n\r\n    return (\r\n        <Form onSubmit={context.formik.handleSubmit} className={\"order-form\"}>\r\n            <Title level={4}>Общая информация</Title>\r\n\r\n            <div className={\"order-form__form\"}>\r\n                <Form.Item\r\n                    validateStatus={validateField(\"clientId\", context.formik.touched, context.formik.errors)}\r\n                    help={!context.formik.touched.clientId ? \"\" : context.formik.errors.clientId}\r\n                    hasFeedback\r\n                >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Выберите клиента\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(value) => {\r\n                            context.formik.setValues({\r\n                                ...context.formik.values,\r\n                                clientId: value\r\n                            })\r\n\r\n                            context.setSelectedClient(context.clients.find(item => item.id === value));\r\n\r\n                        }}\r\n                        filterOption={(input, option) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                    >\r\n                        {context.clients.map(client => <Option key={client.id}\r\n                                                               value={client.id}>{client.name}</Option>)}\r\n\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    validateStatus={validateField(\"date_delivery\", context.formik.touched, context.formik.errors)}\r\n                    help={!context.formik.touched.date_delivery ? \"\" : context.formik.errors.date_delivery}\r\n                    hasFeedback\r\n                >\r\n                    <DatePicker\r\n                        style={{width: '100%'}}\r\n                        ref={refInput}\r\n                        placeholder={\"Выберите дату доставки\"}\r\n                        onChange={(date, dateString) => context.formik.setValues({\r\n                            ...context.formik.values,\r\n                            date_delivery: dateString\r\n                        })}/>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item\r\n                    validateStatus={validateField(\"time_delivery\", context.formik.touched, context.formik.errors)}\r\n                    help={!context.formik.touched.time_delivery ? \"\" : context.formik.errors.time_delivery}\r\n                    hasFeedback\r\n                >\r\n                    <TimePicker\r\n                        style={{width: '100%'}}\r\n                        format={\"HH:mm\"}\r\n                        onChange={(date, dateString) => context.formik.setValues({\r\n                            ...context.formik.values,\r\n                            time_delivery: dateString\r\n                        })}\r\n                    />\r\n                </Form.Item>\r\n\r\n            </div>\r\n\r\n            {\r\n                context.selectedClient\r\n                &&\r\n                <div>\r\n                    <Divider/>\r\n\r\n                    <Title level={4}>Информация о клиенте</Title>\r\n\r\n                    <div className={\"order-form__form\"}>\r\n                        <Input placeholder={\"Имя\"} value={context.selectedClient.name}/>\r\n                        <Input placeholder={\"Номер\"} style={{marginTop: 5}} value={context.selectedClient.phone}/>\r\n                        <Input placeholder={\"Адрес \"} style={{marginTop: 5}} value={context.selectedClient.address}/>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            <div>\r\n                <Divider/>\r\n                <Title level={4}>Заказ</Title>\r\n\r\n                {context.errors.map(error => {\r\n                    return (\r\n                        <Alert message={error} type=\"error\" showIcon/>\r\n                    )\r\n                })}\r\n\r\n                {context.cart.map((cartItem, key) => {\r\n                    return (\r\n                        <React.Fragment key={key}>\r\n                            <Divider orientation={\"left\"}>{key + 1}</Divider>\r\n                            <div className={\"order-form__form\"}>\r\n                                <Select\r\n                                    showSearch\r\n                                    placeholder=\"Выберите блюдо\"\r\n                                    optionFilterProp=\"children\"\r\n                                    onChange={(value) => {\r\n                                        context.handleChangeFood(value, key, 'foodID')\r\n\r\n                                    }}\r\n                                    filterOption={(input, option) =>\r\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    {context.foods.map(food => <Option key={food.id}\r\n                                                                       value={food.id}>{food.name}</Option>)}\r\n\r\n                                </Select>\r\n\r\n                                <div style={{display: 'flex', marginTop: 5}}>\r\n                                    <InputNumber placeholder={\"Кол-во\"}\r\n                                                 value={cartItem.count}\r\n                                                 onChange={value => context.handleChangeFood(value, key, 'count')}\r\n                                                 style={{width: \"100%\"}}/>\r\n\r\n                                    <Select defaultValue={cartItem.unit} style={{width: \"100%\"}} onChange={value => {\r\n                                        context.handleChangeFood(value, key, 'unit')\r\n                                    }}>\r\n                                        <Option value=\"ШТ\">ШТ</Option>\r\n                                        <Option value=\"КГ\">КГ</Option>\r\n                                    </Select>\r\n                                </div>\r\n\r\n                                <Input style={{marginTop: 5}} placeholder={\"Комментарий\"} value={cartItem.comment}\r\n                                       onChange={e => context.handleChangeFood(e.target.value, key, 'comment')}/>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )\r\n                })}\r\n\r\n                <Button style={{marginTop: 5}} onClick={context.pushItem}>+</Button>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </Form>\r\n    )\r\n}","import React from \"react\";\r\nimport './CreateOrder.scss'\r\nimport {Breadcrumb, Button, Result} from \"antd\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport _form from './_form';\r\nimport {FormProvider, FormContext} from \"./FormProvider\";\r\n\r\nconst OrderForm = props => {\r\n    return (\r\n        <FormProvider>\r\n            <div className={\"site-content\"}>\r\n\r\n                <Breadcrumb style={{margin: '16px 0'}}>\r\n                    <Breadcrumb.Item>Заказы</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n\r\n                <div className={\"site-layout-content\"}>\r\n                    <Container/>\r\n                </div>\r\n\r\n            </div>\r\n        </FormProvider>\r\n    )\r\n}\r\n\r\n\r\nconst Send = () => {\r\n    const context = React.useContext(FormContext);\r\n\r\n    React.useEffect(_ => {\r\n    }, [])\r\n\r\n    return (\r\n        <Button onClick={context.formik.handleSubmit} type={\"primary\"} style={{marginTop: 5}}>Добавить\r\n            ({context.sum}Р)</Button>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst Success = ({order}) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Result\r\n            status=\"success\"\r\n            title=\"Заказ успешно добавлен\"\r\n            subTitle={`Заказ успешно добавлен под номером: ${order.id}`}\r\n            extra={[\r\n                <Button onClick={() => history.push(`/orders/${order.id}`)} type=\"primary\" key=\"console\">\r\n                    Перейти к заказу\r\n                </Button>,\r\n            ]}\r\n        />\r\n    )\r\n}\r\n\r\nconst Container = () => {\r\n    const {order} = React.useContext(FormContext);\r\n\r\n    React.useEffect(_ => {\r\n    }, [])\r\n\r\n    return (\r\n        null === order ? <React.Fragment>\r\n                <_form/>\r\n\r\n                <Send/>\r\n            </React.Fragment>\r\n            : <Success order={order}/>\r\n    )\r\n}\r\n\r\nexport default OrderForm","import React from 'react'\r\nimport {Layout, Menu, Result, Button } from 'antd';\r\nimport {Route, useHistory, Switch} from 'react-router-dom';\r\nimport Orders from \"../Orders\";\r\nimport Clients from \"../Clients\";\r\nimport Client from \"../Clients/Client\";\r\nimport ClientForm from \"../Clients/component/ClientForm\";\r\n\r\nimport Foods from \"../Foods\";\r\nimport Food from \"../Foods/Food\";\r\nimport FoodForm from \"../Foods/component/FoodForm\";\r\n\r\n\r\nimport {\r\n    PieChartOutlined,\r\n    UserOutlined,\r\n    ShopOutlined\r\n} from '@ant-design/icons'\r\nimport {BottomNav} from \"../../components\";\r\nimport ShowOrder from \"../Orders/ShowOrder\";\r\nimport OrderForm from \"../Orders/OrderForm\";\r\n\r\nconst {Content, Footer, Sider} = Layout;\r\n\r\nconst defaultSelected = () => {\r\n    if (window.location.pathname === '/') {\r\n        return \"1\"\r\n    } else if (window.location.pathname.includes('clients')) {\r\n        return \"2\";\r\n    } else if (window.location.pathname.includes('foods')) {\r\n        return \"3\";\r\n    }\r\n}\r\n\r\nconst HomePage = (props) => {\r\n    const [collapsed, setCollaps] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Layout className=\"layout\" style={{minHeight: '100vh'}}>\r\n\r\n            <Sider className={\"sider\"} collapsible collapsed={collapsed} onCollapse={() => setCollaps(!collapsed)}>\r\n                <div className=\"logo\"/>\r\n                <Menu theme=\"dark\" defaultSelectedKeys={[defaultSelected()]} mode=\"inline\">\r\n                    <Menu.Item key=\"1\" onClick={() => history.push('/')}>\r\n                        <PieChartOutlined/>\r\n                        <span>Заказы</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\" onClick={() => history.push('/clients')}>\r\n                        <UserOutlined/>\r\n                        <span>Клиенты</span>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"3\" onClick={() => history.push('/foods')}>\r\n                        <ShopOutlined/>\r\n                        <span>Ассортимент</span>\r\n                    </Menu.Item>\r\n\r\n                </Menu>\r\n            </Sider>\r\n\r\n\r\n            <Layout>\r\n                <Content style={{padding: '0 50px'}}>\r\n\r\n                    <Switch>\r\n                        <Route exact path={'/'} component={Orders}/>\r\n                        <Route exact path={'/orders/create'} component={OrderForm}/>\r\n                        <Route exact path={'/orders/:id(\\\\d+)'} component={ShowOrder}/>\r\n\r\n                        <Route exact path={'/clients'} component={Clients}/>\r\n                        <Route exact path={'/clients/create'} component={ClientForm}/>\r\n                        <Route exact path={\"/clients/:id(\\\\d+)\"} component={Client}/>\r\n                        <Route exact path={'/clients/:id/edit'} component={ClientForm}/>\r\n                        <Route exact path={'/clients/:id/edit'} component={ClientForm}/>\r\n\r\n                        <Route exact path={'/foods'} component={Foods}/>\r\n                        <Route exact path={'/foods/create'} component={FoodForm}/>\r\n                        <Route exact path={\"/foods/:id(\\\\d+)\"} component={Food}/>\r\n                        <Route exact path={'/foods/:id/edit'} component={FoodForm}/>\r\n\r\n                        <Route component={() => {\r\n                            return (\r\n                                <Result\r\n                                    status=\"404\"\r\n                                    title=\"404\"\r\n                                    subTitle=\"Sorry, the page you visited does not exist.\"\r\n                                    extra={<Button onClick={() => history.push('/')} type=\"primary\">Вернуться на главную</Button>}\r\n                                />\r\n                            )\r\n                        }} />\r\n                    </Switch>\r\n\r\n\r\n                </Content>\r\n\r\n                {(/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)) && <BottomNav/> }\r\n\r\n                <Footer style={{textAlign: 'center'}}>Ant Design ©2018 Created by Ant UED</Footer>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport Auth from \"pages/Auth\";\nimport Home from \"pages/Home\";\nimport {connect} from 'react-redux'\n\nfunction App({user, isReady}) {\n\n    if (false === isReady) {\n        return (\n            <section className=\"auth\">\n                <div className=\"auth__content\">\n                    Загрузка...\n                </div>\n            </section>\n        )\n    }\n\n    return (\n        <div className=\"wrapper\">\n\n            <Switch>\n                <GuestRoute\n                    user={user}\n                    path={[\"/login\", \"/signup\"]}>\n                    <Auth/>\n                </GuestRoute>\n\n                <PrivateRoute user={user} path={\"/\"}>\n                    <Home/>\n                </PrivateRoute>\n\n\n\n            </Switch>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.userReducer.user,\n        isReady: state.appReducer.isReady\n    }\n}\n\nexport default connect(mapStateToProps)(App);\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({children, user, ...rest}) {\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                null !== user ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nfunction GuestRoute({children, user, ...rest}) {\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                null === user ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/\",\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {SET_USER} from \"../actionTypes\";\r\n\r\nexport default {\r\n    setUser: (payload) => ({\r\n        type: SET_USER,\r\n        payload: payload\r\n    })\r\n\r\n}","import {userApi} from \"../../core/api\";\r\nimport {userActions} from \"./index\";\r\nimport {APP_SET_IS_READY} from \"../actionTypes\";\r\n\r\nexport default {\r\n    init: function () {\r\n        return dispatch => {\r\n            userApi.me().then(response => {\r\n                dispatch(userActions.setUser(response.data));\r\n            }).catch(error => {\r\n                dispatch(userActions.setUser(null))\r\n            }).finally(() => {\r\n                dispatch(this.setAppIsready(true));\r\n            });\r\n        }\r\n    },\r\n\r\n    setAppIsready: (payload) => ({\r\n        type: APP_SET_IS_READY,\r\n        payload: payload\r\n    })\r\n\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport store from \"./redux/store\";\n\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {appActions} from \"./redux/actions\";\n\nfunction init() {\n    store.dispatch(appActions.init());\n}\n\ninit()\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const SET_USER = 'SET_USER';\r\nexport const APP_SET_IS_READY = 'APP:SET_IS_READY';\r\n"],"sourceRoot":""}